cset: moving following pidspec: 8723
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.326884329 seconds)
loading group "string"... done (took 0.620406825 seconds)
loading group "linalg"... done (took 7.998819013 seconds)
loading group "parallel"... done (took 0.171040817 seconds)
loading group "find"... done (took 1.207693975 seconds)
loading group "tuple"... done (took 1.968233052 seconds)
loading group "dates"... done (took 1.348575371 seconds)
loading group "micro"... done (took 0.234998236 seconds)
loading group "io"... done (took 0.976854621 seconds)
loading group "scalar"... done (took 40.829520957 seconds)
loading group "sparse"... done (took 13.055372778 seconds)
loading group "broadcast"... done (took 1.061829436 seconds)
loading group "union"... done (took 13.401951661 seconds)
loading group "simd"... done (took 4.989763005 seconds)
loading group "random"... done (took 9.803049199 seconds)
loading group "problem"... done (took 2.008636736 seconds)
loading group "array"... done (took 22.448076625 seconds)
loading group "misc"... done (took 1.869239776 seconds)
loading group "sort"... done (took 3.733765525 seconds)
loading group "collection"... done (took 18.996823776 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.585475776 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13444321 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136440631 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.129128524 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.159723606 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.127244948 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.138102324 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098233749 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.932170857 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.160612228 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.126273725 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.435229563 seconds)
done (took 5.758086926 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.182141713 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091107699 seconds)
    (2/2) benchmarking "String"...
    done (took 0.092588423 seconds)
  done (took 1.412317948 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078663646 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.134606924 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.075079062 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075825874 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07703702 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076823871 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.07759011 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077215154 seconds)
  done (took 1.823001081 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.081179883 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076998172 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073745541 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075930473 seconds)
  done (took 1.539214407 seconds)
done (took 6.276154829 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.812586925 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.223299758 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.196799168 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.420220925 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.141882905 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184779969 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645065783 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320875017 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.198637347 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083911152 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117701102 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35346935 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13583867 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.656631898 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086201232 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.103064575 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.148212059 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427223173 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.074865594 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090586584 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09691104 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.136048554 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.096698597 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083649169 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15288483 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.075568307 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144003924 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08867049 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074526869 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.226677229 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180234286 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663511537 seconds)
  done (took 10.709782144 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.107649402 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.112243136 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078501764 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13660466 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.111608177 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080527953 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085508533 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077414695 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.101544465 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.145921119 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.103867251 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.114995994 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.076649299 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079457598 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.095953849 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.216261495 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08825136 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.090170144 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078663697 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086947863 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116335391 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.087945668 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091444519 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091434288 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.140008487 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.188775599 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110034881 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10790452 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077117861 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094511011 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.124676415 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.139862015 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076783565 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076137609 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.139454956 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.105087947 seconds)
  done (took 5.105505919 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.053732467 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.156206069 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102388903 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146792288 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.07573334 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.120124146 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.076024125 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094881501 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.225686701 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.369556852 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.642978341 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122245982 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116288734 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078371883 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079393885 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078191989 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.575400839 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109471729 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120657865 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093563861 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081368773 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080296036 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368144338 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07875618 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.074842218 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079325274 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06840245 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.135904517 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07885353 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.000444543 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170423478 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07375325 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109834401 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.178229202 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.234814984 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154548626 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080433612 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074822671 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167850929 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080361127 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07617792 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.095487844 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11409473 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12488034 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07541189 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074313671 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.173527278 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073363493 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087460682 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.124565298 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.160437698 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.108295561 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078026694 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.292776862 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10157442 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080337604 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075292144 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.209365914 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136440595 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.078326212 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078064679 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078937723 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079999179 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39736923 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.07391244 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.217821998 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075728071 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084197957 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077680595 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077341932 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081075011 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081306083 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099974141 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.103428259 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074959256 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.076735266 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.084753332 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076605192 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076345224 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.077362612 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.094049191 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.411826568 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074668779 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077903453 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075201114 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.10047053 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.214316837 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07881353 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.075917429 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.1111028 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.075639745 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077901272 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.077992457 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.124430629 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076781719 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.093929978 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081066677 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.123211182 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07793889 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.118282566 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076708972 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107159854 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.080806582 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.075194536 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113616399 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087512622 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076463786 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.45626184 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073910136 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.073805583 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076168285 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073494981 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.076878254 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073977767 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085810484 seconds)
  done (took 23.426809686 seconds)
done (took 41.527819641 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.26988265 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08791492 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085524082 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.085534597 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085548542 seconds)
  done (took 1.931315192 seconds)
done (took 3.232469171 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.136458242 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111843744 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076184122 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109336333 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075032049 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114040869 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113268116 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.088551732 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112337634 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.074939927 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109763534 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075344546 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074812242 seconds)
  done (took 2.587560581 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093300662 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.094918975 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080658562 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095687728 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073789361 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.095882861 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093460707 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101441933 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094057725 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083324655 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074569317 seconds)
  done (took 2.274550151 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091627441 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.096277934 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080768486 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.093978456 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073817168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093879958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095691276 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097882692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0937099 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085404885 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07452661 seconds)
  done (took 2.259056898 seconds)
done (took 8.405590961 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.086058013 seconds)
  done (took 1.361798269 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.588277876 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.983946296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.089984847 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.117823404 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.209276029 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.128126285 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27433686 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.098572776 seconds)
  done (took 8.947809577 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.115375442 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08180746 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082561383 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.079076917 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081848922 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07931253 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080405382 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082234022 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.08184349 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08007128 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.081069957 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.079319186 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082883935 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08002354 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.07855269 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.079046763 seconds)
  done (took 2.675328933 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.103239932 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103096719 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.084125744 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085606604 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.082338946 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.082535595 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.084542203 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.083930869 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081341012 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.082351018 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.084425525 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.083927065 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.081739084 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.074227348 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.084821684 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.085755324 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.081210661 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.084623733 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085084261 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.085707226 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.085327293 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.07471441 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.082466144 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.084076595 seconds)
  done (took 3.419373621 seconds)
done (took 17.69202914 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114770707 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0754661 seconds)
  done (took 1.479067093 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.088658421 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0918469 seconds)
  done (took 1.471872696 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.089879703 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.073762217 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.097108869 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.085327374 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.074456635 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0736825 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.093954176 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.074431342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.074407734 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.073901875 seconds)
  done (took 2.103899166 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.075861433 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084922477 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.078260076 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.089597433 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.082178534 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.07325768 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082242233 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.078364701 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.087192383 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07294638 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.081131617 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.093374884 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.081345483 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.094478459 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.083781937 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.078286793 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.080685269 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.076861208 seconds)
  done (took 2.766249674 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.074039158 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.074905853 seconds)
  done (took 1.450589918 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.074521008 seconds)
    (2/7) benchmarking "second"...
    done (took 0.07127309 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073949555 seconds)
    (4/7) benchmarking "year"...
    done (took 0.07366934 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.072281494 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.072311927 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.073171071 seconds)
  done (took 1.808447718 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.407360586 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.130387856 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340194899 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081649387 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.091034242 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.278143055 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074071925 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07954476 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.080287801 seconds)
  done (took 2.903315298 seconds)
done (took 15.288933288 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0885545 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.094768873 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.107649398 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.397029064 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098950724 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074170684 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.120821579 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.200512946 seconds)
done (took 2.495273989 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.22220242 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.709253749 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.45380352 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.224875986 seconds)
  done (took 2.690542013 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.362392697 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098965135 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069011193 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07807191 seconds)
  done (took 1.918838165 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073729495 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07803015 seconds)
  done (took 1.462872031 seconds)
done (took 7.606948307 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074342168 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09582911 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07622525 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.074290501 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.076667721 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073899852 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.073900683 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.074426744 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076460279 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.076295434 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07576353 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.076656869 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.076624931 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076647745 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082176778 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073656894 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074182113 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.192210485 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.072539451 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073238375 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073601961 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076324784 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073575789 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073352573 seconds)
  done (took 3.288220572 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.092765326 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073875684 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079512849 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078968049 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.079716736 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08167808 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.081740514 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.07585453 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082135597 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.078789912 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080026543 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079673019 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078405888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079885307 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078911427 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08030788 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082445419 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076227902 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078386011 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.079764321 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.081442094 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07622608 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.079686385 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081647813 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.079883498 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07963491 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.078079591 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.076154 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081856208 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.079535848 seconds)
  done (took 3.712897945 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.077786927 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071169884 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.073105574 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.08169619 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.073368732 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.074611593 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.073242686 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.074257397 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.074247159 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.073744456 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.075474575 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.073406173 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07379286 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.074187081 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.074486733 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077397345 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.089904412 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.0741947 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07394316 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.074037965 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.076570689 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077062841 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.073750546 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073332574 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.073399567 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073649279 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.073872392 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073610737 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.074506801 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.073887382 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076679066 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.077802594 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.073397229 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.081003521 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.077265721 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073598969 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.077493956 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073760715 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.073843245 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07341715 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.07380592 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.074213891 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.073545587 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081099929 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.073921068 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.075049113 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07390349 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.075486381 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.074998773 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.076813625 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073211988 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.073296221 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.075663807 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.074850835 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078218723 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07338802 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.074330945 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073692986 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.074227056 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.073401851 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073114496 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.072896958 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.076322382 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.073841794 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090017169 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.081790738 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.073725182 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.075403133 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.074313356 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.076875118 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.075357884 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.088251577 seconds)
  done (took 6.761004684 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.097958169 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094576124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.073229353 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075492867 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071969983 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074935068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080924152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073972474 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075570673 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093396243 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074178324 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075474215 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075576934 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078039976 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074883164 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075720102 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082231254 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072260975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.074254085 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078631559 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074364786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080260135 seconds)
  done (took 3.058186563 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.161207316 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07885031 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.116758064 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086098259 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.079922287 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085400452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.080053381 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080010142 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079915667 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077236046 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07750897 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079899079 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079899095 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077830415 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077081354 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077717678 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079802867 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077206432 seconds)
  done (took 2.875723067 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.083717027 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.073509964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.094975921 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.075494356 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.075859167 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078812582 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080175276 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.084086608 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.078930372 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.075889836 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.083767842 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078331788 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.07899971 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075824804 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07895719 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076330497 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.079105343 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076189456 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084477351 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080017429 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.080147409 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084393285 seconds)
  done (took 3.080861218 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087384218 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076054998 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091862608 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.078576047 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.071468486 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.074378687 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.08008327 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.075890419 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.080197239 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.077868902 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07573637 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.074925067 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.078684597 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076010773 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.079768491 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075712256 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078133496 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075941995 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078080062 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.072076744 seconds)
  done (took 2.88391388 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.094022951 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077808142 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078804383 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085838519 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077921092 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078070147 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085163129 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078255031 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078122572 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099058595 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078009437 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079008234 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084856745 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082563291 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081468702 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084695287 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085214956 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085135497 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079128013 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077920652 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099476544 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078129389 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085290373 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078997551 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078093116 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077822537 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077936086 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082024342 seconds)
  done (took 3.64290032 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074354805 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073644243 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07179189 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073163246 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.073451165 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.074051538 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.074528893 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.073920051 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076727427 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073825212 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.076842592 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.076187834 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076441763 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.076480357 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076594506 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076522704 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07567973 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07373861 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073662451 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07337163 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.076638318 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076323703 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075976399 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07346801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073506697 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.075995397 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073522848 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074476909 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076348879 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073664007 seconds)
  done (took 3.580521405 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.0826122 seconds)
    (2/2) benchmarking "in"...
    done (took 0.08119258 seconds)
  done (took 1.500783377 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.071196921 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089003372 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.073958455 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081378299 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.079429766 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.077170497 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.083493405 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079314036 seconds)
  done (took 1.966690493 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090478776 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.087860604 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.078075509 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.088527131 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.087736848 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.093859816 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.148858132 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.077336842 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.082837066 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.075604666 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.090204567 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.075791151 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083369814 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076644894 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.082571578 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083309946 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.074241481 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.082228838 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.079013758 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.075323065 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077253645 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.085260011 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.080866297 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.071217527 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077677333 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.100189323 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087878953 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.075710314 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079531983 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.085096907 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08328289 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07024343 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.075953489 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.077316639 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.074893398 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.086767992 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092221951 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080035054 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.085470593 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076984277 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08585223 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.071379552 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.081215054 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.083552328 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087696184 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.076906492 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.077245857 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.071322372 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.075618953 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081919327 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.071555883 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076870792 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.071208718 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083684026 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.080957917 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087430515 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.076029135 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.078940806 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.079718429 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.080777234 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.084502943 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.079328071 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079389974 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.076883297 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087416347 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.081889562 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085625492 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.071420465 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070422862 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.074471799 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.087100333 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100821055 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.083120318 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.077178426 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077227853 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.07406494 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079493905 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07680648 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082021606 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.083130916 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.076755728 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082023743 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084124936 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.076913949 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.079270785 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084278478 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.075594415 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.079595932 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.075158082 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093953754 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.07599149 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.074895748 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.074647702 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090563492 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08038298 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.07621565 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.074875064 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085277661 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070538893 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.077061352 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077507861 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077929096 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.087842226 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.081424694 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082278153 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085824579 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.084320945 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076622626 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.078374353 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.072292894 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076140438 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074485711 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.082668878 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070137368 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078669152 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.076590624 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.076266706 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.084170737 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.073869877 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.07494654 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.082646524 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.081541218 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.074146679 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072712216 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.079628519 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.075281462 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07771048 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083453455 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.07359933 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.069139982 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069892372 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.079173427 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.074860863 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078950776 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081096232 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07893549 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06992136 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.07350285 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.079481933 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.084199657 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.076542059 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.076750075 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.081828664 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.077073759 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.074934196 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.082850041 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.078347448 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07488708 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.081265158 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.076516446 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.070270206 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077317601 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.078137351 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.074381287 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07927546 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078523176 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.078217284 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.075610869 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074123483 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08119834 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075898608 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.074689224 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075624793 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.074754686 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.086201716 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.077160747 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.070220284 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.072254159 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082389279 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.073658127 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.074864642 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.075528683 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.077595629 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.075970686 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.073071406 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.075023865 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.077726965 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084691335 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.0787289 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07578618 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.081079372 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08789482 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.076325418 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.078021615 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.074964846 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076340892 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.075641537 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.085248521 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.081215613 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.080108943 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.077877071 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.072427077 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080782145 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083252603 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.075269082 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.073014763 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.074546366 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.078796396 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.081072524 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.079091454 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.075719305 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074038985 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076295609 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07769693 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.077534269 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.074339215 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.074315684 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080034866 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.07277487 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.08067165 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074931576 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.085487591 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078460682 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.069854436 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077286419 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073062085 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.081526337 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.070195854 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.072913511 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.074275734 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.075013122 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.073600303 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.077485569 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.069011841 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.321588378 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085271808 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081085734 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079174895 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.08016709 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08809494 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.082090983 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083410574 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.083734971 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08574627 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089935127 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078027168 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083179486 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089903967 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.078684406 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.073024956 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087872883 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.077703919 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.078179483 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.078470617 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.07717227 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081785411 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086613165 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.086008891 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.072548253 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082128246 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.078128872 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077572383 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07381639 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.083019495 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.08157723 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.079764989 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.086492366 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078321808 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.078999862 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082954322 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.077602141 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.078977257 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.079242849 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08261489 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07934053 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.081136209 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078541473 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082690449 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.079191511 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.076539587 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.079773308 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.078018276 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.078746439 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084288526 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.077726571 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078456502 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.080846583 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.078251068 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077975641 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.077571917 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076919646 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.081164123 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078522921 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07754538 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07982632 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.071937323 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.084254592 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.076930982 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08493006 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.078788087 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.073286283 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.083369087 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.079790515 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.082887058 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.078059713 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.078008684 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.078680719 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0763768 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.080139675 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084231945 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.075765408 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.088909156 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084629178 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078127614 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.080976224 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07837117 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.078857162 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.076309139 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.078769366 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.077890555 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.077585963 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.077151345 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.082259494 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.079487244 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.077860571 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078987027 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07768163 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.077334441 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.078342455 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071683734 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.076414876 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076270253 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.077118488 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087552398 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.077508935 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.076788499 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.07634125 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077648936 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.076337312 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.073568842 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.084536916 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084926036 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.076880578 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084127005 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.076617787 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.078269174 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087715381 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.070854218 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.074579234 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.074380837 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.210906378 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08353235 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075214587 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08579965 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.077536339 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.077321943 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074702058 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.077949828 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.075712346 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071561584 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.075984872 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08076629 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.076329726 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076570431 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.077614767 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.080848152 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07842398 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08702807 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.076490561 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.078740212 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.077259289 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.074107973 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.076237073 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.077039148 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.079416595 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.078162708 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.074891266 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.073708597 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.076377765 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.079109142 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.079466634 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.077224979 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.078809239 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083682458 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076667282 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.080190588 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079728598 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.072158924 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.080082473 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.076912574 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.076867925 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.076539166 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080735305 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080469855 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076877555 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.087035043 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.076451688 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080993054 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077286309 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.074550133 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.075640803 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.076430788 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.076093884 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.075995644 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.07745031 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084724313 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.074940012 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.080430816 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077170372 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078219929 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.084565735 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.076944682 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.080005042 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082079559 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.078496547 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.079156525 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.085395413 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.081080087 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080746401 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077634116 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.078235765 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082331797 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.075454203 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.082571171 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.077367734 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.077935375 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.078594341 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.074427993 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076535333 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.07657129 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.076770115 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.083510791 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.076691569 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.076052209 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.076019734 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.074132684 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.077668839 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079065474 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084429028 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.079023386 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080900233 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.071462638 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.073496468 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077651811 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07467269 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.078842893 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.080208707 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.082822309 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.079045117 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.077109099 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.075773219 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.086101558 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083349349 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.081436094 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.075216632 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.080782162 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.077696788 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.079387208 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.078436714 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.076957624 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077715853 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.081159743 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.078915672 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.076778633 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084021909 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.080289984 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07816044 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.216850817 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078218128 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.078008439 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.071960423 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.077664332 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.079523562 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082260312 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.079514331 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077895483 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088792774 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.075477645 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.077947332 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.080611556 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076251001 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.082147427 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.071409039 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.078446795 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.077861446 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077423933 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07224814 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.076677774 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.074709022 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.079718367 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.076387754 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.07130697 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088021112 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.087536593 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.080134715 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076686461 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075757516 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.072646047 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.072005125 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.077232678 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078130094 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07875644 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.087590809 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.076398452 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.076697407 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.071288409 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077215423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079502323 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.080685088 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.073696337 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.071979775 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.076468769 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.080233225 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.083097209 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.075280852 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.076804653 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079922333 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07940169 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.074488343 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08075574 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07481356 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.080926025 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089740786 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.07681961 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078479505 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084705314 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085110077 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0771685 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.071651521 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.076813161 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.079914389 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078170485 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.077727085 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.078078513 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092148378 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080005374 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.076272864 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.07569741 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.079285437 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07700172 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.085335935 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07787358 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.077462298 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.082100339 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.08151362 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085155942 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07981453 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084790922 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.080215806 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.081123623 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.075646247 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.077644728 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.074954666 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.075944571 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.077676991 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.077177539 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081614545 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.084139338 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.076209215 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087744866 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.086337331 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.079109209 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.073698531 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.075936839 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.076678123 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.071622992 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.077669305 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.074583018 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.075401598 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.075553141 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.075846606 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.078344696 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082030739 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.077990127 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.077314603 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.076178545 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.07082433 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.078531401 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.079566604 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07798851 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.073865894 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.076718705 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.077387913 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.080579357 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.21630473 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.075163993 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07943357 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.079785614 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0780609 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.072784582 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.083983799 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07613999 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.079660812 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.077166081 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076437507 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.077415435 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080506396 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.081878738 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078378245 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.078979233 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.08119531 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.079481415 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.074908765 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.073885278 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.082246548 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.075372334 seconds)
  done (took 49.037458556 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108259683 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072794904 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071815686 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071782668 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081948741 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073003687 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071795661 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073445805 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.072535913 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075218907 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.072209683 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071870124 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080210111 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087081701 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08217731 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076787144 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072760088 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072578515 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071438605 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073125496 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079765778 seconds)
  done (took 3.056776357 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.080474101 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084541978 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085863541 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091794362 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081058767 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080317211 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.085438245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080391765 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.087627349 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082340946 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087770737 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07991419 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.082514544 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.082191444 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082949401 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079900359 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087622508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.080750175 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080450562 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.085392325 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080165762 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085442825 seconds)
  done (took 3.271521694 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.075125011 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.075378268 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.078273822 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.070913911 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.075037533 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.070959145 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07902691 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.073942873 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.078761114 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.07525238 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.075198949 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.075380295 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.077839483 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.070975053 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.076232579 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.073986848 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.118794683 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07926762 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.076336108 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.076975692 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.071382477 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.078013578 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.071013909 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.071484475 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.075807757 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.079817691 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.076246445 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.074129621 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.076017818 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.075399618 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.075838161 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.074215217 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.078769822 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.076884936 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.075263786 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.075267471 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.076217787 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.076650962 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.071198409 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.073977327 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.076376532 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.074903378 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.076751453 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.077518629 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.07407384 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.073541265 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.077928703 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.076091358 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.070768699 seconds)
  done (took 5.173113615 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086546385 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.122293039 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.078268765 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.100134462 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.08964704 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.082038896 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.080480982 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.100513996 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.072878722 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.073797712 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.09073192 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.089342107 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.075229662 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.079899756 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.082933872 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.075040636 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.076367812 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.074195923 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.079542751 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.074626118 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.078961511 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.08290164 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.089675532 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.088219242 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.078694336 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.074446858 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.074636578 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.079462845 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.087498633 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.079761512 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.079946511 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.08053848 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.091019348 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.077209521 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.074390016 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.077936038 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.091126546 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.07577417 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.077534967 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.073457551 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.077776193 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.079374854 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.083129855 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.091266266 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.075494348 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0817306 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.075274561 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.072788316 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.087995228 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.078024375 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.082525934 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08941969 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07944898 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.075308352 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.079436468 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.090400447 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.075270322 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.073747783 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.078420576 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.087406976 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.073072351 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07867084 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.088508938 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.077190289 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.081655444 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.089422576 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.081679884 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.078877923 seconds)
  done (took 7.145605817 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083201894 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104148813 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09396228 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093254084 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086364276 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.085684046 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.08622575 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.085572257 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094216579 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089763593 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085341032 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.12721937 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.081032584 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.087123984 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085539217 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.085650479 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.085551669 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085454893 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08563684 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085957224 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.086120535 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091928619 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085461479 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09237697 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089134961 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080825393 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085800084 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0860541 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09194385 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085850951 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089029623 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.085198746 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08538011 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.093474532 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.090235216 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.085167617 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.075632866 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085436981 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.085623162 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.086038218 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081206593 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092289499 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085747384 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.08141966 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086409711 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086010783 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092507436 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.089050187 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.087185774 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089663184 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.085406909 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092688188 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08595594 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085667401 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092200985 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.094631125 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091924516 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092509045 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086232171 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092706643 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092817626 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.095321496 seconds)
  done (took 6.951443841 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08981594 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081461135 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089492516 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.071206937 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073942274 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082395212 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074630469 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.074240251 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083950517 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.086492756 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086297548 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082110997 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08486145 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086301358 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081610665 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084350665 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081091538 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080713778 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083222245 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081713617 seconds)
  done (took 3.100258834 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.082975164 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091771143 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.075688601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078753235 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.079557812 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082076728 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.078423216 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079780314 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077463828 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079263806 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.085665079 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085978465 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07711756 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081997055 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085365634 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.081137118 seconds)
  done (took 2.756844005 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09145597 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080337597 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.089327305 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.078122123 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.077409624 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.072249649 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.075975207 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.071006359 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.071921966 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.088144053 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.075495237 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.086631299 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.075638294 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.075550134 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.072267324 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08082768 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.071793973 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.073122083 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.075525229 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.088692568 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080295894 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.073764624 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.078658716 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.075983458 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.078677128 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.080595739 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.075447592 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.076553232 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.072719838 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.075766438 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.079756639 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.0793996 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.073085566 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.07375638 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.074394935 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.07288063 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.075579039 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.076576533 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.081502116 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.076275821 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.073870853 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.078168881 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.076110096 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.077557077 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.072137529 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.076585585 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.07162512 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.078285156 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.0733783 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.078698014 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.07568518 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.078643077 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.076671045 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.082138627 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.078129153 seconds)
  done (took 5.703193628 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087523993 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077666604 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069653338 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.074304826 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079776511 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.077325202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0795654 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.077541651 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07753461 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.074282934 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077631073 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07975587 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078112794 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079794886 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077704241 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080299271 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07196868 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077147749 seconds)
  done (took 2.861124457 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078804876 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073829936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.081192382 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.076128689 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.075622548 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079085441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072008892 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.074900305 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074622292 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075938941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075838401 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.078812833 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075335045 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.078765836 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075905485 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075896327 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07833474 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074989286 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.075747409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071870575 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078545856 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074977561 seconds)
  done (took 3.137168702 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.102300975 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.090401684 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.150430173 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086858347 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.093077922 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07936 seconds)
  done (took 2.060071478 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099577565 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108304022 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074832437 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0771208 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083491846 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077315825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077671423 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077755192 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085376594 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082667928 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07784393 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08558145 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085087654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085401346 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085116965 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08605109 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080661488 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082751633 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076209418 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092815463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080472378 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088349558 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080265364 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080020766 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080100943 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087027989 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087536733 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086047581 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080091307 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087431201 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0856104 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080298976 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089004343 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085058048 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07981951 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087729839 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08016485 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09233555 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086599068 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087265166 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.079431593 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085392612 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087880109 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084407821 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088119872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080884929 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084479296 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080188196 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080090484 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095182691 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086234977 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086536026 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085650026 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088842986 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088027073 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094607378 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086397534 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087404516 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085608887 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085069278 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086958516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085886015 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086472463 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085610628 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086021969 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087042835 seconds)
  done (took 7.073668836 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111183169 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074551002 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080253478 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086910922 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08703351 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080431563 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08050134 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079947882 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079867963 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077383607 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118986349 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080285429 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087196572 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087003414 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080029888 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080524875 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080139462 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086922203 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077560617 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09531074 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080033503 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086087416 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085574191 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084489456 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08423339 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085772686 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080490404 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080150594 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080002094 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079791921 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084838886 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07995608 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086491159 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077408891 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086715104 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080613149 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080470753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084594805 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080743069 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085462903 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087146109 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092574797 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080074339 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08009182 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085858617 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080082054 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080405999 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077478249 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079029623 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076432952 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085624069 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084711855 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084637711 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085142172 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078160734 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078943991 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079657362 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079697207 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080027968 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086225863 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087203112 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080106674 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094799846 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080199586 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080669361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087198469 seconds)
  done (took 6.999192869 seconds)
done (took 145.99206734 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197354046 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.176910966 seconds)
  done (took 1.833371139 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076657804 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107061501 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.085576715 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137220414 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07470086 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.108857588 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10732353 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.086654932 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074990694 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.075189659 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07606541 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.078073014 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.140241043 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.074890747 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.074122605 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.076303592 seconds)
  done (took 2.926405499 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107372624 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172193081 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111543523 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07424187 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.109990656 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.083228023 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07562746 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085425269 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.081910744 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.075809156 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.08304431 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080893223 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.075448547 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.080532227 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08395462 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083979926 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.075338391 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.082932075 seconds)
  done (took 3.097917293 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106148811 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098681935 seconds)
  done (took 1.68003974 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.162319257 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.140723647 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.209745853 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.355635344 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164871218 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.154591584 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149539119 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148924441 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120436527 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143962153 seconds)
  done (took 3.222053629 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.108723577 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.163592349 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282045603 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.128935033 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.081301594 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.101045572 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.127971527 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086622985 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.088050572 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087651133 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.087507064 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084976775 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.108732346 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.083029504 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.083557746 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.084310619 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.111999987 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.082061735 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082450783 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08440656 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10984591 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.073624617 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.080274401 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081151353 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.084354496 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084672914 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.073970876 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.074626107 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.084842624 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.083767463 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.085200126 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100246175 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084816205 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.112135643 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.079444434 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.115871292 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.086642109 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.081532285 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.083446834 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.081283029 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08573183 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08522242 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081079828 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.084105859 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.073979167 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08465558 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.073699043 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.074280276 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085480591 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0756863 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08640194 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.084165109 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111809802 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.076409394 seconds)
  done (took 6.548782197 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112167567 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.114277578 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077969194 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.11982795 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111510797 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077140729 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111545168 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104493404 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111839391 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078454512 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07529486 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077901197 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09077122 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.089080037 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.12308865 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.11542084 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.08030623 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076662983 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.115391564 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.114122107 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075862349 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106820241 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.100742188 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111412176 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.075162887 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077309005 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.077303267 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07813138 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084139932 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085046438 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075644362 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086643049 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.090489826 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084542285 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074768874 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075838669 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07661997 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.088240856 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086705747 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.087820606 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084198565 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075260134 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.077025653 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.078654125 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07783299 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074801339 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085462336 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086815745 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085146372 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076510803 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077325449 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075745224 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076831982 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087764958 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.087553504 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.089710186 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.088844331 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077042371 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078499285 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.082455147 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.089669076 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088843904 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086068554 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077493562 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086640348 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.075413952 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087450382 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091343762 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076499228 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079505798 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.078909407 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078368628 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.082334371 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.086966151 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.087203819 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078818188 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.078243886 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078577132 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08902139 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087922614 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077416994 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084584979 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076580601 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076445609 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078418127 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.079340764 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.087927869 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.087946948 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.082968109 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076219649 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076446154 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076038451 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075269842 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083908354 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.086054887 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.086433711 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.084448613 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07708394 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.084932442 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084188753 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077615349 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.085187317 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075565302 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077077442 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076856194 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084472934 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083132824 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084747659 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075225011 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076360502 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084812542 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087426417 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.078188148 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.085888732 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.088300392 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.086705361 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.076623361 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.090072997 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.078017795 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.089370013 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077965819 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.088528063 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077969838 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.087673133 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077675787 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.074632201 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074857594 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.084063423 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076743455 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074448693 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07549507 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075181758 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083020822 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085804204 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076816518 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082883206 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082994086 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076399723 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083347015 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074318705 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084632854 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076971934 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0785653 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076007189 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088856588 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077414854 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.077176872 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077479504 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.088436291 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07775203 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087796267 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08517442 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075381807 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088245435 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085196605 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081731976 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084593508 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075571072 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075376913 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076320958 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.077867184 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084919219 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.086888783 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079168138 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077532335 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.085340438 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.088328775 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.076802804 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.085833749 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087130043 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.086174633 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.077810514 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077294963 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088673202 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.088463054 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.085895106 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.08629096 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086174621 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075081119 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085198832 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085435081 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077486195 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090651574 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076206351 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.089913947 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082836175 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082028398 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083759526 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08465961 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.084519482 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084579406 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08738147 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073815115 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074462328 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083643035 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074543394 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074805091 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082724434 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076334737 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075991297 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086568684 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.323974275 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.089264207 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.077954305 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.088128719 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07806164 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078972765 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.092684824 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.080337791 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080849157 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.091154742 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.081579284 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088610324 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.09252696 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.088877429 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07879028 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.080586119 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.089536483 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.089824744 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.081588492 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078703947 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08037497 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.086483919 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.08608363 seconds)
  done (took 20.496395006 seconds)
done (took 41.290342251 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.22148771 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.165278069 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183218944 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.127121228 seconds)
  done (took 2.288857418 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124359954 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109822858 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.104020398 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.07746994 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.110325095 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.076788275 seconds)
  done (took 2.130538845 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306121061 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20979788 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188669738 seconds)
  done (took 2.228880348 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.220261443 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.202439321 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.470674315 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.289135854 seconds)
  done (took 2.819129952 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.155911911 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.098112045 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.077275129 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.095001785 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141267427 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.169905167 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105538412 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131568187 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.088781901 seconds)
  done (took 2.640470734 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15244585 seconds)
done (took 13.791698342 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.125116286 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.139039091 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.211527982 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.221311608 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.115405514 seconds)
    (6/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123148398 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094180356 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.08558382 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.085849853 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.089188575 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.212493636 seconds)
    (12/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.088423632 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.085594841 seconds)
    (14/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.232234151 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.17030606 seconds)
    (16/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.095405895 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.085865443 seconds)
    (18/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.193675082 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.13418307 seconds)
    (20/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.074447645 seconds)
    (21/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.085944367 seconds)
    (22/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085406866 seconds)
    (23/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.170811053 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.075610455 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.101410958 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.091678912 seconds)
    (27/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.080058464 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.200002125 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101464273 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.233010021 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088985455 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.216234257 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.082610718 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.159419232 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.088109061 seconds)
    (36/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.12454479 seconds)
    (37/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.083573532 seconds)
    (38/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.082126991 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.150962139 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.308512677 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.081838261 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.094533408 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.083827295 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083929381 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.181139486 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.142109102 seconds)
    (47/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06240505 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.192048281 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126477962 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.126386915 seconds)
    (51/309) benchmarking ("sort", Float64, false)...
    done (took 0.143577198 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.078239473 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.085102108 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.082390118 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.085138251 seconds)
    (56/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.207232908 seconds)
    (57/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092042836 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.117343492 seconds)
    (59/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.161262019 seconds)
    (60/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.176595933 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.194639082 seconds)
    (62/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.084691685 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.058829558 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113621742 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.082795274 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.085265532 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192274599 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.073934577 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.085132798 seconds)
    (70/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.078174395 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.152732059 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101355914 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180543356 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.075676671 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.10409027 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.077841123 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.235216445 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.061432626 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.219656532 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.077891207 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.061317902 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.085988025 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075670398 seconds)
    (84/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088084348 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.238450644 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.27606969 seconds)
    (87/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.08246469 seconds)
    (88/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.085819229 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.20438644 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.078712907 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.098502034 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.060591457 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.208694879 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.086222877 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076118236 seconds)
    (96/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.127004313 seconds)
    (97/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.147056076 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.091981457 seconds)
    (99/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.103925762 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0828535 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.082526665 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.164331437 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.083769089 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.250085712 seconds)
    (105/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.155077052 seconds)
    (106/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079324099 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167663118 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.100665514 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.159146123 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103749389 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083850278 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.100934937 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.060262605 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.075901389 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.190501522 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.163174709 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.161402239 seconds)
    (118/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.121987187 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.078999932 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 0.151930954 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.084100837 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.063150708 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.126689743 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.083014003 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.083617536 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077741946 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.062074323 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.082995534 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.14045111 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095301061 seconds)
    (131/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.073794595 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129506666 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.175493445 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.082250743 seconds)
    (135/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.061080907 seconds)
    (136/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.085135749 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.185780577 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193947962 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.098747593 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.058165408 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.149820872 seconds)
    (142/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.07039589 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.072566896 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103096257 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081302834 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085285904 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11827154 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.060239877 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 0.206832866 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075342337 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.101180834 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096969771 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140217086 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.084330847 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.075903687 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.076954212 seconds)
    (157/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.101504433 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.090290161 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076394424 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.154749802 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.205728537 seconds)
    (162/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.080320177 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124851393 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.077822599 seconds)
    (165/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.190389595 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077096209 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.096322434 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.196514235 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.168889195 seconds)
    (170/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.110768702 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.060554023 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076224357 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.080764436 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.115381198 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.059709229 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.080245558 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191019376 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.174847107 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.150271948 seconds)
    (180/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.061026391 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081700089 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097236852 seconds)
    (183/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060599436 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071807938 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.081765685 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.251720785 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.083565757 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.061737821 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170508178 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.133369687 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079390326 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061835176 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.076338522 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.085484182 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.085675722 seconds)
    (196/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.091375293 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.061574541 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.192690077 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062443927 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.111593117 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.139491334 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.072799042 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074615111 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.076461735 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168969684 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.059327867 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075930997 seconds)
    (208/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086867852 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072751938 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.059611706 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.059685765 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096882808 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082949453 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.08134992 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.074088309 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.095178792 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.059326318 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076449391 seconds)
    (219/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07640165 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073830214 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058556792 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079194644 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159072445 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.073676947 seconds)
    (225/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.059415694 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.085255835 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.083898712 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.080894527 seconds)
    (229/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061133234 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06003431 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.060893525 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10229583 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075541955 seconds)
    (234/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076600064 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.154020089 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.16811385 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073708771 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.058544522 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058753239 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144831717 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.060340832 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073858841 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080180407 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.079521627 seconds)
    (245/309) benchmarking ("sort", Int8, false)...
    done (took 0.151598415 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.059212139 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.071166161 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.060659921 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.085756248 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.058545024 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080042252 seconds)
    (252/309) benchmarking ("sort", Float32, false)...
    done (took 0.141771207 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073740627 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.059849255 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101790923 seconds)
    (256/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.071664879 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098538673 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073122858 seconds)
    (259/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075028964 seconds)
    (260/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.112948755 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121270145 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.10246332 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06133376 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.080112389 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.080403988 seconds)
    (266/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.07182683 seconds)
    (267/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087646558 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.082184368 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.058806264 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.132541213 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089013675 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.058600626 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.058910969 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.061912495 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.083284808 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075536625 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.059476894 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.059280425 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.091953465 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.058138175 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.081414716 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.072119555 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.156475573 seconds)
    (284/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098007841 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072167427 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073981689 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077530387 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.08125559 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.098648599 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.062686864 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.075879489 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10911665 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.062030699 seconds)
    (294/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.079792697 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082861564 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.073531494 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.060935834 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.060408254 seconds)
    (299/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075963256 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.103660636 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060824599 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062111228 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.062527379 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081866043 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076740715 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.075887958 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060444628 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073986875 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.303727707 seconds)
  done (took 34.59013217 seconds)
done (took 36.124295033 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08921613 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101217539 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082788774 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101627854 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088757661 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.084712885 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.080777785 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.086200604 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.0879068 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.090110626 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08479866 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062154807 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.083129448 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082065186 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083154121 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098731675 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.086708893 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081012462 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081653205 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073142743 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.082409772 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.075811614 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07673181 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.063361329 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086726753 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.079750255 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.079662109 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081895117 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073845622 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073267422 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077290836 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.081949828 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.07431352 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086301025 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07976247 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.081020312 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082287171 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.084772871 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.076083048 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.073434621 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.082684284 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.073383281 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.081110733 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.081965204 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.082083472 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.082030216 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.083689441 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.087680471 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102230464 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.079117418 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.08696327 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.086853302 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.086051206 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.083656842 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.080413319 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08388068 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.081794121 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103127758 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.084228097 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076614796 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.082766327 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.082523342 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079098222 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081352624 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080998692 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.083722023 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083608361 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.079705642 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.082923764 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080411566 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073000468 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.081511204 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.076918971 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073368295 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.084608599 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08693635 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.07255342 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.079275205 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.080922184 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078990524 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.072172507 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075339651 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.074918115 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.080097012 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075478535 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.064985702 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.077508646 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.079770688 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.072614039 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.081004465 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.08016555 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.081017529 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075227149 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083781213 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.072573689 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.078402851 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073260008 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073179623 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.074887398 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078146135 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.07260239 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075745324 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.083267922 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075216692 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.079765695 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086399647 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.072975392 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.080041977 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072349041 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.072258045 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086941598 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.082863552 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073419071 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.076419651 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.071821026 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080770579 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072089796 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.073127438 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.073055818 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07280916 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079615488 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.073358732 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075556239 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080122195 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.22492538 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.074009818 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.0775513 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076062041 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073367255 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.080284304 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.073725429 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.074121465 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.075544754 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.070176564 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074925643 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073317157 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080873998 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075857885 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.081828491 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074690689 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.0823457 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.078931067 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.079945353 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.079439378 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.072264035 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.067670869 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.075311756 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075195555 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.074994969 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.073499795 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.074990376 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.073737272 seconds)
done (took 13.820881999 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074431057 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145346122 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.104630945 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103012562 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092251537 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.074834879 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.08281059 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105831223 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.076107657 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.107267482 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.095313801 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.09347729 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119962771 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.072048213 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07342716 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077880076 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.074479886 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088164417 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.106579736 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094704044 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120578954 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073113413 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.098652613 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096330876 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.094306297 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100138246 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07458631 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.077361932 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.077763679 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108928142 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.097288455 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078439548 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.074743367 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104476795 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099928443 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090178602 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074207981 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09000977 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.073938951 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.07357901 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.075145655 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106659388 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087570016 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087214814 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.077712624 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.085875797 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.077515244 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.092757222 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09755286 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087123513 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.094059846 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.108929404 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.075959118 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.091564053 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.071892671 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092397963 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084154131 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.076790174 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.075656269 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.084199667 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.076311154 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.080277592 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.091707732 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.091169346 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.080456573 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.093514394 seconds)
  done (took 7.476661105 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.091666969 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100657117 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.091428963 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091844506 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.073609001 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074526652 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.074788474 seconds)
  done (took 2.223832546 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.074890604 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09603904 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.098556994 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.099540565 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.092148811 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.10026977 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089063033 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.076850211 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.097342877 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.075601799 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.095807486 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10866529 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078276316 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081352264 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098376732 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074124732 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098244917 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.074306892 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077010127 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09844794 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076503428 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.104468967 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078154828 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07473513 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088764872 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.074321226 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122980113 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07871391 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.076152917 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077478993 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072962399 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114759816 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087778047 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082241409 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074179515 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088992087 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.090305095 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074141993 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.094237193 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.084951196 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.09122869 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.078188273 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.078227458 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074596554 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.081839528 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.088229466 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.077646123 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.077780078 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.08033149 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.097757733 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07791102 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.09113702 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.080054015 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.083176482 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.078874509 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08369866 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086905174 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.075574487 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094771762 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.076495228 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09155664 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091463385 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.089123455 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093600262 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079551022 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090625957 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.091749569 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.080183801 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079499607 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.080694448 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09257973 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.075850143 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.079302222 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.088479972 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079736757 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.101637959 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.102039279 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079407827 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.090111893 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.076237102 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.074602618 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.074415642 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.100721669 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.081022666 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074290084 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.078478689 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077695995 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072721666 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073594318 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078495279 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.072465001 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.075960364 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077672829 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.077438973 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07716436 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090944004 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.078007847 seconds)
  done (took 9.84097129 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07632812 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07576562 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077084308 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.075277242 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07542908 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076616775 seconds)
  done (took 2.106121477 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.100589118 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.076268644 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087398104 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.078768146 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112052303 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.095244719 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.098386938 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.088661527 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.094223857 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.088962102 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.097832749 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.099470245 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.103504152 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.082950072 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.098430217 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.082097616 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.098865485 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084890431 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.088937699 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.083021642 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09548363 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.081963695 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082277778 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.092850574 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.086607058 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.081149488 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08724028 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.085805952 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085789311 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085523347 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079826888 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.083222645 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078554951 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084972555 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094730402 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078307034 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078506127 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.08510844 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079268287 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.083314268 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095801474 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079457362 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081117967 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.084308642 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085086508 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079629712 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084865931 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086288938 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.095526824 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.084204196 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.087718875 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078938871 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.082687707 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.084285153 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078107845 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085313359 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.084433499 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.095245396 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079249865 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078495079 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076021969 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.083595912 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085249688 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.083800483 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085121105 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.085106777 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07755202 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079643924 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080222824 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078856738 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.084835101 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076039025 seconds)
  done (took 7.825239231 seconds)
done (took 31.087589801 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54245301 seconds)
  done (took 2.160820637 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.630383579 seconds)
  done (took 2.27329064 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.638177845 seconds)
  done (took 8.274004155 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395858937 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.497601348 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.742150989 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139861389 seconds)
  done (took 3.455811551 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.730441834 seconds)
  done (took 2.375217934 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233461956 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221488606 seconds)
  done (took 2.109073893 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386932883 seconds)
  done (took 2.025059746 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.155483683 seconds)
  done (took 2.79412591 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256594154 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184916321 seconds)
  done (took 2.085266933 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.498364937 seconds)
  done (took 2.140310474 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.930852674 seconds)
  done (took 6.577537314 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.226382002 seconds)
  done (took 1.913381465 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24454529 seconds)
  done (took 1.88909308 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.783872023 seconds)
  done (took 3.426263671 seconds)
done (took 45.148012129 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.091792471 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.093144492 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.092778313 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08836227 seconds)
  done (took 1.9977889 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084844139 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.08087669 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083551605 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.081083964 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.084351562 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079901794 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.082065406 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.082870773 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.080081345 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.081093874 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.080354917 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.080649518 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.082534931 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.081841124 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.078566793 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.083495586 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.083986026 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.080983065 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.083176915 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.080232627 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.078273358 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.082517935 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082864148 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.079571209 seconds)
  done (took 3.604830892 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086261428 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.081184804 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.083828572 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.080232354 seconds)
  done (took 1.982376623 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086148317 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100148529 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.096962973 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.085736342 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.100410725 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.093845966 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.076705012 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.076711203 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.077389505 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.085476741 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.075731042 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103296873 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096178208 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.085634335 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.088161768 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073386291 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.075505173 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.095807777 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.086185194 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085891381 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078586971 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.085230683 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.075662046 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096247544 seconds)
  done (took 3.72773261 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093881511 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110137577 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088914415 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097311395 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.098814069 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.072678722 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095231453 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09876299 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134121475 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072826125 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.078482082 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.072867739 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080646468 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.072590405 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089102403 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.116394652 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.119782564 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.076660346 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.105096843 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.072938112 seconds)
  done (took 3.505610195 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080266237 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.078334854 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075908654 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073555078 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.085270151 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.080594135 seconds)
  done (took 2.133473191 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.076330151 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.078031299 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.074789428 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075017391 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079718828 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.075130455 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073776057 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075009907 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075292929 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07465965 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074418398 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.073390557 seconds)
  done (took 2.560387223 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.206096227 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075885202 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076033942 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073629552 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.078146856 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074032752 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.088695936 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.075583893 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.100403257 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.074101697 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.074216355 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.076007808 seconds)
  done (took 2.730827374 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215609551 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084581589 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244634056 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159641712 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119330797 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123477611 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119801789 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120871003 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.149568294 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108177391 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173395904 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174180164 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115064206 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144652353 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101718695 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106759685 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165619022 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172996983 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113818209 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172589608 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153923881 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134208725 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154933037 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110101602 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112989434 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130754631 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078625143 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088619015 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176427116 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140836673 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15151309 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119263948 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100877703 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183424846 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178692872 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148122306 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156052506 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093318062 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11112715 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.141744985 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207290145 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097541991 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171373516 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260494545 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089496807 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142347504 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126456344 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.127661853 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.111642352 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097828609 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153318495 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192760579 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.145727359 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096077826 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132848579 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12215319 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.121903789 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120518887 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187903854 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166820723 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13396047 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.079018933 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116536252 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158718065 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140784292 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115662336 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.132445448 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099187242 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142647406 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161676893 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13287519 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151072099 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126687752 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096291978 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125369914 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148838798 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135254647 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1663548 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130634385 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.080085043 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130547941 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109682458 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087780544 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.155535278 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082377891 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182149292 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106854125 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113338932 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133987508 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118543946 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116220877 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167384875 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298727902 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112007458 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.075029891 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113097399 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127096908 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154771501 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095411165 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115704652 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124060243 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.084953099 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147040847 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.083033329 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130017273 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083161836 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13168796 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136345461 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086097329 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129653864 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111035848 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.107890891 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138775927 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165585751 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09542541 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089105304 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175645597 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128603695 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110526599 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150754918 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162795855 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.106479366 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109797007 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156445006 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17921125 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097494916 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169122129 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114075221 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.091649625 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.095396943 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129818174 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118774273 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131875183 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089733396 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.124447639 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174253871 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083171229 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102632489 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140576586 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086358146 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087916245 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112879274 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113852079 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.10329489 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10705137 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10960509 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144880385 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131994637 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263456432 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13334732 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108645694 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18080687 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096780856 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109811816 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113110992 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.077331706 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.142845954 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164986678 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087708735 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170736789 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129350676 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123727667 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127075769 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090698635 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148037369 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087809164 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.077758585 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152167731 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118340983 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120244099 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.161153158 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125507777 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.133889477 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127316057 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142778924 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13861786 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135878487 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113655643 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095784663 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118101059 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136117741 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.081249726 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09793289 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086540905 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112253849 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103456493 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090940352 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148108934 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130955651 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117267824 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11894191 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104028779 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153671722 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083356745 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135660846 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126812915 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103295023 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.158097549 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157752575 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138144495 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106008426 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143480204 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.078069648 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081459808 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096055534 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128762389 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090123759 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090930399 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123537245 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152403845 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135227032 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143308021 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1301647 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125390746 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159860667 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076271549 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124737619 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148098033 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124375068 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.11136258 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096304003 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105021378 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14618604 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112386305 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184170548 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117726611 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12768083 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157445529 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106293096 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085896879 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106863789 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137887392 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109005188 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144108179 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104109459 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093369283 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112353308 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080575554 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101878788 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130215277 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122267306 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137082256 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118005023 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135270258 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083473806 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119949444 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127907707 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124820425 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.070166921 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12363012 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160658314 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099944284 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120527482 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153550644 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085841583 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.412152083 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184345209 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15410672 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096572318 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119644032 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128562393 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13611669 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128121598 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14846941 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11712237 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146709731 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118323458 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.0945522 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097370686 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10492822 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112371562 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103686743 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112404202 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121615224 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.10397312 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140937109 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112404721 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117977703 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124715598 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.107734989 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09902948 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104772361 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184553059 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126380253 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178173528 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.107047985 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148907615 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169002701 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082621382 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086852961 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085715567 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147441336 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091872848 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136984641 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.117860685 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124666198 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130198481 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148470884 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10277571 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.076625633 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116089592 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140897465 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132581057 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106928488 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.112425334 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168334536 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107874191 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087483218 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125197617 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124628306 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.263593866 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178321475 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.070486929 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113432261 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084486345 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092041881 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137005407 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159695653 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087959596 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10852626 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126155068 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119469659 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134330041 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108817839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115889499 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134717047 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160413197 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134835145 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.096463134 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118745398 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135906235 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162679644 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11164213 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.107073372 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181904901 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158758395 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.169027565 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.098863993 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121050926 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120463299 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118258036 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143902429 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091261193 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168290501 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088865171 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142931694 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11127404 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095802499 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137365956 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.116413252 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095231034 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153070672 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12499936 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090427748 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085524174 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126241429 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1266272 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113992364 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.083647044 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145286806 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080895885 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138506159 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318850364 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088251464 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11207966 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103492404 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086624512 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114813838 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110080349 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095112135 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.106719689 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178380248 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092988781 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155409816 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140636951 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119390448 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141932865 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10949962 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.648463836 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.085236116 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158026886 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12408095 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179807413 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108144069 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124255953 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116332658 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130933582 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152505063 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110451569 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.192910651 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138635034 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123337932 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08720284 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109305473 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111152724 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095644434 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11478705 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119446173 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122752467 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.100270858 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.123396219 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130473232 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.089671949 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103166743 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161927131 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124416335 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15142717 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147184426 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093631526 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124403264 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143762169 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087101971 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.127008598 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310092017 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115362105 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108506552 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.089727111 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109433927 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165740934 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.082509264 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16753714 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127206768 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116614755 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120068311 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.117969412 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14009821 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114786366 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127922765 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099650435 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115753215 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121248318 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088771334 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.084401651 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112298571 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117942366 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10513756 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105196644 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10685964 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156607457 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.079643778 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10604506 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121718145 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15282312 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180219666 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.095752981 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090651353 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125961248 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124184973 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.119432178 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127864194 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.086296176 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0896318 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087700974 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086511771 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116097819 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120492269 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121520095 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116849475 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16872874 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.091487819 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.244888246 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103779614 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112309316 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.078787645 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085551092 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103929597 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106021746 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115352321 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11736334 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164409785 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.251911926 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.098746632 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100226465 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081480356 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091020845 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134022991 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117393099 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125121295 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109771544 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069861747 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116694125 seconds)
  done (took 62.689327687 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114619837 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.090271408 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.103133091 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.152414809 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.130251043 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208962648 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159001164 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197033486 seconds)
  done (took 2.941056284 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076065338 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.103289436 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.111267067 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091405841 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.074090556 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075695915 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238920705 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.08886861 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.074279756 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103973494 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085021082 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.076166443 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.444338782 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.074181749 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.07432686 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06834892 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.075151824 seconds)
  done (took 3.71199314 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.409309856 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634879889 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359914099 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.083802727 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.974768257 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.097983047 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.165956359 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140842055 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08523568 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534485034 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.420615872 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.140066022 seconds)
  done (took 18.832824439 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.090915882 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.083459705 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.099293125 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.098406744 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.087489816 seconds)
  done (took 2.335128126 seconds)
done (took 114.434565103 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.092017251 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.627262905 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.061864334 seconds)
  done (took 2.504220026 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093679635 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.09389403 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.093626713 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0928466 seconds)
  done (took 2.166123437 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.0842091 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.085814996 seconds)
  done (took 1.957411127 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.247573341 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.177997009 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.105765736 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091443056 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.087845262 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.088669588 seconds)
  done (took 2.059451648 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.080311195 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.084016963 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.081122075 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.085330902 seconds)
  done (took 2.118105478 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.085090569 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060638701 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.062948165 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.065015275 seconds)
  done (took 2.061294601 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096465042 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087672455 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.087921218 seconds)
  done (took 2.061396588 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110808548 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094966787 seconds)
  done (took 1.994504065 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090348869 seconds)
  done (took 1.877859543 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104719196 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10984614 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.140333065 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.120063225 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.148951603 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118490336 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.092594491 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093287973 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084848406 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.094506972 seconds)
  done (took 2.894690648 seconds)
done (took 24.103299754 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08777511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.38414754 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.369022662 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.0987819 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.677328714 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.365225439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.977487623 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.102935933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127569012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.079140961 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.097515315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.660576658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974918388 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.342988469 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.955778085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.340561725 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.660876588 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.079851347 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.079628705 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.079399215 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.96656905 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.079979675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.079608892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.079886668 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.658884418 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.382620538 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078142404 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.356572955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076971656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078647024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.364197308 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077968928 seconds)
  done (took 16.597445251 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079641688 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13046405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.081599365 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092426813 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07904352 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078404458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07945339 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.077574499 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130861693 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077771821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095548482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076065788 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.080335145 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076821486 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095884936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077059407 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077798329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076748167 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077015214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078418674 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.096181707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.077541971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.079131125 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.081058772 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.080405696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091929382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.078252724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.080398677 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.081165677 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.082693493 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.08368582 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.081277806 seconds)
  done (took 4.517311843 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.125320885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.13707174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.083346563 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113594047 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122413981 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.078769939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.154322419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.107156191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.142124437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.080340255 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.096541726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.077108398 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112431412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07708332 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.096892113 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077603793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.077593356 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.076877023 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077223963 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.077839306 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.098683554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.080685136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.081171829 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.079548953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.080149448 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.092610671 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07737858 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077403083 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.077426195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07925421 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.080428941 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.077507442 seconds)
  done (took 4.781183342 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081028566 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.084790117 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.091721869 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.093392684 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.077988188 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.080527984 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.081705871 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.078149881 seconds)
  done (took 2.479507108 seconds)
done (took 30.173009654 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087649986 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.077532056 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.08110901 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091112794 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.081970666 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.088030554 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.075106197 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.084632285 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.080852394 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.081715917 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.084177318 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.075659965 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.080270918 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.075854623 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.083585104 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.076027849 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.091734607 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.083763232 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.092385248 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.09241622 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.082561185 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.085247577 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.087236617 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.092031186 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.091646674 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.091941239 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.088382187 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.081695892 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.076790425 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.079470427 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.086254061 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.093300486 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.078541004 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.090270785 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07818768 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07590606 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.080542065 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07637298 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.088634077 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.086600029 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.078436878 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.084417359 seconds)
  done (took 5.306502325 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.096573227 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.103005899 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.097735633 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.073768095 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.079451237 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.076178321 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.099824704 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.07163662 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.071522473 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.101280958 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.067086292 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.070316698 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073335811 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.062827927 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.069336167 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064749928 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.070819056 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.063439889 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.068392277 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06853101 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.098260879 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.063644036 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086837165 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.072355319 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.064494259 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.069998098 seconds)
  done (took 3.819877903 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.083278506 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.094007325 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.099778803 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.141164699 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113674886 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.088095426 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.088102745 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.104765424 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099140743 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.075520028 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.079597962 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102321409 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09850007 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.082984779 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.076028032 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.095099671 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.092787498 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.077530002 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.082266101 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103853457 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.096127785 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.094592199 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.105223792 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.09213693 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.075419804 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078635588 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.080176686 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.090730233 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078804084 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.085302417 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.078793047 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.080505769 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.079092241 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.087703311 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.080012509 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.080348984 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.106217623 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.086446702 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.092105494 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.076341202 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.084651178 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.077799311 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101177771 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.136177322 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.076875411 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.085088853 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.08402064 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.089333544 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.078492638 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100486383 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.091616136 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.078624288 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.082109737 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.078863382 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.078685621 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082450591 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.080822444 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.082277123 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.088374848 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.085711094 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105187936 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.083096918 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.093435204 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.078817854 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.087298789 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.076435052 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.076717112 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.074993852 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.105365351 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079548448 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.12117497 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.079854331 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.080292028 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.089102875 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.087657647 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085659273 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.079306444 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.095626941 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09101967 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.082745503 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.086368082 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.080654488 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.079681162 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099830234 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.078414329 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.078256713 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.077108692 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.082123811 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.078851476 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.077327895 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089427271 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.077827325 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.082148176 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.095796404 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.078823547 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.079929297 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.082749851 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.081501309 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.076047202 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08743542 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07988015 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07670249 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.086245422 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.076279684 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.079418156 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.089322464 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.082659541 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.075895775 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080667408 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081917022 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.077186875 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.078162413 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.079304301 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.078301969 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.085358033 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.082998335 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.080541962 seconds)
  done (took 11.93892485 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176643818 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.168715562 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.079774721 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.158522855 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085467591 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.087741355 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.161849614 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104707564 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.078438786 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.078570298 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.080203027 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.124830548 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.12036415 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.134289101 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.090713979 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.079534709 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.096119884 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.128230481 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.162635267 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.157237921 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093872493 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.086454996 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.079646175 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.077254835 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078941346 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.087436173 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.094390066 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.08589543 seconds)
  done (took 4.890068852 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.089175169 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.114884869 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.083844197 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.10026693 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.098995053 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.076398049 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.079072779 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.078591615 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090945283 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.086330203 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.076349964 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.08168203 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.08294162 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079923579 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.077082692 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.083863341 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.083855669 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.078395964 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.080592876 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.083158016 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087996539 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100994784 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.082545336 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.076178042 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081185308 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.075324888 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070862658 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092495754 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.076469393 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104597957 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.074347536 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.081570818 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091180803 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.077414796 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.076625342 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076438221 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076032188 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.076628271 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07820719 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.076894524 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075402266 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.065751854 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.076206448 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087633027 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.083702044 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.064756997 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.082823765 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.085014966 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.084715232 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.076728116 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.082231274 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.08227953 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.082564021 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.088051476 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.085258183 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.08478889 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.080427311 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.085820725 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.08904116 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07960468 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.076957456 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.077473264 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.084171732 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076253906 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088112055 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.081934492 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.0749218 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.075961865 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078230752 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08350511 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076072611 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.080872554 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.073797892 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.078047224 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.081929462 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.079821157 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07880976 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.077202942 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.078515884 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.078831465 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064956486 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07897737 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.063853494 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.082542255 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.077916436 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.077626264 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.079025559 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.084347609 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.089827829 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.077930488 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081990935 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.077491601 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.075243935 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.079729114 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069494226 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.080342608 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089031816 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.090502044 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.076177432 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.073874325 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.09022029 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.081334499 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07566614 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.064132003 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.080873142 seconds)
  done (took 10.348487127 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100574809 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.079064549 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.093282343 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.100567919 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097050054 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.084218051 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.086645477 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078118686 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.093257265 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.082720125 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.086055053 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076410278 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.086852097 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.086499183 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.078176566 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.08684986 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.08148865 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.093594531 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.092131632 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.076792836 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.085919205 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.089771913 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09973376 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.091279292 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.089532592 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090958117 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.10005788 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.086882291 seconds)
  done (took 4.329877435 seconds)
done (took 42.437434881 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.904366574 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.073695482 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.899278038 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.237082781 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.971650445 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.086314695 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.976749605 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.888389304 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.186539024 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.926475337 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.183726602 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.103044307 seconds)
done (took 67.39602555 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.935342289 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.024174459 seconds)
    (2/2) benchmarking "String"...
    done (took 2.116520724 seconds)
  done (took 5.958894165 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.188116333 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.453444095 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.141918796 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.885616712 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.896096361 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.210238066 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.696230642 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.422811334 seconds)
  done (took 31.5274662 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.18389892 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.118215739 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.657873078 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.69531331 seconds)
  done (took 16.53521094 seconds)
done (took 66.056951613 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.891486677 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.924288205 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.892096148 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.874210755 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.949895692 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.902158729 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.05937249 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.897771415 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.887378544 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.877424259 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.890070267 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.378683229 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.901517852 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.997145865 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.887686733 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.897500601 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.973090854 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.33207045 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.050222555 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.908712384 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.904083487 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.923620284 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.894874846 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 7.035035538 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.904844569 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.89041317 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.323504384 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.89883864 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.531682144 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.890483783 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.919026004 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.216627979 seconds)
  done (took 207.527685449 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.887246703 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.955487885 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.019128777 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.915811434 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.351703679 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.072706591 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.991837788 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.496513971 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.894486419 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.89470169 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.075195018 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.893585877 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.104905336 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.839041979 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.939279321 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.949617333 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.1196875 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.117557897 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.947879869 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.057267255 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.907664348 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.004834626 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.941145451 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.066458138 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.933311691 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.922102073 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.898695063 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.916108244 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.087055698 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.098799073 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.902474313 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.92723071 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.098974675 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.761452755 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.912396118 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.91278313 seconds)
  done (took 174.637438572 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.065641866 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.887905442 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.88817464 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.888224878 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.89547544 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.889379461 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.018042027 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.020922973 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.50572152 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.461050375 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.945286235 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.678705503 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.888763094 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.95663472 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.90142632 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.890016317 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.904532157 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.915079084 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.893913346 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.889512857 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.033392757 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.903757153 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.119304731 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.899924202 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.88980069 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.894402149 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.259809724 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.889315002 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.894911568 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.131524962 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.890203478 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.889501147 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.749843518 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.134178083 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.98317818 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.892337315 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.895306392 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.889890219 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.10711716 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.891640625 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.890125406 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.892362801 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.030420658 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.890547781 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.017450026 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.890272802 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.371424479 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.890405844 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.889513051 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.033675121 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.751866548 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.892252467 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.890746067 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.893348781 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.890019172 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.890817827 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.904551561 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.712196371 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.980317101 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.89361939 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.894565854 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.897320736 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.891430391 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.97902875 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.895650444 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.323415263 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.955134503 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.021667806 seconds)
    (68/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.014889616 seconds)
    (69/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.895345974 seconds)
    (70/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.957779103 seconds)
    (71/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.98353764 seconds)
    (72/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.892056029 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.890981583 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.890875425 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.890329678 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.890919919 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.891595239 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.972296195 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.891838941 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 4.059424142 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.900522614 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.893766255 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.946687574 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.961722387 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.893795349 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.747396806 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.896627246 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.892906837 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.153293479 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.892835159 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.957180262 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.893072312 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.891794547 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.892326459 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 4.035025957 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.021968344 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.603054639 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.896850627 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.678341953 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.904353791 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.04529752 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.893939405 seconds)
    (103/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.893706166 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.038421785 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.894235372 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.974266189 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.898570593 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.894645343 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.892636333 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.926772336 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.894586736 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.946673327 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.898133207 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.265097733 seconds)
  done (took 416.181048492 seconds)
done (took 802.295912607 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.542921176 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.507336634 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.61595231 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.529296288 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.50640379 seconds)
  done (took 14.528639547 seconds)
done (took 16.35645805 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984863686 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990582628 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.918756467 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986483458 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.915900677 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.98610613 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.970291724 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.920123996 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.954695429 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.918378861 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.956004058 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.919752787 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.907396235 seconds)
  done (took 27.156592006 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.121674797 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.133208524 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.969389935 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.136441044 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.944677836 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.12422542 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.060934535 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.049156574 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.048631621 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.910865145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.907510476 seconds)
  done (took 24.235285133 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.123047674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.135866684 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.975054986 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.13553636 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.946444682 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.131427791 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.060268834 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.048387336 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.051103496 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.91097982 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.907123465 seconds)
  done (took 24.252103829 seconds)
done (took 77.471367789 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.908855768 seconds)
  done (took 3.733647258 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.931119029 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.098551171 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.908729493 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.905506183 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.900973618 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.903103227 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.905902025 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.901030356 seconds)
  done (took 17.281526519 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.899621889 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.900406187 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.900677246 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.895414644 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.898872171 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.895897472 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.896182989 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.900047683 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.899434338 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.895959978 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.898040312 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.895675717 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.89871262 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.896802449 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.893250864 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.893712095 seconds)
  done (took 32.184482717 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.896072206 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.895686841 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.892978648 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.893811937 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.892647605 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.893163798 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.895042102 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.892499079 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.891537821 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.892014579 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.893047242 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.892007568 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.891913977 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.89257451 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.89289102 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.892666674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.89184452 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.892665883 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.896967885 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.891944959 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.892924921 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.892682957 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.893287819 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.893241738 seconds)
  done (took 47.261123252 seconds)
done (took 102.287756983 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.846942001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.61283775 seconds)
  done (took 10.280612925 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.897763753 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.896347962 seconds)
  done (took 5.687508518 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.895571384 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.897332998 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.895905171 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.896778144 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.896218735 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.896345991 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.896976948 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.896174846 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.896443573 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.901763562 seconds)
  done (took 20.790773052 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.895440112 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.895451256 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.892376775 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.897010152 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.895073123 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.893149955 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.895503079 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.895057498 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.896462196 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.894578988 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.896398848 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.893763698 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.896194951 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.892588354 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.897004201 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.892914127 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.892188827 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.892850103 seconds)
  done (took 35.925895149 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.896638243 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.895797363 seconds)
  done (took 5.613447548 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.89324054 seconds)
    (2/7) benchmarking "second"...
    done (took 1.893369944 seconds)
    (3/7) benchmarking "month"...
    done (took 1.893896273 seconds)
    (4/7) benchmarking "year"...
    done (took 1.895040243 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.893718733 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.893499707 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.894370175 seconds)
  done (took 15.078542486 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.898687243 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.05908504 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.131060837 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.534769065 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.897870121 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.901268907 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.894599658 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.899440881 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.900432869 seconds)
  done (took 20.938974914 seconds)
done (took 116.137848101 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.739456542 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.892739887 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.138387184 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.950657141 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.928905149 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.181717974 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.898642511 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.191039335 seconds)
done (took 43.744703551 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.967260449 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.177226585 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.271995749 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.909586812 seconds)
  done (took 17.165210871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.860712087 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.398929075 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.921333458 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.462858117 seconds)
  done (took 20.48543129 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.25630728 seconds)
    (2/2) benchmarking "read"...
    done (took 2.241500854 seconds)
  done (took 6.308454038 seconds)
done (took 52.734206101 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.880064852 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.878023169 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.880324962 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.877557284 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.880009727 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.878176303 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.878968764 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.878265839 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.880790385 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.880983263 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.880459967 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.881712222 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.880249344 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881834402 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.881251097 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.877792997 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879332334 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881545709 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.878835214 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.878273108 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.878672154 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.880733841 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.879383964 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.8781205 seconds)
  done (took 46.917447221 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.880685714 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.878652277 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.882819674 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.880176192 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.87730376 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.879914157 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.879687939 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.879952164 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.879327309 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.879346406 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.877661878 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.876220645 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.879724523 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.878314869 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.878224041 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.875907276 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.878867773 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875799493 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.879509636 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.875593614 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.877895712 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.875276165 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.876186615 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.881056409 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.87390401 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.874039545 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.877245971 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.875370779 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87784667 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.875108506 seconds)
  done (took 58.14455992 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.881285037 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.884590794 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.877382469 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.878871786 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.875226731 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.875288638 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.87646723 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.874854711 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.877315609 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.87633828 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.875585902 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.875320781 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.875126469 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.875302007 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.875931008 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.874949131 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.875842982 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.875248993 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.875652754 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.876311139 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.87532654 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.875727292 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.875738713 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.876088734 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.877773366 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.87429783 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.874863361 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.876087048 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.875013729 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.876363719 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.87705807 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.875116657 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.876711086 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.874665076 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.875613552 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.877279977 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.878475106 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.88227457 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.874860498 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.875732063 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.876673388 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.875600284 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.876287529 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.876600051 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.875832218 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.876195668 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.877546112 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.875209687 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.875823617 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.877718597 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.87509625 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.876603909 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.875881612 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.874948248 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.874742669 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.875569157 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.876390607 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.874423498 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.876497128 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.875693802 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.876375434 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.875189852 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.87778479 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.875221943 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.875864779 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.874736059 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.874747567 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.876564562 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.874418716 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.875108765 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.874804642 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.874816081 seconds)
  done (took 136.886853055 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.874771096 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.871902529 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.871826948 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.871394981 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.873080036 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.876603855 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.871623621 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874117109 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871566683 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.87467687 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876157183 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.871921934 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871095049 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.874333311 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.873228087 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.87161807 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.873373552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.87136669 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.874597454 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.8752054 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.875288101 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.873325287 seconds)
  done (took 43.016678647 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.875172722 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.874188766 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.870606694 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.877941227 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.871511058 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.874239195 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.873925722 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.874682678 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875838875 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.872494415 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.87157456 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.875241923 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.871635774 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871670557 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.874559039 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.872475938 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.874388277 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.871697002 seconds)
  done (took 35.524003904 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.873347741 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.871531909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.874809461 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.872405854 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.872689567 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.876184109 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871871477 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.874271439 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.874726602 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.871938508 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.873763881 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.875545987 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.87446253 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.871103471 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.874276776 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.870965648 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.877026648 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871225607 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874782007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.871858201 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.872378312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.876041673 seconds)
  done (took 43.017517221 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.874274073 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.875356154 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.872035523 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.871471362 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.873554903 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.874445099 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.87409603 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.872652008 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.87426123 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.875931737 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.871522266 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.874616535 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.871358531 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.873008516 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.872359394 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.871853405 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.874713734 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.872616983 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.874512891 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.872182482 seconds)
  done (took 39.267503851 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.876605524 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.877058622 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.876450351 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.876121073 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.878149673 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.876456762 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.87632968 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.876798174 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.876125374 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.877075616 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.878013919 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.87676123 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.876733508 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.876554369 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.875425171 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.877729975 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.875559261 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.877130917 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.876424336 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875909219 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.877320648 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.877009356 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.877073358 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.876514877 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.876672285 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.877355633 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879054925 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.877071274 seconds)
  done (took 54.355287057 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.875309606 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.8761193 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.874419019 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.873460757 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.873225965 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.872801744 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.873516348 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.875949353 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.875959797 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.872970355 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.875943254 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.875653395 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.876453977 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.878878081 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.877054712 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.876594723 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.876530555 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.874041339 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.874371802 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873252278 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.877172231 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.876862652 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.876233513 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.876678248 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.873583553 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.877179824 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.87437698 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.873686599 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.877149429 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.876867701 seconds)
  done (took 58.064309741 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.895461205 seconds)
    (2/2) benchmarking "in"...
    done (took 1.89566399 seconds)
  done (took 5.594218052 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.874480543 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.877652554 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.876090318 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.874160689 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.873800247 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.879237969 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.877242823 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.874199711 seconds)
  done (took 16.809673641 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.877548573 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.877630446 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.878853438 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.877135456 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.878386604 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.877043764 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.883932855 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.877846276 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.878972934 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.878016152 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.882997743 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.88436764 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.881857249 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.878929941 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.877826154 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.880259839 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.877652978 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.879678034 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.882632183 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.879011712 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.879836053 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.881114857 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.880120085 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.877779183 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.87890922 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.888748668 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.883470616 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.878228633 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.880844173 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.883449229 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.8785122 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.876211268 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.880421121 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.88000481 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.879906016 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.881059852 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.887812453 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.880359634 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.884640619 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.881302683 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.881067282 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.877621229 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.881156709 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.88146634 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.881605896 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.88157183 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.88060381 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.876458949 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.879770234 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.88395927 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.882920369 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.879081836 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.878385961 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.883258336 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.882375945 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.887418087 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.881934754 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.88266342 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.886818877 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.88835445 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.891929562 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.886722525 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.882275195 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.882223548 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.888652919 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.899946381 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.887135058 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.877788952 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.878446718 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.880772637 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.887535104 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.893167538 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.888672817 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.882570462 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.882199975 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.880533289 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.881378571 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.881581042 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.888631121 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.884388424 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.882910551 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.885296294 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.890297758 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.899007999 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.882287407 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.884104227 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.88352823 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.885963224 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.881919453 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.891926198 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.882828578 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.882318308 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.883423159 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.882093362 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.883787785 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.88538661 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.880873633 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.886757864 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.880181404 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.883204944 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.884995096 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.885581365 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.889567586 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.88586316 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.88382384 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.888900396 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.88290703 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.882678622 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.891476102 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.883204117 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.884506335 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.883532996 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.889526333 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.881157519 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.885900686 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.889939914 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.884715645 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.884864975 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.884451822 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.886945886 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.891583493 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.904938977 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.884498331 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.883362928 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.890906507 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.894055905 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.885904728 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.886434245 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.884573243 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.883795313 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.88188195 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.886433066 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.884826105 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.884875048 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.886440345 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.885391585 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.882275985 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.885379746 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.88608869 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.886634708 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.886649121 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.885846589 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.887616919 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.886864752 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.886488422 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.88797903 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.890660772 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.88544594 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.887161467 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.886782534 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.884274679 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.886132698 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.885831355 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.887382094 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.886418492 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.887770417 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.886550993 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.887479615 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.887021407 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.886386328 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.886106339 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.887470283 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.889101527 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.888209935 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.890689098 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.885940471 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.883953259 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.887043293 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.886452234 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.886225435 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.885716582 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.885696367 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.890212495 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.894562086 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.887973656 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.887841015 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.889738262 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.889696881 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.888365412 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.887966518 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.891737468 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.893341829 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.891044105 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.89277128 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.888481132 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.888266702 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.887311879 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.887971932 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.887608253 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.88843026 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.890262351 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.893944684 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.900499443 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.896119918 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.888422403 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.891239524 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.889337901 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.892538094 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.893761739 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.889559066 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.888933188 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.889566747 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.888009727 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.892749183 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.889886813 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.888723209 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.887123059 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.88829962 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.887815928 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.890489165 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.888411167 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.888449662 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.889362482 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.885356181 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.890616897 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.889100129 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.88877213 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.88481579 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.886403041 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.890552813 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.888765602 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.890124773 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.894844453 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.885229549 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.889824597 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.891058887 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.889149326 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.888356023 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.888922202 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.890683818 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.890621005 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.897984863 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.888389259 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.889934925 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.895734267 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.890927645 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.888535044 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.893428581 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.889773627 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.887111184 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.893548423 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.89613256 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.889407071 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.891901495 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.891581308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.890266399 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.892440833 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.89594679 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.88747077 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.889927114 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.89060823 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.893387843 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.887373775 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.892996793 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.89226933 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.891219916 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.893377603 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.892299573 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.890124173 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.891727592 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.892093361 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.892053367 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.891802705 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.89193022 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.897258168 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.895206699 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.890772143 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.895494568 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.891626645 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.894263832 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.891491616 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.892136286 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.893360371 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.903609406 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.898792081 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.897181969 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.892599011 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.892653469 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.896485643 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.892331027 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.893884616 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.891233239 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.891865316 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.892391394 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.891233541 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.889016193 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.892665698 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.892205296 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.895890664 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.892207127 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.895743222 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.892249638 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.891797335 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.895028902 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.893047423 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.892321431 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.89295602 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.893591153 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.895456232 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.895029351 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.892004644 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.892986944 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.900190678 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.893937124 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.896110966 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.892196381 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.892676639 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.893044067 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.895432763 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.8972888 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.895859233 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.901257902 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.895491397 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.90085482 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.896419553 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.902021266 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.895989842 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.8969648 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.900225046 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.890859414 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.895467509 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.894148734 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.894906755 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.900757313 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.895025906 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.89493056 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.899029665 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.895964822 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.895999259 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.894180658 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.897703738 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.895865578 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.897062205 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.904768767 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.896182547 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.900146787 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.897177988 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.891746584 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.896357642 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.895260621 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.893852086 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.899881126 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.895666154 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.897038103 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.894878325 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.896353925 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.897995769 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.89606264 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.896590499 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.892779022 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.895198501 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.903415941 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.896030316 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.900743148 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.89720924 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.905015348 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.897964859 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.903778533 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.896814667 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.898587263 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.897880705 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.896167519 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.900713094 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.897640788 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.898409497 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.899132369 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.89786072 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.902010743 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.898283708 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.899538051 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.898500147 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.898214416 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.899587848 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.905787951 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.917625755 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.898162582 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.901644503 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.894257872 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.899890315 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.90167823 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.899509769 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.897396287 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.898160286 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.909471024 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.903577978 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.89879537 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.900049587 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.898284069 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.902684252 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.897435753 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.899129053 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.898333915 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.899558156 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.900682489 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.902385354 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.904197769 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.900880095 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.902682763 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.902041012 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.902492186 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.910616401 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.902508145 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.901868933 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.902810746 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.902581037 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.901947607 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.902153932 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.903323326 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.904334637 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.903604241 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.902827541 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.908784636 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.905930602 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.905574659 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.904764579 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.903831526 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.902333395 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.902885558 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.903552396 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.903912427 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.90462421 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.903837234 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.902149542 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.902461403 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.901979033 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.905130973 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.903303721 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.902443414 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.903202902 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.906842728 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.904092092 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.899838893 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.904263371 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.902400338 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.901376323 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.904373363 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.910175237 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.905541041 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.912525488 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.91018558 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.907522405 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.904761007 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.906277125 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.910486108 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.902570427 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.903403944 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.907441597 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.906138794 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.905203292 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.905105018 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.905528672 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.911420906 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.904537979 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.903845414 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.912185345 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.907061693 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.906858702 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.905160964 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.906910771 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.904235974 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.902051194 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.90460514 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.904336497 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.911289893 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.906485916 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.90545745 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.906106996 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.902910295 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.903838734 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.909659046 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.905163211 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.904959911 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.901351071 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.904346423 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.905163812 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.903735223 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.901657762 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.903627392 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.903786248 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.904774614 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.908343876 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.899659011 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.906827 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.903950522 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.90458061 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.904844965 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.904177352 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.900257482 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.900613459 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.90437233 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.905066633 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.902942472 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.905836852 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.903820018 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.905423999 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.904976841 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.906190301 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.907544445 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.913953271 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.909919833 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.901140829 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.905093231 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.903292666 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.90813596 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.905310587 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.904688148 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.904983295 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.904723884 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.903239949 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.906536836 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.904608407 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.908612675 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.918222598 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.906024137 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.905730962 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.905397332 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.908441138 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.904941928 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.901375855 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.907210897 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.906378631 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.907044901 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.912666652 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.906873641 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.910944448 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.905788293 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.90492928 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.908617007 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.906727224 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.911294515 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.910738482 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.905909382 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.907389749 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.910917714 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.91859134 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.907567793 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.912680235 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.929024086 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.906407313 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.907144685 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.907647973 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.904836679 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.906797169 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.90753047 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.909594722 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.90691547 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.907549026 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.906825845 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.906009017 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.91083966 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.907237151 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.905421877 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.905066689 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.906342855 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.907144566 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.903743485 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.909021303 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.906350655 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.907022418 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.906690472 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.907342053 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.90872105 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.917481207 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.913960129 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.905565769 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.907601429 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.90404523 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.909691931 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.908090838 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.915169432 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.912554035 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.908506589 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.908687888 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.909515436 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.909405526 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.904756651 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.906990756 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.908455792 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.907409373 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.904947708 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.91836851 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.915262915 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.911527796 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.908170908 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.908307993 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.907352881 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.908419123 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.908863056 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.908310837 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.908689826 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.908704287 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.912520514 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.907479343 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.90836504 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.910347669 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.914363888 seconds)
  done (took 1131.54138186 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.904837913 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.905552291 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.904456782 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.905639933 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.905881872 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.905463999 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.906109709 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.905031907 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.905377926 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.905738711 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.905389533 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.907061514 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.905135368 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.905832806 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.905927965 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.906249706 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.905670689 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.906879523 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.906002235 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.906580772 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.906120668 seconds)
  done (took 41.853871424 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.909457718 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.906081697 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.906846236 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.909628243 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.907448999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.910681749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.907094793 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.910282297 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.910513497 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.90763063 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.910078282 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.910024549 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.906607319 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.907446657 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.907063715 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.909838477 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.911222488 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.90747992 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.909768572 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.907748964 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.90957067 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.908604742 seconds)
  done (took 43.825458707 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.911492484 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.912726747 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.909182662 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.907870237 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.9105832 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.907512039 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.911693572 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.910463551 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.910951798 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.910996148 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.908842551 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.91065356 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.91673164 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.914360036 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.913397627 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.910992682 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.061337379 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.912546593 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.912630436 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.913213558 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.908069991 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.916679415 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.907413566 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.908008615 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.910905604 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.912660714 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.91171711 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.911953441 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.91406739 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.914053636 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.918129555 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.913727078 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.912453889 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.915777478 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.912519289 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.915883649 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.915137385 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.914639825 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.910909059 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.912248139 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.921660851 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.928510973 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.914644115 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.920484839 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.911439241 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.913480832 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.915633785 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.921737415 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.910931068 seconds)
  done (took 95.730788653 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.913681918 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.914550548 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.911890235 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.913457397 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.913760771 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.914939922 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.914643428 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.913658475 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.912107114 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.913346 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.915169196 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.909496589 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.910323371 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.912233242 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.913257238 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.909326279 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.91078875 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.911675267 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.91167234 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.911981338 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.910281803 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.915152377 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.91265048 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.910803265 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.913670728 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.910907482 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.911700386 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.913745299 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.914232312 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.912458002 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.91400536 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.915209002 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.916136926 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.911406387 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.912654627 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.915358598 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.913421597 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.912798781 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.915598952 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.912358358 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.915206181 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.91386272 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.914417484 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.913240994 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.911690126 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.913650311 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.910754614 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.911167233 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.911326383 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.91368674 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.91526447 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.911831806 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.914302102 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.912712182 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.914377173 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.915149904 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.912111465 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.911813038 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.914843774 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.911013142 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.912097666 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.914728767 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.911223096 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.915718885 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.914376549 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.911926247 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.913205878 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.91415162 seconds)
  done (took 131.927824922 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.916143533 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.915556487 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.915997233 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.916921302 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.917273251 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.917467121 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.918756476 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.917757775 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.918018529 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.918257713 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.916197987 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.915224264 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.918165564 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.915539444 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.91740699 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.917983778 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.918992886 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.918897059 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.918415855 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.918091648 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.918226386 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.917357264 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.917357285 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.917118394 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.917736874 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.919146701 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.919776499 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.917938506 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.918430433 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.918151251 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.917613813 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.916595524 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.916612314 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.918575445 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.917784085 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.917351163 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.918313922 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.917924172 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.918756524 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.917522499 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.918682656 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.917607538 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.916897481 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.918674785 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.918758943 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.917810055 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.918004442 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.918345533 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.916692728 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.917286659 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.917590023 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.918273733 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.916980028 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.918145863 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.918731912 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.916161733 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.91810086 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.91942929 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.918997039 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.919358774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.919620743 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.917674392 seconds)
  done (took 120.745884995 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.918032683 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.917640681 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.915362573 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.91566151 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.918162301 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.914364893 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.917554175 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.918829507 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.9186404 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.919642297 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.918323985 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.915941836 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.917464368 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.917940011 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.915585038 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.917255951 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.915487578 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.915596612 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.917718484 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.916876575 seconds)
  done (took 40.185517193 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.915439556 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.919114405 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.915685452 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.915604323 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.919189413 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.917800327 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.919843232 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.919034393 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.915755493 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.919172129 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.918665113 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.920462918 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.915456034 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.91842145 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.919908825 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.918896561 seconds)
  done (took 32.532361495 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.916806286 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.919135128 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.920970185 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.923209149 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.918036447 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.917109752 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.920822246 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.916143657 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.9179843 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.919735663 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.921355681 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.920178448 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.920178874 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.922093222 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.917062867 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.920642207 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.918795978 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.918011139 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.921427896 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.920920588 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.917718166 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.917866816 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.920644575 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.920545181 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.918569161 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.918982024 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.918202523 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.919353664 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.91779373 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.921784417 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.918488033 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.91872059 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.920545514 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.917596496 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.923037202 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.921138399 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.922924064 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.922979357 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.922969159 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.923091688 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.922758369 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.9200732 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.921736862 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.924849645 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.919147371 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.922418222 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.919444424 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.919362709 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.919783845 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.919406568 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.921792387 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.923430033 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.923910613 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.923252183 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.923500822 seconds)
  done (took 107.464122501 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.921121541 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.922969766 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.92053318 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.922868941 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.92475675 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.921795139 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.92269426 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.91962886 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.920535971 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.922946514 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.922299291 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.924111043 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.921245608 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.924410916 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.924069073 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.925753595 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.921707347 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.921685805 seconds)
  done (took 36.453192056 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.922097979 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.921951449 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.923304497 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.92215338 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.92036985 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.924450615 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.923147342 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.924592458 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.923713186 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.923685282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921800116 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.923019556 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.924046342 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.923416488 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.922979969 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.921830949 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.925388228 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.924340819 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.921617114 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.922182869 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.925514284 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.924366862 seconds)
  done (took 44.157124716 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.925705414 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.925801194 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.939162609 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.941431099 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.945165904 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.95529529 seconds)
  done (took 13.480833714 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923817697 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.925603732 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.923251862 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926645496 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924930532 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922943504 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923656489 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923216084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926567316 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925279807 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923751133 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926178178 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926432598 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.923004046 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.925666579 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925959834 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.925204969 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925657933 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924661572 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928405152 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925663899 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926284053 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923033001 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924817411 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924696434 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925399751 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92832484 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926625771 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924892968 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926171415 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.9285096 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925429635 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927351239 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.926808196 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929065148 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928216845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924361753 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927441598 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.928144295 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926289147 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.930329344 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.928227363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.928240619 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926916374 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.929399168 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.925589131 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.925960465 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92475431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926033155 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.929663279 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926781397 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926176552 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928697461 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927459841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930701048 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930592532 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926892882 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928350507 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93045232 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927564403 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.928477814 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.930050993 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.926238722 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927939056 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.931246267 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928377333 seconds)
  done (took 129.012410086 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.929118183 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.927755419 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929675965 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929021399 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928381185 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.928789936 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.929510332 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927503569 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.930393361 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92845838 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930591251 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.929095147 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.929982338 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.929168704 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.928995915 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92905088 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.929576861 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930302063 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931174114 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.932949785 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.928297688 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92834539 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.929327537 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931569538 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930844926 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.931306965 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92987651 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.930280925 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932861923 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.929858769 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.930334549 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.930340047 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.930394931 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.930820894 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.930694573 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.930477216 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.929767979 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.930534162 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93116468 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.933563727 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.930246377 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.93600034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.931234846 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.930729811 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931091814 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.93060759 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931191116 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.931829132 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.931959869 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.931948251 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.931574947 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.93222594 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.930241205 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931424804 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.932631193 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.931389353 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.931924961 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.933477036 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93230767 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.934109437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.931464515 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.93270931 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.935634149 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.933366701 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.934189824 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.932384627 seconds)
  done (took 129.294690583 seconds)
done (took 2637.613816413 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.929590813 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.926060432 seconds)
  done (took 15.714386061 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.092645136 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.045832027 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.929206617 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.944617793 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.929183598 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.927584115 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.935147077 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.929659605 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.93078193 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.931464008 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.929881079 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.116815834 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.981930166 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.929900792 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.930925667 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.023740544 seconds)
  done (took 53.36920337 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.9333023 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.934303855 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.945413871 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.936835638 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.934166241 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.945086084 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.966761573 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.937359226 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.966815098 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.945608069 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.001017006 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.943446899 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.933750757 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.982657922 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.945890069 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.948123754 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.025973231 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.00729666 seconds)
  done (took 37.089929925 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.009249138 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.9333121 seconds)
  done (took 10.805203366 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.94889776 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.968406113 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.940455059 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.928557822 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.943505604 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.965309642 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.93868692 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.944422764 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.95943559 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.960826839 seconds)
  done (took 71.362389026 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.942720651 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.939999242 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.938412089 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.936581879 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.92913733 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.934773307 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.938279897 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.935503682 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.596905658 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.972052721 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.943982887 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.945271007 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.939568684 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.940684809 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.936743918 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.9639866 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.035730306 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.93686278 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.936504418 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.945055092 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.939162481 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.991364061 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.951715714 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.93795686 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.968911184 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.600075228 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.947507405 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.944603029 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.032545497 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.937366433 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.939113765 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.939226622 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.942295205 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.326594687 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.212904813 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.938096737 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.952897956 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.948676251 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.937840878 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.029965508 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.941193023 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.946363899 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.522698628 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.189470724 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.051634127 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.980433845 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.244054309 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.955429508 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.944044331 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.970235742 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.941242975 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.941750145 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.952038772 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.416560158 seconds)
  done (took 135.873358939 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.935558254 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.288927037 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.10735634 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.935720508 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.225283787 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.146031187 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.936940024 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.986314667 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.936206487 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.168877828 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.192676724 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.048081681 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.937659586 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.936592683 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.93390058 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.936454987 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.095830502 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.010549234 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.936878179 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.934337298 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.96811723 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.18243717 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.061934299 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.937448806 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.967630032 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.151894384 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.06320643 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.045480296 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.722054742 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.934793673 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.003766754 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.936959126 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.936558784 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.933720942 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.095168085 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.051776748 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.022280943 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.938197945 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.936816823 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.937805621 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.697373325 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143703974 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.037208603 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.079219363 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.090199087 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.148260106 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.722977566 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.93769155 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.684387774 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.104343505 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.172692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.168932772 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.061236731 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.940866642 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.464821507 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.935611509 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.937325468 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.189773296 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080904718 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.04044615 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.93947974 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.939229008 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.936241759 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.239987712 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.939372316 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.037546492 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.94025025 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.937631132 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.037839832 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.042502983 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.079176664 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151959057 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.972115308 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.685991606 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.157042828 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.18961577 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.00745688 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.19152138 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.939230743 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.937820229 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.021968886 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.788694054 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.195507905 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.229227848 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.194615817 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.97768054 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.663140136 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.938096051 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.173873874 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.162348196 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.195862331 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.08676798 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.185199066 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.275907757 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.939322401 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.939319439 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.159523467 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.079075628 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.942815691 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.28786902 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.175825904 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.501490181 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.961946848 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.251427879 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.073310229 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.943096079 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.586409011 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.940973518 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.166484854 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.983842569 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.942530657 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.939820318 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.163600013 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.940494977 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.940119875 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.601475812 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.00609687 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.942685069 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.178353362 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.943484515 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.205786123 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.941000472 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180685936 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.055492155 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.976624028 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.175870881 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089986761 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.944645643 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.191904614 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.188453973 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.05919224 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.166914927 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.635089384 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.942864081 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.232502694 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.942246696 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.940004601 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.115703925 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.941889877 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089408449 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.947939366 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.228357387 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.969397991 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.179959739 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.946037854 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.203064821 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.979433978 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.995656556 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.945427699 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.070203532 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.943784245 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.778150292 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.103548942 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.944556814 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.942367219 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.702580607 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.94054538 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.101234809 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.176772812 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.966660505 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.017441788 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.617086298 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.941654809 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.0329421 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.969417747 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.331710148 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.944511284 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.199152832 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.945959528 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.942442923 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.943095868 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.237689741 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.130045163 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.945855693 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.943888236 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.842261333 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.942433119 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.942399626 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.130923089 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.2757006 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.943176524 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.151437614 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.947415305 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075805092 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.949025513 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.032261057 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.289140765 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.943181022 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.945242065 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.944655063 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.943208503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.945243397 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.21065327 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.973441184 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.483053381 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.085243782 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.214875618 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.258190315 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.196345655 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.992190456 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.94805479 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.205229468 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.946050629 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.012948661 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.946049241 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.96992182 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.178851566 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.947704071 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.239704504 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.225882707 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.990940512 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.996323966 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.947200419 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.947444469 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.946031108 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.09491526 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.041822822 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.947608946 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.943245649 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.064054303 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.071236708 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.163727639 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.948019135 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.989917072 seconds)
  done (took 920.490742217 seconds)
done (took 1246.565634237 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.94521158 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.950461863 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.936256395 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.950498161 seconds)
  done (took 29.658209876 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.95495768 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.951992155 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.954519314 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.952357071 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.955234704 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.952595486 seconds)
  done (took 13.597833247 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.031048519 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.361790892 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.950443596 seconds)
  done (took 22.220416114 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.021229225 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.334055888 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.058286725 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.369585227 seconds)
  done (took 10.65900116 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.957127248 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.953720037 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.954808506 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.955850494 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.956990005 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.958575808 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.955341774 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.955122988 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.957327509 seconds)
  done (took 19.483358709 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.508481665 seconds)
done (took 102.004469308 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.037133134 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.381056252 seconds)
    (3/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.967678416 seconds)
    (4/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.345641768 seconds)
    (5/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.963820758 seconds)
    (6/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.239695761 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.104178056 seconds)
    (8/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.994037849 seconds)
    (9/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.958548727 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.475208895 seconds)
    (11/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.067253449 seconds)
    (12/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.052653818 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.98534069 seconds)
    (14/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.380849692 seconds)
    (15/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.079103749 seconds)
    (16/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.183923757 seconds)
    (17/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.988331034 seconds)
    (18/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.123473689 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.069811377 seconds)
    (20/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.21245707 seconds)
    (21/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.991646418 seconds)
    (22/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.077006662 seconds)
    (23/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.882210444 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.19591344 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.341633131 seconds)
    (26/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.965190995 seconds)
    (27/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.110176509 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.096847292 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.211129891 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.61865498 seconds)
    (31/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.102564866 seconds)
    (32/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.946712519 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.749605769 seconds)
    (34/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.312334252 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.97342665 seconds)
    (36/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.182612315 seconds)
    (37/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.996411394 seconds)
    (38/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.044715396 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.033275455 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.047658125 seconds)
    (41/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.047600675 seconds)
    (42/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.349583659 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.133792015 seconds)
    (44/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.215004682 seconds)
    (45/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.308553976 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.990016345 seconds)
    (47/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.366067221 seconds)
    (48/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.157145174 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.476458928 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.209299092 seconds)
    (51/309) benchmarking ("sort", Float64, false)...
    done (took 5.71829252 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.030787074 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.063790423 seconds)
    (54/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.091402062 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.963890224 seconds)
    (56/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 4.127507225 seconds)
    (57/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.108821879 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.60929077 seconds)
    (59/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.238504293 seconds)
    (60/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.062895729 seconds)
    (61/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.310387805 seconds)
    (62/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.970460214 seconds)
    (63/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.227052312 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.905860436 seconds)
    (65/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.995479168 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.982763995 seconds)
    (67/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.124422164 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.29484529 seconds)
    (69/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.977716022 seconds)
    (70/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.026301301 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.962295612 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.295681867 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.076772685 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.063029547 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.773680908 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.634141295 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.952854954 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.172841446 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.951568057 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.535929069 seconds)
    (81/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.441524884 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.971772504 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.63024305 seconds)
    (84/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.055387406 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.947207951 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.18793482 seconds)
    (87/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.998130102 seconds)
    (88/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.061047205 seconds)
    (89/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.961198264 seconds)
    (90/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.964844589 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.176999493 seconds)
    (92/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.154922781 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.405483941 seconds)
    (94/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.971036684 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.788263648 seconds)
    (96/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.287727103 seconds)
    (97/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.970886097 seconds)
    (98/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.672543799 seconds)
    (99/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.056657114 seconds)
    (100/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.108787665 seconds)
    (101/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.034904801 seconds)
    (102/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.415912874 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.160958011 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.207115019 seconds)
    (105/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.058811735 seconds)
    (106/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.1315532 seconds)
    (107/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.063817414 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.896371874 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.969678261 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.647483137 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.307027831 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.990268166 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.144898336 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.292107543 seconds)
    (115/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.134139035 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.974005278 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.98846071 seconds)
    (118/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.09258967 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.041109773 seconds)
    (120/309) benchmarking ("sort", Bool, false)...
    done (took 2.189649307 seconds)
    (121/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.991258901 seconds)
    (122/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.953646166 seconds)
    (123/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.86792425 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.225450167 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.421223628 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.085467162 seconds)
    (127/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.461940325 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.193638677 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.046306591 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.216936789 seconds)
    (131/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.035018696 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.064630366 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.161161246 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.074361786 seconds)
    (135/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.108472919 seconds)
    (136/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.05965366 seconds)
    (137/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.872956463 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.970675825 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.915184234 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.327076271 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.958250762 seconds)
    (142/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.205868176 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.204898105 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.971818434 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.082126317 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.262750042 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.959617217 seconds)
    (148/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 4.10843705 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 6.971633458 seconds)
    (150/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.086802141 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.611277114 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.118889984 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.071857423 seconds)
    (154/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.990698591 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.245892992 seconds)
    (156/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.97467872 seconds)
    (157/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.094653175 seconds)
    (158/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.667059286 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.979192764 seconds)
    (160/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.057744375 seconds)
    (161/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.087016922 seconds)
    (162/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.230411217 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.041912392 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.967015021 seconds)
    (165/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.37080438 seconds)
    (166/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.958368233 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.00793787 seconds)
    (168/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.977636088 seconds)
    (169/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.168918944 seconds)
    (170/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.043049487 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.271636786 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.975177645 seconds)
    (173/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.614637324 seconds)
    (174/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.171693745 seconds)
    (175/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.960704696 seconds)
    (176/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.309604452 seconds)
    (177/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.975287568 seconds)
    (178/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.430931463 seconds)
    (179/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.980668924 seconds)
    (180/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.390194299 seconds)
    (181/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.99010957 seconds)
    (182/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.927126948 seconds)
    (183/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.968431658 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.145371751 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.986807934 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.924798218 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 2.012174551 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.876595336 seconds)
    (189/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.050091515 seconds)
    (190/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.974647197 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.981377794 seconds)
    (192/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.333522793 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.399262195 seconds)
    (194/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 2.007479021 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.008897238 seconds)
    (196/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.886154885 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.317839601 seconds)
    (198/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.981824148 seconds)
    (199/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.962338774 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.151853088 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.00386747 seconds)
    (202/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.42640926 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.042091558 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.221748958 seconds)
    (205/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.089575666 seconds)
    (206/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.610310085 seconds)
    (207/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.032009272 seconds)
    (208/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.489360884 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.072012857 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.268439942 seconds)
    (211/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.050509141 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.151503531 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.633831247 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.174282561 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.361427287 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.998643034 seconds)
    (217/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.079683235 seconds)
    (218/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.121847357 seconds)
    (219/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.082059393 seconds)
    (220/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.134078283 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.155710011 seconds)
    (222/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 2.00151266 seconds)
    (223/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.047147738 seconds)
    (224/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.379016999 seconds)
    (225/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.077695045 seconds)
    (226/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.992782331 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.001398748 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.997161584 seconds)
    (229/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.262580794 seconds)
    (230/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.221262859 seconds)
    (231/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.227179425 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.08499415 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 2.019827509 seconds)
    (234/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.364986353 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.868606255 seconds)
    (236/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.099977342 seconds)
    (237/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.988364809 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.338460037 seconds)
    (239/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.116389326 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.108628168 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.964004128 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.929321011 seconds)
    (243/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.122295318 seconds)
    (244/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.495767248 seconds)
    (245/309) benchmarking ("sort", Int8, false)...
    done (took 4.954183821 seconds)
    (246/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.969055254 seconds)
    (247/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.682964616 seconds)
    (248/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.288902422 seconds)
    (249/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.99040819 seconds)
    (250/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.317582438 seconds)
    (251/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.432956862 seconds)
    (252/309) benchmarking ("sort", Float32, false)...
    done (took 5.686594066 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.265447014 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.954740103 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.106263172 seconds)
    (256/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.242915405 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.350749098 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.085381504 seconds)
    (259/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.085912622 seconds)
    (260/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.035716964 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.089040796 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.914025414 seconds)
    (263/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.976110345 seconds)
    (264/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.237320751 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.006783241 seconds)
    (266/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.962830236 seconds)
    (267/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.816470154 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.345062478 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.270568852 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.974430567 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.921648889 seconds)
    (272/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.332482491 seconds)
    (273/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.412091867 seconds)
    (274/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.461055739 seconds)
    (275/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.013934327 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.980177686 seconds)
    (277/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.164314445 seconds)
    (278/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.056972511 seconds)
    (279/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.852666982 seconds)
    (280/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.221570119 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.093785285 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.070425962 seconds)
    (283/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.978284502 seconds)
    (284/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.987490209 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.207306888 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.980534921 seconds)
    (287/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.126274464 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.728194917 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.007400614 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.977600747 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.788268076 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.968391758 seconds)
    (293/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.069838233 seconds)
    (294/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.010265341 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.011224711 seconds)
    (296/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.171287628 seconds)
    (297/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.043558432 seconds)
    (298/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.14931565 seconds)
    (299/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.98630913 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.360929816 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.281283595 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.970545973 seconds)
    (303/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.521607614 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.013256307 seconds)
    (305/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.981128904 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 4.013970066 seconds)
    (307/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.166517331 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.331018338 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.081657593 seconds)
  done (took 1041.411629833 seconds)
done (took 1043.562140753 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 2.014561616 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.014247132 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.991675515 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 2.012451487 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.102702173 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.019319544 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 2.002774282 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.994858128 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.03907802 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.042237323 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.991490728 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.019799056 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.991852446 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.993884831 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.992534721 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.008142801 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.312705745 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 2.027090971 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 2.00801569 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 2.000403242 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 2.007532605 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.991567685 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.040104766 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.017077338 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.996976869 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.99754546 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.997445069 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 2.012274193 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.104974345 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.996409712 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.997123631 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 2.006143724 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.314537793 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 2.027778174 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.985541883 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 2.010937748 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 2.006711452 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 2.004489866 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.996850557 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.024758615 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.405444781 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 2.039064771 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.995926151 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.994882133 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.99489254 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.998475685 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.995977997 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.999125037 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.007011632 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.008343135 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.403205781 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 2.054695581 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.997246037 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.99518335 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 2.006035517 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.995248288 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.997629411 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.011256782 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 2.014475202 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.012445051 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.305484262 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 2.032076623 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.998763087 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 2.012854532 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 2.000546145 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440572153 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 2.034863487 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.998823285 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.407461477 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 2.044624465 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.44092723 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 2.046935887 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.996532207 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 2.010783588 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.026386961 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.312256645 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 2.023156926 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.994292855 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 2.00490324 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.994422008 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 2.004594152 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.008656532 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 2.001378971 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.996013855 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.008195553 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.021797907 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 2.00636082 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.996329447 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 2.008650922 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 2.016220514 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 2.004615856 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 2.007303243 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.99806467 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.990401101 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 2.006639144 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 2.000372036 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.997428109 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.998913232 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 2.00261244 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 2.008643045 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.407225455 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.055770218 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.992616033 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.992778395 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.998323676 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 2.010628643 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.409332362 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 2.041149898 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 2.021535644 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.044923041 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.999099711 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.304690331 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 2.032289764 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.010900219 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 2.005935957 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.999912492 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.992976952 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.306920929 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.437768708 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 2.05691212 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.99984509 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.996971829 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.014144736 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.999391827 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.995946061 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.315408109 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 2.031910453 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 2.01223688 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.120431687 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 2.009553844 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.029967483 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.996799869 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 2.002023172 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.025867632 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.01333554 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.029708863 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 2.001499804 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 2.01477208 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 2.015907971 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.994755213 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 2.008952461 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 2.008932163 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 2.002368909 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 2.005632934 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.995182978 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.028939555 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 2.013297138 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 2.011050432 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 2.022229735 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.121838705 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.997672463 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.307127569 seconds)
done (took 313.433466815 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.068389754 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.990915127 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.095220455 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.995220955 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.07947494 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.082102653 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.992602509 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.992920304 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.993034129 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.366896406 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.992431439 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.993260888 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.993744414 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.994297509 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.077477153 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.996420001 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.996062908 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.331182558 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.997718618 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.066995871 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.995435753 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.994312873 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.995797112 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.367338408 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.994195285 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.997385287 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.067476655 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.997145509 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.369018597 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.990762528 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.996136178 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.332968321 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.092437916 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.016012613 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 2.006369046 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 2.004069211 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.080456146 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 2.00346104 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.08170363 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.079010772 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.097339113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.040063716 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.992939813 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.993991184 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 2.00330977 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.999405433 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.995369184 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.026325482 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.990524638 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.995790357 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.331614801 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 2.007265523 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 2.005843729 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.99622245 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.995524669 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 2.021152715 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.995449091 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 2.000091502 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.089812607 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.998594727 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.062157192 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.412442416 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.369960076 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.997223646 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.992271813 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.996640026 seconds)
  done (took 192.884021622 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.065120396 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.070448703 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.064746397 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 2.005102726 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.048337195 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.069952488 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 2.004456266 seconds)
  done (took 16.247301868 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 2.005860345 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.002376681 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.051359829 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.052157706 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.999787629 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.151886808 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.999792478 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 2.008935926 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.99665697 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.051238413 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 2.00179186 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.99969037 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 2.006179944 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.999858715 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.050240993 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 2.013385659 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.117620967 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 2.001579585 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.000818635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.154166149 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.99795917 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 2.007386686 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.054233765 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 2.011364523 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.002996186 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 2.007618906 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.58459237 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 2.002166379 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.997127256 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 2.001265293 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.996958105 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.042064442 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 2.000604666 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.998495029 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.999613261 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.116531131 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 2.002666895 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.99774802 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 2.00111037 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.999882986 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 2.002547084 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 2.001175989 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 2.00281369 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.998454867 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 2.002479704 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 2.025694214 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 2.001037683 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 2.001268348 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 2.00293391 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 2.003790424 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.051262349 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 2.002140525 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 2.001302107 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.99810383 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.057080419 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 2.008159675 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 2.003620503 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.999339284 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.002946373 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.998957604 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.155835644 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.051840997 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 2.001258039 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.052733909 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 2.002161193 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.004882826 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 2.001907419 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 2.003355989 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.100282975 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 2.002319544 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.057530228 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 2.000269777 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.160429194 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.027692197 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 2.003097576 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 2.005399391 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 2.005786899 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 2.003780414 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.995281657 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 2.009696567 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 2.00122003 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 2.004196711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 2.009003471 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 2.001798025 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.999948704 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.116473054 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.111579937 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 2.001117973 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 2.016904065 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 2.011549969 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 2.001312671 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.057553158 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 2.004088332 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 2.00066444 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.062258613 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.120779872 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.058663753 seconds)
  done (took 218.799729162 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 2.009317462 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 2.012885953 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 2.006736595 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 2.021360227 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.004065512 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 2.002941908 seconds)
  done (took 13.979841361 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 2.006618275 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 2.005192097 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 2.003656814 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 2.005238421 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 2.004505658 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 2.006587833 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 2.005780619 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.007001092 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 2.008932933 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 2.004622115 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 2.005191931 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 2.005669168 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 2.006742095 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 2.005486662 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 2.007309913 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 2.00473512 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 2.007511153 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 2.001887781 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 2.005199568 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.005801934 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.165497268 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.006744831 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.006594196 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 2.006088392 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 2.012206785 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 2.004557233 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.013169089 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 2.006987293 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 2.00667557 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 2.015784451 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 2.010590836 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 2.006974988 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 2.007381017 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 2.012363308 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 2.012948369 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 2.006864455 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.009096396 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 2.008193657 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 2.003964318 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 2.009431407 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 2.008264817 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 2.006869484 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 2.006141787 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 2.008282048 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 2.009122564 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 2.011889262 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 2.012185184 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 2.014178018 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 2.00829189 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 2.009611919 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 2.008065413 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 2.007404353 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 2.007959304 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 2.008499596 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 2.009361638 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.012220387 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 2.012910968 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 2.007700539 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 2.008098971 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 2.009347317 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 2.007971334 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 2.009036167 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.010498399 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 2.012700547 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 2.005270222 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 2.009188016 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 2.008811132 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 2.012125471 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 2.009658998 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 2.007918281 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 2.009986175 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 2.005450005 seconds)
  done (took 147.666443405 seconds)
done (took 591.512138016 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.130964842 seconds)
  done (took 9.059756667 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.006234433 seconds)
  done (took 8.971774942 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.596582242 seconds)
  done (took 10.531308279 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 7.026040764 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.035112455 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 7.0155226 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 7.003319138 seconds)
  done (took 30.035172535 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.103042793 seconds)
  done (took 9.033926656 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 7.028846257 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 7.001931504 seconds)
  done (took 15.991283182 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.1344598 seconds)
  done (took 9.065294673 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.124274494 seconds)
  done (took 9.083284521 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 7.015819601 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.039839284 seconds)
  done (took 16.001211397 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.989519414 seconds)
  done (took 8.920548173 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.574196043 seconds)
  done (took 11.604566372 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.018838987 seconds)
  done (took 9.056948158 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.02685929 seconds)
  done (took 8.960545412 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.13469225 seconds)
  done (took 9.068211828 seconds)
done (took 167.313805789 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.999643785 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 7.000878899 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 7.000738409 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.996842476 seconds)
  done (took 29.926703294 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.035098559 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.034177629 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.037727878 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.047974326 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.042807755 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.033428715 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.027264284 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.02538141 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.045702432 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.037252933 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.032222303 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.032413707 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.02892896 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.024103479 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.034924614 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.034703089 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.04223307 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.036527908 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.026995825 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.037704195 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.995703131 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.039470801 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.03229219 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.997319633 seconds)
  done (took 50.688706806 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.194614103 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.065883281 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.148109641 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.046916599 seconds)
  done (took 10.373674848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.045402806 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.046879376 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.057974017 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.097518857 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.119992021 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.054703762 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.018566252 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 2.01162228 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.999794468 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.04152962 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.117819547 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.041634747 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.127063956 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.989032477 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.200297898 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.989372793 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.987832851 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.043405916 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.092942816 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.109410268 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.989167017 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.041662677 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.044093231 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.034298024 seconds)
  done (took 51.219528776 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.985053862 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.991859537 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.992752227 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.987259077 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.982592721 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.980932416 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.98733529 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.984635429 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.003227904 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.981066663 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.980092729 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.978878987 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.980155976 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.982479435 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.978883498 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.990281223 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.992661972 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.978637155 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.982564176 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.983149839 seconds)
  done (took 41.614438204 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.971289044 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.824833402 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.322334435 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.224819146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.966904806 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.971219072 seconds)
  done (took 32.181124673 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.988140872 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.981331511 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.973485195 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.030777161 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.113732192 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.98049062 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.976316452 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.983087954 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.019734401 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.037603785 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.995274312 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.00232664 seconds)
  done (took 25.978314926 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.966506666 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.970914562 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.964254272 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.985355703 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.980074018 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.978352099 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.974570653 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.960546983 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.980888037 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.986218997 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.975561707 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.979259753 seconds)
  done (took 45.599070959 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050720564 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.848551787 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.990242825 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.672336334 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.495088781 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169737445 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.479898457 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.300087509 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.960990578 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230638745 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900257161 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257762691 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.270265403 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.013336416 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.07971442 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.453624931 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313475535 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245674556 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.034411685 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.667304098 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136157099 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.658256934 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.781085563 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143568966 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.227666313 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.14634578 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.27228661 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.970841809 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147017453 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051314723 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02183458 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.012143466 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.285771429 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.391450403 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126606365 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020693937 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.663043271 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.727509045 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.994871203 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.791934168 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.86902168 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.149081284 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022926323 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.014600776 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.948440877 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.515608342 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478414765 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 2.019222558 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.717176527 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.012321163 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023380629 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103378335 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.015638248 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.828947098 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.964374473 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.293230353 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 7.009254475 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018303663 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.577135603 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.070369726 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.613447584 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 4.07072351 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.112160066 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.693596528 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.48546748 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.167626975 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 2.021808124 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.020528514 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.951764606 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.76061947 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142536496 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166013845 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.037461175 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.668718186 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318679172 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.082786953 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.099946481 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.315354705 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.859418152 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.070061953 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244476936 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.973299443 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.950406651 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.8642794 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.950218235 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275416704 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050003306 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.643911563 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051110397 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.357623785 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026727466 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038934148 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02450303 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.241534821 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.900303874 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016460059 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.772796616 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305081239 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040625806 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362015141 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.953185954 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 2.02208235 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274745364 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.229964959 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.239608259 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.579073987 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18474763 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.01994693 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.104014807 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.932181255 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.146450439 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.29978572 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077978487 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.083630947 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.152260844 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.97762453 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316867339 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.043039428 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.190327289 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.044041147 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284407982 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.333638461 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.271349921 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102834238 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.023937982 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.019182605 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.764717107 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.647010653 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.247859958 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 2.020689639 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.493857569 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146662072 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 7.020273147 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.954590875 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.690346311 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.076162763 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.139429097 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245602603 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.95767974 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.414028565 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.957647379 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167824569 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.134137973 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.242783204 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.670397982 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.100979308 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.280352056 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.513606314 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367618137 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14777115 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039483914 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112382189 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040604966 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.436250382 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391272841 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 2.023287446 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 2.02477776 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.704321124 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.093294432 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.0300345 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.02907398 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824350159 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303571504 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047813432 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.031270313 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.913306218 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.036322029 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091828026 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026837149 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031666335 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.525376826 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776568259 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.032370264 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.696681672 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25642124 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032297171 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.676319145 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21934765 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.113870529 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.298776641 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084793602 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.961091882 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.729490613 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.729940953 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.025737245 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.962189263 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.02628383 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035781696 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037661913 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.224332597 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31449006 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.069280082 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.687121356 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.143829369 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.036436897 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.0309955 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.026201133 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.519571236 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.115102792 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.647633496 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154519202 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162050085 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.041254304 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.960490417 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.03010881 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.031352742 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.026780901 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.994351223 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080701539 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.69030384 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48469506 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.289069068 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.675863789 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043638696 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.7081742 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.161548814 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.068057398 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.803914337 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.10989688 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.136168852 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092722705 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.03999988 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.691377806 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799409872 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.592668186 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350010182 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.334824558 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470282167 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.509626362 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.365991052 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379242024 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263348727 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.555401671 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.090411333 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37603521 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.969240521 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116341319 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.675649769 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.383871283 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040477077 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253165852 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414150852 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.849901035 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190740957 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240813635 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062907484 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.936558302 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.072525458 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.2698298 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184777508 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.782965951 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256770568 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371210032 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.829476036 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145016505 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 7.027939645 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.718242597 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111616297 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.74219008 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.391747372 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.540322573 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.160371095 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527466939 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.037387209 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.476859213 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383786357 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.334222601 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.240072272 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.966650394 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.041321895 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.041211572 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 2.030550212 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.008757013 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.947822837 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.308162075 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041886514 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.26683879 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.300017142 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.412889978 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.93483094 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.035811657 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.030473857 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.328515932 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.798606896 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281738176 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.472914694 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.623977861 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.043534193 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.965968907 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9661257 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.734161075 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.031852506 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.007014478 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.255257739 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.140378002 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.988741291 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.515504349 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355206301 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.285399897 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.04430001 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.30406243 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306114576 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.766639656 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058090165 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.13048609 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.797574576 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.76749358 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.25277662 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266932423 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8286665 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.262904508 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.093605422 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.988188 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.030423379 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247523597 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.254191354 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.037252802 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28197447 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.75606693 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.042026325 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404984049 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088065873 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.060565789 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.24846474 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.127421994 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045524626 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112455091 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042305967 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.043516869 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.044376396 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080483102 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066494088 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.168581102 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.04717844 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126485991 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.112844198 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.626101733 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.044650403 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316097524 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396356419 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.366270822 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090618499 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.034438709 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.035965191 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.96868509 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.171797749 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.480981545 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307246069 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.166692691 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.176176751 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060882492 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.822887172 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421996718 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360967457 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309250342 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.934883113 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.03682882 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.120341094 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.260077868 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045512748 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.245234297 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260679907 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349159394 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501820426 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.27683965 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496622089 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309799482 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.410516152 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.035387488 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.627479001 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.045074809 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.779116265 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.071339421 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066142384 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324617576 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047066909 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.426126876 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059782644 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.238784096 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.554406926 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.779065902 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.406715742 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.037248667 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.097962512 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317153664 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.440051728 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.350816923 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106727876 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.049281002 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.739439882 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176535169 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.986723897 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.303845964 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.040964439 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252404405 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.75254659 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052241087 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329964843 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.348142725 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.035137645 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 3.016133545 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104431459 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.051717026 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264925632 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.305346555 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289422271 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053659475 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.042258258 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.856903101 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328237009 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097582607 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.97917961 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.046578378 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141600842 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.290738437 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.063009177 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.562098475 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.74907819 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338792065 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.956928731 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062474172 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.554482394 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.502512831 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377801124 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.569589593 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277730854 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.601314698 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.985717999 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.430647621 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.048414031 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.533535847 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.432889909 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.045184398 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.664271875 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166375773 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.315855904 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.367456064 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.053698588 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782471845 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.092955335 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271910892 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.641178527 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.984111973 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.049454722 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.105805529 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.041645634 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.174475028 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054113692 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.047163491 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.011682288 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.895531443 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534029671 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.049048094 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.033595524 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.839812987 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.6826608 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.162248443 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201380266 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.044404532 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.746156166 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.3341311 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297202876 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.639116555 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.120936084 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.045920611 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.041313201 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968879212 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.240421379 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.263291709 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.333778291 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.481706265 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.164065898 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046434775 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.257699948 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.254115633 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.051076596 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.200930965 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.53499455 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164298766 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.955678444 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.757738182 seconds)
  done (took 1765.10770628 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.046637073 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.060019088 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.045411432 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.071961224 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.073038199 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.063061066 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.09146979 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.045935787 seconds)
  done (took 58.467074784 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.037016246 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.262174969 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.047943264 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.038332697 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.072545095 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.05212788 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.248317843 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.051075365 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.06346428 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.046972662 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.038648479 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.045533391 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.386741372 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.065526316 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.035545182 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.045600765 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.056991441 seconds)
  done (took 77.568297208 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.035464809 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.218960152 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.055615311 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.061437665 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.911468258 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.043535667 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.099793823 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.066480765 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.040473794 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.211156627 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.375657147 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.043256672 seconds)
  done (took 92.125568457 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.050457076 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.043984885 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.043072351 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.041020127 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.043903784 seconds)
  done (took 12.192455795 seconds)
done (took 2294.98260118 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.286548577 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.259693241 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.276351131 seconds)
  done (took 6.498943419 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.183943239 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.230405453 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.351563064 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.356243304 seconds)
  done (took 11.08532666 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.322524451 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.417004901 seconds)
  done (took 6.699758569 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.36713276 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.053582528 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.455674534 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.032687316 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.035587949 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.036015187 seconds)
  done (took 23.069030891 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.037654495 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.042274152 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.038283534 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.041413115 seconds)
  done (took 10.119315904 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.017880859 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.751817593 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.020386779 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.033580296 seconds)
  done (took 21.784570109 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.787475534 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.434428736 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.782473068 seconds)
  done (took 9.96530043 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.605966298 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.28473628 seconds)
  done (took 9.851047828 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.292820512 seconds)
  done (took 4.263121582 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.07602251 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.316423569 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.569950773 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.578487124 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.678077359 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.880942953 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.355469906 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.288075588 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.489207929 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.510234137 seconds)
  done (took 26.713583856 seconds)
done (took 146.177650181 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.463057818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.073550873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.246898119 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.403777791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.271727188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.247677742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.260693816 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.394150418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.923996486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.921390008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.40509102 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.268209358 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.209793305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.063031322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.216050763 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.058326648 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.267378704 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.480199946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.121892417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.303808046 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.279240068 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.056404153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.245702367 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.068791056 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.277841651 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.201902984 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.611887945 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.071017192 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.28417333 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.656363661 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.215618048 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.484714152 seconds)
  done (took 174.026305953 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.039047638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.059456933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.063117203 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.032442829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.427081439 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.062950925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.032721779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.032987748 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.171171012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.141670398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.057795798 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.421532194 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.050738852 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.018992578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.050768431 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.016245016 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.285860675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.039696547 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.043619052 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.048619119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.048950559 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.221637199 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.039618958 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.259709633 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.244608199 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.038687127 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.01423121 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.04297073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.047387372 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.046484909 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.049884449 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.012961333 seconds)
  done (took 213.154789786 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.013136586 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.01502378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.022529018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.014926653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.025811186 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.028928857 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.016398754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.013820648 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.544883714 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.551916635 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.037864357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.027403603 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.02626415 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.013643098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.028662455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.016138093 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.028535453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.02809495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.030907497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.031777087 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.033612323 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.675060306 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.034908969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.663840902 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.02489552 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.025807979 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.014171673 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.025906674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.028993287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.029741822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.035154532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.015186301 seconds)
  done (took 225.10447881 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.20618188 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.022082402 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.023008001 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.020243629 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.024726469 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.022216883 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.017141008 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.205512458 seconds)
  done (took 20.504337978 seconds)
done (took 634.770454102 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.503385966 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.355304601 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.20636436 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.047004254 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.317672198 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.081186711 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.04163239 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.109222996 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.774470224 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.114107781 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.691926659 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.066356255 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.777586198 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.071193988 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.167975011 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.102093757 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.585106215 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.677273878 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.218242908 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.13535213 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.217826349 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.007709774 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.126868832 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.803203407 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.799810246 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.05638014 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.224217015 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.591838415 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.053429161 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.200528243 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.828381645 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.441690995 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.058198299 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.042397666 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.102628764 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.07818449 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.404890667 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.055880358 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.167826074 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.809534213 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.13516515 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.647401932 seconds)
  done (took 109.841267327 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.012102959 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.009536632 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.00938254 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.010379439 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.012483045 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.011232551 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.010229714 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.009276668 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.010646297 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.010758696 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.010207008 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.012367042 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.012101004 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.012680906 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.010699817 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.011322941 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.012313065 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.013207843 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.01087809 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.011094742 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.012537539 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.011498234 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.026439402 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.010491154 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.010406803 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.010352912 seconds)
  done (took 54.258018762 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.022404955 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.173372138 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.261491014 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.042335955 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.020903625 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.020726242 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.036198002 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.022232286 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.020685036 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.022333741 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.114295078 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.025324738 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.038840539 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.256272038 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.036822716 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.017163518 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.016885185 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.0169312 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.174145088 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.034772641 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.036360196 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.020621462 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.036466919 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.030496942 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.017966177 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.017733628 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.019163541 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.478471266 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.026146026 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.109834661 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.059591982 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.039103854 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.424359994 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.265590176 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.064766929 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.016847494 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.00896962 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.108457268 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.016802596 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.01051545 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.03045517 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.016183187 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.249727702 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.511657787 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.023520439 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.007538427 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.482115787 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.116775465 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.049322958 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.019569329 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.248608954 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.026507255 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.010376917 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.00850108 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.045726356 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.012422305 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.008017583 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.35738285 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.020972829 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.02703342 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.012982173 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.0092659 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.172195925 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.019017101 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.159277783 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.018708113 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.015905007 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.009641657 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.248645437 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.026540684 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.507140684 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.025009647 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.008800298 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.102330225 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.164356856 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.508073579 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.021829843 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.172247567 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.433996508 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.034638419 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.0170138 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.459771945 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.038131455 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.016119041 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.010883357 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.010898106 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.009833059 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.05357949 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.025252615 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.437572496 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.512355262 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.37456724 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.036958768 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.024455801 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.009615143 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.353028384 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.018878463 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.009889393 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.241211596 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.518877024 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.022738137 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.016156169 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.495187654 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.026471535 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.024050877 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.01155559 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.246926197 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.021091939 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.050541186 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.001822837 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.009673878 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.004548043 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.021716264 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.011132801 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.000082745 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.481279499 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.115948992 seconds)
  done (took 248.813337669 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.998995819 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.996424751 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.993725613 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.996700346 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.992367035 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.998670989 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.991003236 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.992722801 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.998411341 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.992623446 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.991918349 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.99628694 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.997281191 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.997756365 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.698570547 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.999962096 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.599275417 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.990927608 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.990457956 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.992527916 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.76504586 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.995290322 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.984679347 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.991982759 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.986916708 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.986323216 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.993494696 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.153106879 seconds)
  done (took 171.986775066 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.992775606 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.175418674 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.012774262 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.031136443 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.002184888 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.989627944 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.016341882 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.014270778 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.997680301 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.990393552 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.989768995 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.053698251 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.004292157 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.133778876 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.024529858 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.023901177 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.099480544 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.999867966 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.989676408 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.990062089 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.021366625 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.986688173 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.053770643 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.122528111 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.012005371 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.110755726 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.998911639 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.992549863 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.991454924 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.110898339 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.009145261 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.053955681 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.021451664 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.010417892 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.116276005 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.111641481 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.099243273 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.022854336 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.996971707 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.990710293 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.990767063 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.9806502 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.109775216 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.013171733 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.993917724 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.100498563 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.013679206 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.994546773 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.001917688 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.991056341 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.006764684 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.01178561 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.061664773 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.130006741 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.029219728 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.019215816 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.018185873 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.269881289 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.004737821 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.093887658 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.987696547 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.11199102 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.015522227 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.980841094 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.994227603 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.999209846 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.021214247 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.025245484 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.098516492 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.001545054 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.09505882 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.029919869 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.999327425 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.992622697 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.995872342 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.111234395 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.114782241 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.028577602 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.030991365 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.025589506 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.99134819 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.994800882 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.983046828 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.012875039 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.99986915 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.111858393 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.115742844 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.003521103 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.995863414 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.995979079 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.99645871 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.020798833 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.121081796 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.03181097 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.092904572 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.063976586 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.071212387 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.011485101 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.008314796 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.998672054 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.060130586 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.013167132 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.006743949 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.318167693 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.070606745 seconds)
  done (took 215.868142162 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.456515506 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.049936568 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.05315552 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.326989328 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.431762675 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.879043281 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.045130345 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.045509986 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.069447611 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.235016961 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.115801559 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.063967395 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.0317125 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.019934914 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.045656192 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.065149426 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.054786015 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.370122226 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.16964245 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.118280208 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.027188374 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.33687507 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.367052536 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.448185534 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.080804128 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.381043446 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.725631044 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.185683749 seconds)
  done (took 65.12470438 seconds)
done (took 867.835331594 seconds)
SAVING RESULT...
DONE!
