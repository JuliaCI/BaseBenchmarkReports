cset: moving following pidspec: 16648
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.312488315 seconds)
loading group "string"... done (took 0.6347872 seconds)
loading group "linalg"... done (took 7.693249018 seconds)
loading group "parallel"... done (took 0.160835446 seconds)
loading group "find"... done (took 1.236982899 seconds)
loading group "tuple"... done (took 1.839268494 seconds)
loading group "dates"... done (took 1.288309381 seconds)
loading group "micro"... done (took 0.22519557 seconds)
loading group "io"... done (took 0.939609308 seconds)
loading group "scalar"... done (took 37.746358456 seconds)
loading group "sparse"... done (took 11.925900304 seconds)
loading group "broadcast"... done (took 0.955221063 seconds)
loading group "union"... done (took 12.663152046 seconds)
loading group "simd"... done (took 4.529497917 seconds)
loading group "random"... done (took 9.10096664 seconds)
loading group "problem"... done (took 1.711770685 seconds)
loading group "array"... done (took 21.130767077 seconds)
loading group "misc"... done (took 1.731238535 seconds)
loading group "sort"... done (took 3.313185776 seconds)
loading group "collection"... done (took 17.34897941 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.54086285 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127286236 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.134613069 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121887662 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148877516 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117162098 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127969291 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088140946 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.820127159 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.153385325 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.11780668 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41688582 seconds)
done (took 5.406027706 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179850467 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087933308 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087043097 seconds)
  done (took 1.331181419 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069292925 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.135201562 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071429352 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071297419 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071387834 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070407027 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070414866 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070390483 seconds)
  done (took 1.717107303 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078546616 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072681607 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069743044 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072692023 seconds)
  done (took 1.451353075 seconds)
done (took 5.91612008 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.774860501 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211763254 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189936571 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399767112 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.13210132 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.175226603 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659593168 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.327070827 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196876656 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080925514 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.11127876 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.346269861 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.124894673 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644889344 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077639532 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094017248 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14282719 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422646346 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07083484 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085987511 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092361722 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131625905 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088703163 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077021994 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149928437 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071224107 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136664337 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083781372 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069869628 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220942818 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176738894 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.659713925 seconds)
  done (took 10.423850301 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104898202 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102903202 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072746081 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129152866 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.101878635 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073640261 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078273198 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07162038 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093559925 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135727128 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094852687 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110107424 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069916032 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072097375 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088027292 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213007675 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08624614 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088417492 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074629581 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081116854 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111450508 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081152427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084663593 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083944644 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131432844 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183630762 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099299297 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100968889 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069570822 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086262679 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11793496 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131082722 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069017255 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069380923 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130623232 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097885479 seconds)
  done (took 4.783942426 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.988389991 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147860597 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093615898 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136560051 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069630023 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110701854 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069590487 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087160083 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211007698 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365515842 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.612939216 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114888184 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108657237 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071563176 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072066791 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070692754 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.485891349 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102308127 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108433483 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084376638 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073567215 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073111201 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379018179 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070810263 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067841219 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072035545 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061201496 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123490089 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07137051 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.951638014 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168832875 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070138114 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10443831 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170312591 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.223380733 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145164699 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072968099 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069055408 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159671338 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074031031 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070688132 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08870378 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107261696 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124096518 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070635747 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070181063 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168950367 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068375083 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083388403 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.172951447 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091660591 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155681133 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.086594986 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.070431495 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.278016408 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092301358 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072972862 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069256955 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.179155314 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.126017483 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071366963 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070722256 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071905107 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072765843 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069118189 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069021062 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.391523419 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071526581 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079732064 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.883532378 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076227519 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073158831 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075837644 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07591381 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091370795 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069752095 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077814445 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070007701 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069929363 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.07037664 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08636359 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375212665 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06987643 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070665839 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068161679 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092292002 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.20342823 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071100114 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07043373 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103195744 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071958128 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070054615 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112914784 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09461172 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071238649 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068192676 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086777771 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073339366 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116609582 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.072797706 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.076498545 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071404452 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099932516 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072969506 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108007879 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085381918 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07267532 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.416205568 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069488783 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.070522908 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.071692756 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.0699859 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071116989 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070612814 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08277373 seconds)
  done (took 22.065343427 seconds)
done (took 39.418401675 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.256146266 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.0803839 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076993892 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077139567 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077007691 seconds)
  done (took 1.815940332 seconds)
done (took 3.048029317 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126178901 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101824736 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06908392 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.0995588 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068789164 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103787554 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.102732753 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08044836 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10227303 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068394808 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100027963 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068344797 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068660655 seconds)
  done (took 2.40701484 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090191867 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088996533 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073815236 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086706635 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067618366 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086537261 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08507983 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092583989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08588146 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076433304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067788045 seconds)
  done (took 2.124949614 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089261959 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08835404 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073160043 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086228251 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067691597 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08577062 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088159985 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089534019 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.085639765 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077478158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06756585 seconds)
  done (took 2.119131456 seconds)
done (took 7.86701165 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.083583911 seconds)
  done (took 1.293770793 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.571821512 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.916047669 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084685622 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113617013 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19226937 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11949609 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.260805318 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089314796 seconds)
  done (took 8.743291145 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.108245923 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074830983 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075859894 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074276162 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07196301 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073016458 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074946603 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075986004 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072869866 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071797041 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075185947 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075309841 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072310937 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073199566 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07183796 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073135838 seconds)
  done (took 2.500899451 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096253748 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094834226 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076429008 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078501118 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075304323 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075197826 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077314938 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077417641 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074553769 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075912677 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07832205 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076751499 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074633157 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067879568 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077103012 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078645532 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073713889 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076845976 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07750201 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078949857 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078538929 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067967112 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074993262 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077364174 seconds)
  done (took 3.180581751 seconds)
done (took 16.938056412 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112116033 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072186128 seconds)
  done (took 1.401151937 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.087377317 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08675313 seconds)
  done (took 1.40143738 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088950438 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070194873 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091861538 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080355973 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069318439 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069750072 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089870394 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070023113 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070119661 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070139406 seconds)
  done (took 1.996786912 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.074136329 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081821711 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074086775 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084314469 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076907781 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068239725 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075631357 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071659669 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080102633 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067048502 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074938245 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085743466 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074142448 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087196022 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075701983 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071595275 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073800382 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070587311 seconds)
  done (took 2.596329638 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072310137 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071172656 seconds)
  done (took 1.375853545 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073517625 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069617492 seconds)
    (3/7) benchmarking "month"...
    done (took 0.07053342 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069521127 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067069853 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066201392 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067351944 seconds)
  done (took 1.710197605 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381269422 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120145224 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312362426 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075749684 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084884325 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254809019 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070823578 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07479355 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074630453 seconds)
  done (took 2.71850356 seconds)
done (took 14.433877332 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0867103 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091628366 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099076559 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382602705 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094691229 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070116106 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117206026 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187671981 seconds)
done (took 2.373696002 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218200457 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.676510643 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.42772103 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.209684018 seconds)
  done (took 2.547471095 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343261905 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091804149 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063665423 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070868189 seconds)
  done (took 1.813169099 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073634633 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074636755 seconds)
  done (took 1.389298655 seconds)
done (took 7.211746251 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0729084 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071511422 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088011854 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068292557 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069516315 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067441497 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067612455 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069854953 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.06974411 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070729484 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069676826 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070038055 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.069468915 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070845578 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067442253 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067775236 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069355916 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.181681461 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067552924 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067452843 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066996237 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069665805 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067654505 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067941714 seconds)
  done (took 3.061623457 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.09183162 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070712041 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075715025 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074844592 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074259424 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074900031 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074513564 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069309193 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075275847 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071738885 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072713887 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073398375 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071725937 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073111716 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071607459 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073418553 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074853287 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070102657 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071680476 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073276903 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074774281 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069515294 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073164337 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07466302 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073270541 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073285702 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071806184 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069684258 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074769 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073374436 seconds)
  done (took 3.458590529 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075485853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069346097 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.07001994 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074775596 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067497426 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067888527 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067547632 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068547451 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068193333 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066760315 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068649964 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066517275 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067154194 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068095675 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068297642 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07087096 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083625297 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067440803 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067024618 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06801813 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07020261 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069065829 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066894735 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067081312 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066653273 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067076786 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067422978 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067329305 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067901908 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06712282 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069835615 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071371535 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067397802 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074517134 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070747668 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067266407 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071031898 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066285084 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067686337 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066741476 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066560098 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066753415 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066690238 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073763151 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066805187 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067879961 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067495433 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067978177 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.067598391 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069916699 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066726111 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06685153 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069084748 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068127089 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071301077 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.06699177 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067806912 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066898456 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.067772099 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066788591 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.0671393 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067226338 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069781123 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067900093 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081746384 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074077265 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067669355 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068297122 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068163431 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070360975 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069265623 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081039332 seconds)
  done (took 6.226387439 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094390978 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090103114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069209713 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06924055 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066019481 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067740965 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074206726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067538825 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069582078 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085059862 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067880079 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06918769 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068882055 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071192449 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067822696 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068990784 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07571721 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065595236 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06771577 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07122474 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067819919 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073728734 seconds)
  done (took 2.853744988 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154751227 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073330606 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107243059 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078207096 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07350541 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07787636 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072892257 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073343203 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073560659 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070946175 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071345777 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073726808 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.073484803 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071426909 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071123972 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071450854 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073625611 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071341425 seconds)
  done (took 2.692177169 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082637168 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070624475 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090826928 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069345834 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069697322 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072148491 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073225102 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077723051 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071646584 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06962717 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077508076 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072329604 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072094347 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069155341 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071798409 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06956953 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071959944 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06974699 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076921201 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073268496 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073774093 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078221825 seconds)
  done (took 2.883657214 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085468953 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072369715 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086053108 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071851176 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065079595 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068257613 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072879099 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069784722 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073476784 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071758319 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069293292 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068778134 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07251177 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069108566 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072398202 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069126215 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07145323 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069302797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071153688 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065322572 seconds)
  done (took 2.697839301 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091878836 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071581655 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07157479 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077879107 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071464864 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070998607 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077497321 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071330437 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071179285 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091311944 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071221728 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072183507 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078815953 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07571443 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073509501 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077730936 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077542318 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077399041 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070749536 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070953908 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090510299 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071440496 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077797465 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0710119 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070965864 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071166842 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071455488 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075319969 seconds)
  done (took 3.374722354 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072856143 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070108602 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067254921 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067031733 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067608812 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067252648 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06691385 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067456973 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069553054 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067741076 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069171238 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069434665 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069711853 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069788295 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069224931 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069824757 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069330309 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067783187 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067536441 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066962369 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069313429 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070310279 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069353026 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066965382 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067488331 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069330253 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06757995 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067651073 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069686083 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067219975 seconds)
  done (took 3.324502071 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.081428272 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07919694 seconds)
  done (took 1.427565757 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069430762 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085961374 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067354075 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074758439 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072585238 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071038001 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076692507 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07286565 seconds)
  done (took 1.852498066 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088449867 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.084043134 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.072373575 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081229671 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080174529 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086713157 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137476623 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.07077116 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076002802 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068075971 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084224394 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069248378 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076233482 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070407197 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075480522 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07656567 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067725297 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074829568 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071081816 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068452897 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070308995 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078688378 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072721271 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06523755 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071310633 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092175238 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080787736 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068998729 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073095615 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07697285 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076375323 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.066204596 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069427947 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070344985 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067718763 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079640418 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08397721 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072970476 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078718043 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070820762 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078787416 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065762202 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074543521 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077042877 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080139943 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069971889 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070192601 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065005741 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068754796 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072421648 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065186811 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069972672 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064800554 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076601053 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073981286 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079941087 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.068601499 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071496627 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072676775 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073011341 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076465539 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072183777 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073029929 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070594963 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080766146 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075795337 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07862669 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065704946 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064563542 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068575337 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.079112198 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093177439 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076134922 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070353574 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070651252 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068192847 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073017334 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070855616 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076034322 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07654729 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06969139 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075107244 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077194318 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07044967 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072765324 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076762192 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067716515 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071906533 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068410809 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084867018 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068230984 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067294963 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067964953 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082117409 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07267825 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068849819 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.067286709 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076461859 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063576482 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068634487 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069654403 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069840622 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078326279 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07239585 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073082438 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077556117 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076945461 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069230622 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.071343332 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066154212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195477292 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071579339 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078093396 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065359988 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074290005 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.072182436 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071168614 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079030959 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069008607 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070414806 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07824511 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076581768 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.068940222 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067280398 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075020826 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070529161 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073488735 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07856996 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069459745 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065518324 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065427773 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074073051 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069340113 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074161966 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074436338 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074073431 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064582853 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068187015 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074818895 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079819183 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070953679 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071658531 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076711469 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071748853 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069419756 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076839363 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07264941 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070592964 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075492791 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070951452 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065343586 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072739647 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073530646 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069188957 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074336695 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072627317 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073224892 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.07039093 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068364935 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075854284 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070902721 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069929033 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070398832 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069230494 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081588265 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071791903 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065437376 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068055808 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077847927 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068308101 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068922122 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069842304 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072591577 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070460112 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067797311 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06927162 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072443099 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078880979 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072842973 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070321673 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076228186 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081787523 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069246899 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07247562 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069647968 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07039446 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070739929 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078597024 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075517199 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074466037 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072418644 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067365514 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075979275 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077694056 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06990971 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06821673 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069084821 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073352087 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075696133 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.073734853 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069620342 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068090046 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071012116 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071861145 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07224228 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06890038 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069223297 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075410205 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.067744153 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074997181 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069754164 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07911313 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072210407 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064393339 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070490918 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067379345 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074847098 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064075276 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066955331 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068615442 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069129443 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068402393 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071608795 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063270588 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204711025 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079282918 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072385355 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070411408 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070877665 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077847909 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073016961 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075564669 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074648882 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07721158 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081289338 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069371355 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074257915 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081423896 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070537089 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065501999 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078937481 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.068572483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069626996 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070010633 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068905374 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073962707 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078668939 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077665372 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065322428 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072974949 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068695422 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069939663 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065828855 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075333418 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07461851 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07157402 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077353403 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071148511 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069971914 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073858718 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069885762 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070707264 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070774582 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073432996 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070605239 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072108978 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070138026 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073842805 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069265543 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068569162 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072353873 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070205579 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071108334 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075600572 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069262892 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070329188 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073474168 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070184757 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071234673 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071117446 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070012446 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0730994 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072497652 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070818794 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073113615 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064980744 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077248388 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070068042 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078273675 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07111729 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067580762 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076096919 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07248415 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074126383 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07023452 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070885182 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072131613 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.069045103 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073522041 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077146537 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068909438 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081055887 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077428578 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071440627 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073215585 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070513858 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.071694006 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069478508 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071810214 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071330382 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071322497 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069560122 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074867669 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073074114 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070820937 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072001533 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070491569 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070628434 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070690909 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0644556 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06893681 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069531243 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069054389 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078696386 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070058413 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069685542 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06854437 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070505328 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068175024 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06600571 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076203833 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075941044 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069110011 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075503616 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068198422 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070675986 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079066181 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063538489 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067052811 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066441055 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.200291932 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079031145 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071080179 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080861455 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071582349 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071075605 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068232362 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071204455 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069142574 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065292343 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067930855 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074020488 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068924191 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069953817 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.06999282 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073235858 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071197324 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08024714 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069996131 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071984972 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071027126 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068130871 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069933258 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070816074 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072384459 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071386492 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06845111 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067912041 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06967526 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07238603 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072598432 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070673296 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072458185 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077445289 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070282407 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072868881 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07248342 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065265465 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07303546 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069519518 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069735247 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070218943 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074246597 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073056905 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071084654 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079249157 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069593487 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073835093 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07056206 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06843665 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069999405 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069584571 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070390337 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069610001 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071638181 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07826105 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068594497 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073618223 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070428527 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071671434 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076575383 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070595349 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072699368 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076425776 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070529779 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072255404 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078173147 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073505312 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072992094 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071014633 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.071754001 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076444602 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.06920904 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076070647 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.070463053 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070040334 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071560291 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068871501 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070050787 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069647417 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069370069 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076288128 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070680344 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06966122 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069871537 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067997775 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071355789 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072428489 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078185825 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072457628 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073545706 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065526958 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067303534 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071489922 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06822298 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07119549 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072049598 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075322245 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072486158 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07023544 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06865649 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078410974 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075260054 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073657937 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.0678516 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073335308 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069767462 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071341118 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070694837 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069359432 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069185944 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072540319 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070711149 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06824214 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075078856 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072059623 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068973128 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.201451132 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072594387 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072113861 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066413273 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07140504 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07306471 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076095261 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073567315 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071455838 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08158995 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068266615 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07151031 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073425639 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07020407 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076002225 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065358878 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072741776 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071471339 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071062711 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066005593 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070512893 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069550326 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072694326 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07002409 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065792777 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080695241 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079426962 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073749391 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069474865 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069098624 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065292777 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064843286 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069683111 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070976241 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07221786 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080493479 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069456118 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069960597 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065069954 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070341869 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073737805 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074256074 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067186489 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065837097 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069579661 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07299709 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075282047 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068705281 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069216009 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07260071 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072880357 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067978215 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072574043 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067284073 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074222803 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082898948 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.07058899 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070848885 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076451085 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077990341 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070755308 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065335155 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069806002 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073507598 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071085793 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071319587 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071534291 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085356273 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072798642 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.069409737 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068640006 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072481312 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069666967 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078094424 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071144675 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070265578 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074835789 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.074165173 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077423622 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072938887 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077812466 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074044495 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073558327 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069125219 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070887895 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068137682 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069477769 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071054272 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070584093 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074139406 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077266164 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069827102 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080718476 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07910073 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.071367827 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066780613 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069175043 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069331853 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064876935 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069864905 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068330883 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068257185 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067819552 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.068706645 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071641782 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074678062 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070818126 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069357494 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068558272 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06325988 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071095593 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071928922 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070627838 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066109024 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068613376 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068691816 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073575947 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.206013429 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.069417432 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073139443 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.07285398 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07342816 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066134137 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078156344 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069868123 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.07310543 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070426282 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070607559 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071215476 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074069599 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074697381 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071907271 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073405015 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074185355 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072810222 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06745576 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067820161 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076849214 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068042459 seconds)
  done (took 44.933163242 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105746512 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067981997 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066218884 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066405455 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075506192 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06680035 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065308952 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066787778 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066945871 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069020462 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065324306 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065469527 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07284193 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079997304 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075629341 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069618504 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065495134 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066270817 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065367122 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066553713 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073127191 seconds)
  done (took 2.835127006 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078785545 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084435886 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080480789 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086908415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076646367 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073551026 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078810991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073456679 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080739294 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075254901 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.080526726 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073331957 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075962805 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07612276 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075400682 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073230597 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08066686 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074224414 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.073444788 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078467681 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073573509 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078333775 seconds)
  done (took 3.046210691 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.072557266 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072644757 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071741528 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064730351 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068716039 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06491458 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072511598 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067952956 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072681217 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06887858 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069160937 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068862444 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071694809 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065013259 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069952315 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067103495 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110748581 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072240066 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068748088 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070082755 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064878831 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071019625 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064668746 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0654855 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068202303 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071769964 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070593438 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067415102 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068913668 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069111193 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069421947 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067039089 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071068009 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07004973 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.068805241 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069764923 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069447494 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069401552 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064902972 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067962703 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069825981 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067882862 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069897418 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071379841 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067786088 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067216629 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071280714 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06983505 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064600621 seconds)
  done (took 4.766896471 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083856875 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111852064 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070756657 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091958716 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082828977 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075325866 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072976537 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092255689 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.066717708 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067535412 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083636159 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082120945 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06895108 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073078514 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072768753 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069014375 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070454789 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068085603 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072724747 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068343914 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072188896 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075704268 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.082666056 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08111121 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072522396 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068258627 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068384285 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072457616 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080784439 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.072695269 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072829676 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074331384 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083144731 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074635549 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06807528 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071017059 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084562235 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069091399 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070939885 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066724451 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070727624 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073031056 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07603795 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084396271 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069365281 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07478458 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068860399 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06648803 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08127689 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071269219 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075693686 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082400134 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072343554 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069264275 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072717224 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08304047 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069184726 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067202658 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071229811 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080811454 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066808876 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072404131 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08167777 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070723662 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074892982 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08220694 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074352855 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07245604 seconds)
  done (took 6.584465742 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08221925 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.098262795 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08500784 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084817699 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078321065 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.078907108 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07840537 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.078053641 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086514427 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.082503976 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078435642 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117523681 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.074432806 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081028365 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.078990453 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078792871 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078228833 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078955146 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078952958 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078216921 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.078197353 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085003777 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078688403 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084924523 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081976174 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073894231 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.078143941 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078104157 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08508561 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078299438 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082375795 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.077895737 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078751815 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.084817488 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08214227 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.078084977 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068456455 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078760357 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079214411 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07778156 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073580681 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08531537 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.078330381 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073970963 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078184037 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07814316 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085445193 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081852367 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080793555 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.082983342 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.078175444 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085060175 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077930966 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078935659 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08496026 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.087623974 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085305617 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085235079 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078182808 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084864412 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085063699 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088292576 seconds)
  done (took 6.417214383 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088002213 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07972139 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088605377 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066698712 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067973647 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075118873 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067594265 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067425067 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076940119 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07929722 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079166542 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075304729 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077296523 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079237771 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074982234 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077852858 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074807399 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07470177 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076892057 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074841855 seconds)
  done (took 2.893430405 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081285948 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088075627 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071165501 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074912812 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072957835 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075296124 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072460147 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07321162 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070574885 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072402487 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078941794 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079664494 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070712628 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074704272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078699643 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074532682 seconds)
  done (took 2.572238727 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090792354 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.079470257 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084686769 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070342251 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07076662 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066365057 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069517515 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065176262 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066536971 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.081375989 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069050748 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.079476528 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069302987 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068524443 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066170357 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.074687453 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.0659046 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067300005 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069497383 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081348682 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.072779431 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067938469 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.072195835 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069414044 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073213398 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073770166 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068361561 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069748693 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066587389 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070311112 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07293063 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072801679 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067005021 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067428155 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068468296 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066720858 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069313545 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070257552 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074673052 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069406509 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068094921 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.071829946 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069262852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070179229 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066302732 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069829459 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066652565 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071448798 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067564725 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07244833 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069654321 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072035721 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069856604 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076269911 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072389735 seconds)
  done (took 5.276691169 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086682685 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076052525 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066482525 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068420006 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072595526 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070986495 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073287404 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071294628 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070840102 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068616329 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071134038 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071973485 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070815719 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072723161 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070987279 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073188161 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065579785 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071001907 seconds)
  done (took 2.668049831 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077866464 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072130975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.079238715 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070253512 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06957796 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071935354 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065842542 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068346409 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068626777 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069663801 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070009075 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071526707 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068440652 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072510297 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069635119 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069536331 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072432489 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068923582 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070411723 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065942753 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07234343 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06847317 seconds)
  done (took 2.921062432 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.099823691 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08619903 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143868314 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082165571 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088618209 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07486977 seconds)
  done (took 1.945073969 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097189992 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105552603 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069743804 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072867245 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079174202 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073425378 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073355652 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073600708 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081186649 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079160102 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073280711 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081431808 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081062911 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080534542 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078425008 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079352406 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073569468 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076737277 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06992259 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08594973 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073823582 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081329173 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073136671 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073413085 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073321627 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080172762 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080500102 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078748612 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072987367 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081184121 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078680073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07309772 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081459696 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078591218 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072528156 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08094073 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073423499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085427374 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078667079 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08028539 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072651912 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078961223 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081188632 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077502126 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081189348 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07351135 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077549326 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073829041 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074188369 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088480223 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078626613 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079946618 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078198188 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08161819 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080460895 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087322507 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078610378 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080196311 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078730602 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078371796 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079690645 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078534434 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079918344 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079457748 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078601697 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080573942 seconds)
  done (took 6.565866172 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110452539 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073359007 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075320147 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079266611 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080149231 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073417643 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073641358 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073670597 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073402953 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070709024 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110134831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07351875 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080151772 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080265944 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073510706 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073325439 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073145364 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079715982 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070850217 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087452677 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073299376 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080000053 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080050714 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080092586 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078469096 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0786164 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073434591 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073345789 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073312277 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073085584 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077240537 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074264808 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079714561 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070619575 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079979939 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073592618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073145933 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077262039 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073354127 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07899765 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079798631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085859683 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073571895 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073046067 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079123928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073176387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07369196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070418647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073630195 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070693862 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078839276 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078527812 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078794001 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079996925 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073801442 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073416689 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074090056 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073479317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073982982 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078623195 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080413117 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073507043 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087734511 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073958749 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073617286 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080426218 seconds)
  done (took 6.480448632 seconds)
done (took 135.001114902 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.199518512 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173351025 seconds)
  done (took 1.733804529 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075136635 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103362939 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08059541 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132229134 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070119197 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103448335 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103072009 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081790341 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07040936 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070116198 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069704543 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07231311 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135274681 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069886596 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069454944 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072317618 seconds)
  done (took 2.754969045 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103564011 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162925208 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105053749 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069252669 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100510514 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07687298 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068920738 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078190537 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074120957 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06963752 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075850807 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073461244 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069036999 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073478073 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07748548 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076203307 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069394173 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075678288 seconds)
  done (took 2.87963558 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105257557 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096369579 seconds)
  done (took 1.586644814 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16003262 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.136290783 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.203542062 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343902322 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.160433558 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148953812 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145060455 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144390361 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11539813 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140404917 seconds)
  done (took 3.07842588 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104988946 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154598173 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271685031 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118822121 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07610866 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096353845 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121194796 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082142445 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083393789 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083460792 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083066628 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080156724 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101718412 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076883198 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077715644 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08027801 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105356243 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076569176 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077532963 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079359311 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102686694 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069556893 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076397506 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076088267 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080781652 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080485014 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070127295 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069731662 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07902873 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077492326 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079632914 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095256936 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.08027193 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107693048 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074815264 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108570951 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080021157 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076634896 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078174985 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076406299 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081042716 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080936083 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076724378 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079694783 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069467706 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080126042 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069725698 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069510016 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080773585 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070737293 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081051939 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080054478 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107594558 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07080424 seconds)
  done (took 6.178728823 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113737918 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110014113 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075007698 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115440745 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10618551 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072915762 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108623737 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100362426 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111259374 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073674147 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071670975 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073761423 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083385743 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083739135 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.118901373 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.110385515 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075522654 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072417477 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111138947 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109786853 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072567439 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103656371 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099444772 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109214495 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070691274 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073165492 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072780286 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073146138 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0793147 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081035544 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071764086 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081890178 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086891932 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080644479 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07040764 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071315049 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072301064 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081783725 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081887791 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082316478 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079606898 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070817312 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071644349 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073305677 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072611717 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071057622 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080555855 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08217478 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08059892 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0720191 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073432661 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.071905587 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072682021 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081576533 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079248082 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082434411 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082674512 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071725957 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071308935 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074615699 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082403063 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08240053 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08165385 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073476644 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08287611 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071865075 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083677689 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085375837 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071881287 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073380957 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071774334 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071271951 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075871464 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079806762 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080704141 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073268537 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073159453 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071751043 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081814964 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080478771 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071625531 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078835926 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070587219 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070918648 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073069547 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072306397 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078850253 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081574209 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07284155 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071199189 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070622065 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070415932 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069397794 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077327343 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07996762 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079220664 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079038187 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071318442 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079435336 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.20950308 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073981959 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082136508 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072990301 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074069312 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072905991 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081117731 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080805919 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082814695 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07176388 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072617776 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081272153 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083918437 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07276758 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081192044 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082058064 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08098354 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071384995 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083640932 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072307984 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083070977 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07203582 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081997303 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07150286 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081179571 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072510072 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071272282 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07139798 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081466047 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073332456 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07212033 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072715035 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072078558 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080924029 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084087502 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07326968 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080755511 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080506303 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07358391 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080581608 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071850103 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083210929 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072228158 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07302499 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071036044 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083253521 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072301162 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072379974 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072513453 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081860477 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071675068 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082489343 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079687738 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070847171 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083793829 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082206298 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080284531 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082777175 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074125902 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072062588 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07150741 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071732069 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079656871 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081188733 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074013519 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071589807 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079456379 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082217472 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070355769 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080351749 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079956103 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080469614 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071503177 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07206912 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08263663 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082981437 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080531441 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081166642 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081086647 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071991661 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081247941 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080899191 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07184747 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085929255 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071746513 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084240918 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081063743 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078237046 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080007874 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08127582 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081188999 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082217366 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083301435 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069771887 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070775446 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078864127 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070176975 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070423761 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078584819 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071572206 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07159867 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083243152 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.206261052 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083535618 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071592368 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.08257374 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071983205 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07373002 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086599118 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072412617 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073267932 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081976169 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071869453 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081651603 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084056788 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081633606 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072600319 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073179403 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082102343 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082130834 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074816113 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072347913 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073873442 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080100014 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080032636 seconds)
  done (took 19.323030707 seconds)
done (took 38.923270954 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207117923 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150993805 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.171332286 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117594244 seconds)
  done (took 2.124840749 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120628966 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101985783 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093952466 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068880341 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.107306608 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068204926 seconds)
  done (took 1.982151905 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30216577 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201599592 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181683832 seconds)
  done (took 2.101755149 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206389745 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188935935 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426369412 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266835171 seconds)
  done (took 2.617174881 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.1455789 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089700282 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.07064817 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086770362 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13143622 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159145013 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10034689 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125219698 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082184337 seconds)
  done (took 2.462649168 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146775458 seconds)
done (took 12.856731557 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.234048479 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.175102088 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.1981966 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.229640982 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110263956 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093561965 seconds)
    (7/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.097027846 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.191322491 seconds)
    (9/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.216654251 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077710547 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105711099 seconds)
    (12/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.135211398 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145335583 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.075957352 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091628389 seconds)
    (16/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.182248919 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183750287 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.124514714 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080486128 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.084014796 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.210887469 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0806462 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076874198 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07562525 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.110942116 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.135550103 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075045882 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.146052052 seconds)
    (29/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.191853328 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.223925313 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079047824 seconds)
    (32/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.074800714 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.142377251 seconds)
    (34/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.402465574 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054814769 seconds)
    (36/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.101322057 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.106033974 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.120612859 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.204915353 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.0937842 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096965669 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094219877 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182894575 seconds)
    (44/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081035188 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.104480225 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.092868841 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.15730042 seconds)
    (48/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077540967 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.179535588 seconds)
    (50/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075120135 seconds)
    (51/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.104142182 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055990986 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075741824 seconds)
    (54/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.205315693 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.190468916 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156828612 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09399677 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.079278971 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116346854 seconds)
    (60/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.078815496 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075494919 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073504652 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075983399 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12527994 seconds)
    (65/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.113261242 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079884964 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225864911 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.158036065 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127475453 seconds)
    (70/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162138316 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070320725 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076771041 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08982362 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06850455 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071813259 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068429692 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.137128534 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.210223182 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.262526467 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094468218 seconds)
    (81/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098199265 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055654993 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077139671 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069591314 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.158809596 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.1923004 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072035891 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057148913 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.073652452 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158442344 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.210833521 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069249963 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.180403286 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093669787 seconds)
    (95/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055925392 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.0706479 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.091720854 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076830896 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092084385 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057540685 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09983174 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080884969 seconds)
    (103/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084308133 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075081364 seconds)
    (105/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055764114 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077354999 seconds)
    (107/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.192731532 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.074817479 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0555376 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09259903 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082823571 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148853194 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083294333 seconds)
    (114/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150578723 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.178509233 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057056879 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11783839 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.055503389 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055697642 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.124912055 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094905921 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055110584 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078753657 seconds)
    (124/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.191540681 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076066474 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076648979 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170206483 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076127181 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144579399 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.055053637 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089710377 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057402567 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088857032 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.14662336 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077548308 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076404897 seconds)
    (137/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069278603 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075684815 seconds)
    (139/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.073923093 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.0826389 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116089861 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075606598 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.201797896 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076295175 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075847628 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077062248 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071001903 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068814177 seconds)
    (149/309) benchmarking ("sort", Int8, false)...
    done (took 0.150634693 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.161904731 seconds)
    (151/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073836545 seconds)
    (152/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152326472 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139592518 seconds)
    (154/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.103756964 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055409898 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.055509102 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076038219 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076349708 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056810413 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076963785 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080586711 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069331388 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068935524 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076737242 seconds)
    (165/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080342403 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.11203516 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070855813 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075061541 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081058416 seconds)
    (170/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082819754 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068356531 seconds)
    (172/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083433804 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078643037 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090691627 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076971976 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055848929 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092435139 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.153939576 seconds)
    (179/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076056437 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07741214 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091973885 seconds)
    (182/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05452474 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077613577 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.216849349 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056613024 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128504294 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.071396076 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174594385 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.078144468 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072562089 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056049317 seconds)
    (192/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079702711 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.055463697 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09189552 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077132061 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056179302 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069847439 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.069025119 seconds)
    (199/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.112792131 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.105697663 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078179744 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070475857 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.056123025 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078721502 seconds)
    (205/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072896621 seconds)
    (206/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.05668676 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069516553 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.12791055 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057480689 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.073312702 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077689659 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.057210789 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069237348 seconds)
    (214/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.116032604 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.068257109 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17422888 seconds)
    (217/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069607932 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.056474057 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071613537 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072031167 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104474283 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069856682 seconds)
    (223/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072038631 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078003265 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076426686 seconds)
    (226/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080829689 seconds)
    (227/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123400938 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067044973 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078742164 seconds)
    (230/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.055571787 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.055186811 seconds)
    (232/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055465138 seconds)
    (233/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070508253 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068724627 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068114025 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069350982 seconds)
    (237/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085770453 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074882661 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084635363 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.056720856 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055418528 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076192407 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093368538 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068451249 seconds)
    (245/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055929521 seconds)
    (246/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06844162 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070618491 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057829721 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072248842 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069662228 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068628231 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096321405 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054968257 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139914432 seconds)
    (255/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066779389 seconds)
    (256/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102822327 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05497231 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.135434715 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.058068358 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068979293 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070510079 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.055741165 seconds)
    (263/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071129337 seconds)
    (264/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056054933 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178245121 seconds)
    (266/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.056308015 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068890339 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 0.131074147 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141286547 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075465929 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096257526 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070347292 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076205119 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088848387 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069423189 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 0.132709836 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077710778 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056386489 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07459626 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139649677 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091333092 seconds)
    (282/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.057853946 seconds)
    (283/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067666904 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056471282 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075879642 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068905077 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054707598 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054815485 seconds)
    (289/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055488424 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075829948 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068614046 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067078644 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054943602 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067153054 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056088167 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076275011 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095715081 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09297481 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075020397 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.05551155 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090051543 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056417051 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07379895 seconds)
    (304/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066892026 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06863967 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098588167 seconds)
    (307/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070822983 seconds)
    (308/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188101957 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.226313009 seconds)
  done (took 31.997178227 seconds)
done (took 33.430114712 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088853 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097811841 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079836778 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.096838553 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084929671 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079990134 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076711744 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081961703 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083748533 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.086231148 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082902075 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058953825 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078621865 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078448427 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078540679 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094905388 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082327618 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077083172 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078085921 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06814356 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077656674 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069144911 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071058255 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.05842789 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082405281 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075639609 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078201476 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078434947 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068903428 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069607489 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072704221 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07736915 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069222357 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08257027 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076534738 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076839018 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078448107 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079980002 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070955146 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068949997 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079236462 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069711109 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076267834 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07727988 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075408091 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074835807 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077412209 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080882007 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094306277 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071450493 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078671595 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079509688 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080503574 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076935975 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073200192 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076740125 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074304722 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094293804 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077514838 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071383859 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07851787 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07798015 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074990535 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076476905 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07705471 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080276744 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080129757 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074584381 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078698193 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075114968 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069051351 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076705088 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073771094 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069588603 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.0803751 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08104724 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.0677122 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075282057 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076761584 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077772105 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068336214 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071127096 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070415092 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075388425 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070564653 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061111276 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07312657 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07565481 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06822707 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077771224 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075816932 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076849273 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070799929 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080281181 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068345585 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074125905 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069096749 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069240002 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070933021 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073574042 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068953348 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070976322 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079310602 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069954217 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076492083 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081868618 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068931464 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075760441 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067550045 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068081706 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082335676 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078617174 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068686199 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070667649 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067783315 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075612291 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066972893 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067818074 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068151125 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068165312 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074063855 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.0679552 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069532123 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075576764 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.217784595 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069666917 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073823899 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071984809 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070429497 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0754662 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069936202 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.069791213 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071712182 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06611841 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071714317 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069745109 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.076610249 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070959422 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077568428 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071218086 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078839859 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075362445 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075483789 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074390429 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068105973 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063174196 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071252537 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071478994 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070985174 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068910766 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070921171 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069808143 seconds)
done (took 13.024883749 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073185423 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140535532 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098848258 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098626985 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088128243 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069577566 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078526423 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100579972 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071048 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101933759 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089682749 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088386665 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115528305 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068310968 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069259314 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073346001 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.071154861 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084242881 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100544564 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089221832 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115238417 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068580855 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093887635 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09113214 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090899634 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105201243 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070371007 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07273159 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072953601 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094852031 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090805823 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073077406 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07012113 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099642794 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095253796 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085794698 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070412274 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084895693 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069567094 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069198022 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071196841 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100437231 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.082978548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082664465 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073366126 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.079252129 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070650125 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085649259 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091561292 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081657151 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088045285 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102755923 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072022027 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086365481 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068172151 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08839473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080056874 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071439907 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069675956 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077580201 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069887431 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072792039 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08372591 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082916907 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073667163 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086974015 seconds)
  done (took 7.035845672 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089447532 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094378688 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087506536 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086334813 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069146885 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070342063 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070213748 seconds)
  done (took 2.09392814 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.073235709 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091328043 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092355195 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09222611 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084497019 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091260146 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081125343 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069637109 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.090557918 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071409536 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090780837 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102731026 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073588549 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077271408 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093101425 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069967532 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093616052 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070868758 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072662155 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093704902 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072162449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098621254 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073404702 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070495059 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08403567 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070580693 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115498387 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074724925 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071829055 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072821088 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068281531 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108429824 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083326377 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077737907 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070404995 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085042906 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084420301 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068911671 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085967882 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.07870533 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083815307 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070283308 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070879991 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068249448 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073846853 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080465453 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070996007 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071691561 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072781256 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089144701 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071229895 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08313368 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072847826 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.0759263 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071876637 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076588292 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079936723 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071440998 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089315889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072216952 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086954164 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085879832 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084025616 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086065805 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072711075 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083131452 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084169516 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073468611 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072123678 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074159 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086134437 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068680598 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071693137 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081060471 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07242851 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092787261 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092710209 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071773374 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083921546 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070842216 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070530044 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070609189 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092888616 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075444533 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070257257 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074446645 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073986789 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068534505 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069330006 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.07425498 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068297175 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072054399 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073434686 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073929499 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073339677 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086329391 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.073571356 seconds)
  done (took 9.178864933 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075353718 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071648213 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073369376 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071086084 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071213193 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071748301 seconds)
  done (took 1.986213155 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.099682601 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07202088 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081835616 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07515399 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105947778 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.089355998 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090011326 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081219172 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085399308 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081194133 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089450714 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.090911369 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094610853 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075332559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089810935 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074332696 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090973014 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077207415 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081034537 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075542516 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088777253 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074949244 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075664205 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084485268 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078797096 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074475895 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081123259 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.081601513 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080938535 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081168573 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074937964 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078881221 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073774294 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080796407 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089834932 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074498529 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074372222 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079759207 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075324809 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078234344 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.090534801 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075365381 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07660552 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080365619 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08133342 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073764928 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079955865 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082349476 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090451959 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.08039529 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082023743 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074875959 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.078454257 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079637363 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074029616 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080721374 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07956189 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090076665 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075024924 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074610774 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072021093 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078746267 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081315512 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079443654 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081268437 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079894247 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074727871 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075517999 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07548234 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074874123 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079677452 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071805169 seconds)
  done (took 7.33305931 seconds)
done (took 29.139696493 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53874897 seconds)
  done (took 2.047637629 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.623515538 seconds)
  done (took 2.159262436 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.551502588 seconds)
  done (took 8.08738895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.408894536 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.501262904 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.736584589 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139444261 seconds)
  done (took 3.356235384 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.7188578 seconds)
  done (took 2.266347062 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.24662252 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228000066 seconds)
  done (took 2.029327051 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.389207564 seconds)
  done (took 1.924821594 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.11477803 seconds)
  done (took 2.651304121 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256193696 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179622349 seconds)
  done (took 1.979788867 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.474513178 seconds)
  done (took 2.015968799 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.921762006 seconds)
  done (took 6.464411465 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231533866 seconds)
  done (took 1.816749163 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243464236 seconds)
  done (took 1.787098763 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.758596431 seconds)
  done (took 3.302671865 seconds)
done (took 43.432394255 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089199317 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089346639 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088618099 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085153947 seconds)
  done (took 1.881115776 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083090808 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077284871 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081575169 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076809064 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080493188 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076040511 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078115681 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079515351 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076131778 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076861024 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076351571 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076540066 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078639131 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077638471 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074854491 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.078907226 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079530891 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076202651 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079098565 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076586912 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07428374 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078444658 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078904135 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075161727 seconds)
  done (took 3.413143275 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084410447 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076545341 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07861283 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07543184 seconds)
  done (took 1.869972337 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084185936 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097398817 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093743862 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082924078 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096276199 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090561338 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072879908 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072607382 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07464852 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.081704628 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07192729 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099420109 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092049565 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081446085 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083738431 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06990647 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07217992 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091598398 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082382703 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08242734 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074854155 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082112448 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07211905 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091314426 seconds)
  done (took 3.540614973 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093830837 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105125171 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084727831 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093483631 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095387806 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069472756 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091390066 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096177768 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128437971 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069816504 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075099745 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069487963 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077342851 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069553957 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085153622 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110268982 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113452151 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072810971 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101529293 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070280831 seconds)
  done (took 3.337561819 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078830726 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073814898 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.074590224 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069547193 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080316601 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076708308 seconds)
  done (took 2.013309437 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074586007 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073972199 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071278013 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070947121 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076132571 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071294213 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070319217 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071365674 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07223034 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071428255 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071085895 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071044541 seconds)
  done (took 2.41893711 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205542757 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.07227168 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073924117 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069661514 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074646609 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070573661 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08565233 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071978261 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096819042 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070860962 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071010254 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07293684 seconds)
  done (took 2.591661541 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214009386 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079609214 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237520563 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154817535 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115804887 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119697187 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11551426 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115817803 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14635276 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104561267 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168200569 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168217948 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111934511 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144838302 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093640387 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103596951 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160177848 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166951636 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109341367 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166674555 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150167428 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12918769 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148741574 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104865156 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109409162 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124968506 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075186618 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084626178 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170898905 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136949905 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147737401 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115390255 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097072942 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177711588 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169740326 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143395171 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150423035 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087996961 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107813477 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133409917 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196682782 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091533261 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163106043 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255150069 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08594011 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137062983 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121918135 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122385128 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10849522 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093805576 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149405003 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185257096 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141288329 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091416184 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127073818 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119774368 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117944936 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116311101 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181065592 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161245704 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13163582 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075361583 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113811162 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152931355 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133944917 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111426342 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128205275 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095920913 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139310313 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155701181 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127246606 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147900065 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.119611065 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091914841 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121104161 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142894566 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131998232 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160345333 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126307462 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07584981 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127984324 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105185391 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083073299 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145972422 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078884775 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174420733 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101943842 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108964897 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125563939 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110859601 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11150437 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161507221 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28912808 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109350549 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070957482 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110037269 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12239814 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152268957 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091062784 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111060133 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121454681 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082193754 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142779509 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079585254 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126446951 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.080671045 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125890792 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132892916 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082329871 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125845108 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106476205 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102894829 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136256904 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158421965 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091485554 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085718851 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167283552 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124662779 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106145746 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144389623 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156855256 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102687293 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105561277 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150461171 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172573963 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092474656 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162228321 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109552413 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086916979 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.091105906 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124921807 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114684753 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12735787 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084632381 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.120116825 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168297142 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078456957 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098331674 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135410176 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081499888 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083257034 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108997 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108431388 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09961478 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102499929 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105985846 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140006122 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123494245 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253432725 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128995462 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102097629 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168566512 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091126069 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.1050142 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108085083 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073325676 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.1387164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159072636 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082773586 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163212307 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124775549 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118790049 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120554604 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08729664 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141934131 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08284885 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074897848 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144906945 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11252528 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112712285 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150253435 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118651553 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128929958 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120774868 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137100557 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133676153 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129963475 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109877767 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.090847741 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113977753 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131123161 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076639963 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093902905 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083004681 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108523961 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099477582 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086287782 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144942854 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126561562 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115095197 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113583828 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099467466 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14636933 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079318743 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129729238 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120955877 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097716959 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151304078 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151307434 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133336965 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101241134 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135416275 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.219495034 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078730253 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093965372 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125120277 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086771639 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088147948 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120096624 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147761889 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131551017 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142113248 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125706161 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124576532 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155052412 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073868349 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120174311 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147198338 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123512534 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10866947 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09395476 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102642484 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143520695 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11095527 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181180797 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115494723 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125040325 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154793942 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103080023 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082729269 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104804901 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137875659 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108109282 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144846584 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101600331 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09076491 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110655908 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078247542 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102148995 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129637932 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122728827 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135961596 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115988117 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136197073 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080756511 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118803881 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125923831 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125245319 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067525198 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1201757 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159336924 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097204153 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118849786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150497869 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081675864 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.284606839 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175099342 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146133256 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088833289 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112732145 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121982671 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129041381 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121550266 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14277124 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110502909 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137327711 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110937055 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087763639 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090802408 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100642356 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107749282 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098567662 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108111211 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117473343 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098988512 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136176887 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107480995 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112600698 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120064035 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101292342 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095253469 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100449138 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174207 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120899739 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171961764 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101520583 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144112524 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162460337 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07772208 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082536986 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081651893 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141516287 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087578191 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131994536 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11274563 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120001258 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12534863 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144986117 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099085258 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071619929 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110168629 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136902594 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125781805 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100484999 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105704225 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16168952 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101968448 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082397058 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115982056 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115475055 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.253430552 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172772245 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066119325 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108581806 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080339485 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085205683 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12872067 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152124152 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08408844 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10400675 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121365793 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115859306 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129034254 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105222736 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115159593 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127222448 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150941136 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131085286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092630353 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115077126 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130137559 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156144864 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104582645 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100539591 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173507244 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150897054 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160857197 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092181256 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115133734 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115721363 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113390589 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139844716 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087130961 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163321019 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085160269 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136757638 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107090615 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092080559 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133954003 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.114883189 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091428009 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147273162 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118036082 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08553106 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080326807 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119104666 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120865564 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107654978 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07841623 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140525271 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076530514 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132505065 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310684335 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084107029 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108120262 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09863172 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083197054 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111047985 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106164353 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090741666 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10203025 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172516797 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089859269 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150265068 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13558301 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115432502 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13642518 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1052066 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645328651 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083016906 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151998536 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120002004 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171903986 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103141407 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119251131 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111112367 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126335606 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14391803 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106091913 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178619988 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133298073 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118906326 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082591383 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10474529 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107382101 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091631765 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110552284 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114714849 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118947328 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09607254 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118735855 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127116823 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085596128 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099578033 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155578845 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119821452 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145970862 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140389864 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08823197 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118304676 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138937704 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082929126 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122191192 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299687027 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109764718 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102482938 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084727316 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104912969 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159126761 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077181799 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16568138 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122513028 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112145886 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114830792 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115137465 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137385058 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111755231 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12333512 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096221688 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111908629 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11490958 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085232649 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079891537 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106845752 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114228409 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100109449 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100686994 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10180686 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150266254 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075900003 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102619244 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117171467 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149759963 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173637543 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.090780864 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086843355 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123321509 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11870956 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115195222 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122855765 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082178445 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085096122 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083282719 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083234597 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110614125 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115186781 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11739503 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112743226 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16350999 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086197088 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224129829 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098962123 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106682128 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07350841 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081462313 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098546925 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100073875 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107996366 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113762265 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.305030357 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098869835 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093797886 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096105835 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078072046 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087321732 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129357093 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112205128 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120720603 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105139518 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066665881 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112755592 seconds)
  done (took 60.290984246 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113687119 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086187219 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100464434 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14669902 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125816654 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203483564 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.159668735 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192396992 seconds)
  done (took 2.792795625 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.0748969 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098961986 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105286823 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08574544 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070260048 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073019413 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231664952 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084294983 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070587971 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099270674 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082347593 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072752704 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.435222248 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070598565 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072207955 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.067289524 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070871232 seconds)
  done (took 3.518540271 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.400188722 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.617315307 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.347501984 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079531573 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.959770852 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092821656 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.140323813 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137284311 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08201242 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537779999 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.410891261 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131546529 seconds)
  done (took 18.604489883 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.088479057 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078650114 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093020205 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.092555995 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.081358239 seconds)
  done (took 2.097159621 seconds)
done (took 109.947299442 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08872323 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.626522292 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057899006 seconds)
  done (took 2.376986404 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093140956 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089320253 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089230307 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087430572 seconds)
  done (took 2.031251845 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079765368 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080794381 seconds)
  done (took 1.824523518 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.236131809 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170836045 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100028235 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088465582 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084127374 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082883991 seconds)
  done (took 1.927262948 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078804544 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078954018 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076007806 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07955834 seconds)
  done (took 1.977244394 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.083608069 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056693888 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059035307 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062020646 seconds)
  done (took 1.926055435 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09264286 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085740146 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081455149 seconds)
  done (took 1.925502636 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108370054 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090018225 seconds)
  done (took 1.86371879 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087011638 seconds)
  done (took 1.752789617 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103158073 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103901876 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133639513 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113522217 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141715653 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111466073 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088086308 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088611417 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079877375 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089385096 seconds)
  done (took 2.718983676 seconds)
done (took 22.580632431 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084816512 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371446897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364110815 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094166766 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673785054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360170937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.971646302 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09556332 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117992749 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071145863 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088511874 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652816297 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.961863445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32667109 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.949667698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326612301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652070673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071958384 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071329809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071495046 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.958974466 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071154977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072069662 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072740662 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653025996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375389096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072538791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.341738534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071666801 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074494882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359074786 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072209335 seconds)
  done (took 16.221580744 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076982736 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122048745 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077283639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087727439 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074549081 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073213903 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074908053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072324999 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123668462 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071701224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088462324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071260082 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075181646 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072113327 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091452382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071766319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072562856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072088661 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072211777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072607552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090210217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071288681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071641269 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072190375 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072474988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083968176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072486711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07284861 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072301061 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074694246 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074780271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072753656 seconds)
  done (took 4.196775539 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119868357 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130699397 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078108135 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106765314 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115198946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073520148 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144627692 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097157125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130369175 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072059844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088985408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072060084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104798738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072709649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091842846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072210302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073376261 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072617766 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072283409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072142149 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091951367 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072554398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072617053 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073088101 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072168597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086184327 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072229681 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072714444 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071990776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074180491 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07578082 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072848197 seconds)
  done (took 4.452140855 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078960195 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078624333 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08631527 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087920395 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073969564 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076066713 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076152195 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073105838 seconds)
  done (took 2.315489526 seconds)
done (took 28.860014816 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083905858 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072580235 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076432258 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091031891 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076622878 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081604445 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070040954 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079254038 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075950836 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076248637 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077824047 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070774746 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075136892 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070995993 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078043697 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071918719 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083935556 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07610599 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083493374 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083752775 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074252157 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077250289 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079049341 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083268268 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083240059 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083062926 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081002098 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076432909 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072327149 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074307536 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081319043 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087838666 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072147073 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082807104 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071932986 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071033155 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075182543 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071861659 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083678843 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079994048 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073420432 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080056951 seconds)
  done (took 4.930398622 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094710958 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095136764 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088757645 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065522076 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070098603 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068638825 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093424889 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063573079 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.063537953 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092380984 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059880325 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063483093 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066076388 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058149001 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063562675 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06132405 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065878166 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.05971187 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06335343 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06303983 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092643581 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058303738 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080880598 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066295886 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060167596 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.0659493 seconds)
  done (took 3.535861462 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079991044 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086596672 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093202485 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145217142 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114476292 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081192223 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082665863 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096063151 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09709817 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070725594 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075096392 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095564587 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090452124 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078378658 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071272735 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088028702 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088378351 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072772819 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077134305 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095002238 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088860357 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088964312 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094057019 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084891903 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070408592 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074207344 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075097917 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085384969 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074361429 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080200232 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074146991 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074736583 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074270783 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082710902 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073735533 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072918975 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097214712 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081486888 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08364839 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072607223 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078985732 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073177724 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.095527276 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127519349 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070753955 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077415631 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075903091 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08129818 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070922723 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095979693 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083010147 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071406132 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074053941 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070479259 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070741686 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.074239322 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073027182 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073853537 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079841912 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076602464 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094372992 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075768444 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087941053 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071192087 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079120679 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070258634 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072430335 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.07032138 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096663017 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073942939 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112153183 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071694347 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072038005 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079976392 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080875944 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07771268 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.071374723 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086991424 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082309015 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075236945 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078994885 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074842083 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073615537 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098600838 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073277979 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073277947 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072226587 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07671518 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074413087 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072743453 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084244744 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.071687375 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073836189 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088120743 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070928115 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073129616 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077644 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076020334 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070990348 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082572054 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07567094 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071752625 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080925967 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071002987 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074173466 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082509864 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077551497 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070181809 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075367132 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076522052 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072031489 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072547306 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073475365 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072694072 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079154293 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077447769 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074642186 seconds)
  done (took 11.091102358 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167023398 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156491706 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074337931 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147683282 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079928739 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.08342939 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149893396 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098679163 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072491595 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072343932 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072897435 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115427946 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10960886 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119514346 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082891786 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072464561 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093592629 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117998565 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153045486 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146239151 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094101264 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080455059 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074633619 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073099812 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074924249 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082155137 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089662183 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080583736 seconds)
  done (took 4.562481771 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086002196 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.105516124 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07788119 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.093812446 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092850542 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071559818 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074101335 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074159598 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087379456 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082085616 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071732459 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076784315 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077906663 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075121664 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072478467 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078233264 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078714338 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07271154 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075909014 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076532985 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083076858 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.095003097 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075409341 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071512749 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076795259 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071551942 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067667339 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087332898 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072173595 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096172031 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069911664 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07668974 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085001162 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072591233 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.07144541 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071815851 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071754782 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071513319 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074211638 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072453924 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.07025649 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061839907 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070687259 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081662669 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084610435 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060425144 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075880641 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076506939 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077175627 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069122466 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074571611 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07444326 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074646457 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078885173 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075852124 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076760386 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073265072 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078205144 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080066987 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07122792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069594467 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069995853 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075844792 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069343552 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086956457 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.07590199 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070274755 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071741429 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074131324 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084722402 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071745361 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075984335 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06937717 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073678407 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.075886394 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073240228 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07272362 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070079621 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071024151 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07260965 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059745234 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072100845 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057661405 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074371877 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070496431 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070280803 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072069314 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07579077 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082773514 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073022466 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077267655 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072927247 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070965378 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075190911 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064461112 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073826691 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082035203 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.08548574 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07127321 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069337989 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084270942 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076134981 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071465059 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06045984 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075264812 seconds)
  done (took 9.631526742 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096584975 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073084102 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085534142 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092088142 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090725955 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07841882 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081250413 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072890798 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086679801 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077174413 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080187014 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071874444 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081486299 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.080495922 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073495753 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080856604 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075720546 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086156398 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08648786 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.07201443 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079502423 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083529156 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093167237 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084318472 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081994673 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083648485 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092881568 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.080493332 seconds)
  done (took 4.03435985 seconds)
done (took 39.464574427 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.796354457 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.93817218 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.764693491 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.077432945 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.985782092 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.865954098 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.854000501 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.766704896 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.931532149 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.795064313 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.055424793 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.834418471 seconds)
done (took 65.496256425 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.79920529 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.907940235 seconds)
    (2/2) benchmarking "String"...
    done (took 2.008029241 seconds)
  done (took 5.615445707 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.020451453 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.348711182 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.010470919 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.764941764 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.768663892 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.07072801 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.562041948 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.292646697 seconds)
  done (took 30.517580931 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.850484821 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.978029843 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.424568812 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.443687543 seconds)
  done (took 15.439874176 seconds)
done (took 63.17434946 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.764556584 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.798624962 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.805755054 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.748078236 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.824163943 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.781068695 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.106198734 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.818195733 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.763300079 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.754407856 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.765702451 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.196410558 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.765681151 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.123259877 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.766503338 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.76512399 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.838403502 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.298505211 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.921930926 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.779246133 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.772236536 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.779845139 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.763541583 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.890535165 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.797154102 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.766527695 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.184598017 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.771566455 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.39101716 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.7652138 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.795363639 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.36844479 seconds)
  done (took 204.128852782 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.767133243 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.738212494 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.729189196 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.780723266 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.440608717 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.944644439 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.870175902 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.476382095 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.766105149 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.76865716 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.982305344 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.763808205 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.006365685 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.714780128 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.83347769 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.874663378 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.900082715 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.022125482 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.834530904 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.921075356 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.773610038 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.785986099 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.75291551 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.97611108 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.800679497 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.777608269 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.778919084 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.793780784 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.956040199 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.882374393 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.80403743 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.770461775 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.967987081 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.638475666 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.793380679 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.793610437 seconds)
  done (took 169.882586532 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.955078784 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.770844227 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.770438788 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.769912365 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.775108163 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.772964393 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.893727559 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.898034909 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.397195955 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.085221041 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.820595159 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.564241216 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.765605645 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.836342903 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.778278208 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.766191641 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.784910328 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.796566589 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.769727073 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.769394595 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.894277226 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.778585593 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.976696013 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.778537878 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.771609779 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.775844589 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.142129884 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.766971641 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776224251 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.013783195 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.767926836 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.770687914 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.626994878 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.83581579 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.855957882 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.768487751 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.776596345 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.772134346 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.989117079 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.768174699 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.77184342 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.773854223 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.925112121 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.767949201 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.896503396 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.768970136 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.251456343 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.767571624 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.771226716 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.697410931 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.78850446 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.348724068 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.772975354 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.771877898 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.774695424 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.772477743 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.772655845 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.778429218 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.485554257 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.855397773 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.775198142 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.777782752 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780008145 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.774148662 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.773628223 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773558825 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.869704066 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.828114762 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.891378531 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.171416796 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.896346579 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.773913449 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841386375 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.865186169 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.769497911 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.773386864 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.772457498 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.773519748 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.854590379 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.770328105 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.9025231 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.77917059 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.775393485 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.824927913 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.845705933 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.770865471 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617567542 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.775048322 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.774230806 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.041328267 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837633635 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.770985072 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.775746296 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.774212864 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.773707995 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.774679671 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.901348827 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.899801708 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.477951346 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.774054253 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.635058204 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.944120052 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.973854505 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774157446 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.013338744 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.772461808 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.868798283 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.777465844 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.777546284 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.775339911 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.8091695 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.777077306 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.830296398 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.776598351 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.150380323 seconds)
  done (took 402.649912804 seconds)
done (took 780.36467987 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.417591687 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.38448183 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.492675998 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.404782588 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.37406752 seconds)
  done (took 13.781066464 seconds)
done (took 15.489140584 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.872005281 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.875254048 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.802385455 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.869734904 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.798664923 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.869172876 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.852926092 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.803365464 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.835896718 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.802977169 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.837975476 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.803430019 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.789585337 seconds)
  done (took 25.51980821 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.022670614 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.021991925 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.845307031 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.026350315 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.823131431 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.033731893 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.947255733 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.933919921 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.932300924 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.79485419 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.790574502 seconds)
  done (took 22.881736249 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.020318633 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.0294227 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.854478163 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.028706219 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.826403959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.033110401 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.945794615 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.938752477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.936943404 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.795930517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.791355118 seconds)
  done (took 22.910453894 seconds)
done (took 73.021942033 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.785836208 seconds)
  done (took 3.494619472 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.816540982 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.989528872 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.793548943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.791472467 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.788446706 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.787265341 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.792691414 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.786032039 seconds)
  done (took 16.257655858 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.78681344 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.786246807 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.788099419 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.788005377 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.784376216 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.785086498 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.787191486 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.787553601 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.785488808 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.784167948 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.78828394 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.786649153 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.784644812 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.785355842 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.785267543 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.785338913 seconds)
  done (took 30.290198755 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.786877112 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.784041031 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.785146396 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.786308973 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.785042953 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.785419099 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.787031267 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.785352287 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.78575825 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.785330212 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.786603576 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.786238088 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.785459285 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.785866472 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.785211093 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.786897212 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.785586633 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.786183175 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.790065222 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.786699314 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.78634419 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.786193287 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.786133486 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.787288062 seconds)
  done (took 44.582230953 seconds)
done (took 96.333157108 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.540467126 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.488500298 seconds)
  done (took 9.739552789 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.790699857 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.789046318 seconds)
  done (took 5.350585278 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.789112094 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.790743182 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.790376329 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.789795226 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.788908549 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.789111977 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.7894336 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.789688893 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.78913739 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.789191008 seconds)
  done (took 19.607843445 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.788375474 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.79013082 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.78710294 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.790130851 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.790580797 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.786854822 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.789533783 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.789727174 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.788579247 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.786444154 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.790201613 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.787113824 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.790135514 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.787808408 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.789083827 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.786998388 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.787084574 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.786767438 seconds)
  done (took 33.906058263 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.790051485 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.791201143 seconds)
  done (took 5.295473849 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.788303638 seconds)
    (2/7) benchmarking "second"...
    done (took 1.788133045 seconds)
    (3/7) benchmarking "month"...
    done (took 1.788127381 seconds)
    (4/7) benchmarking "year"...
    done (took 1.788595724 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.787686079 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.787488347 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.787640013 seconds)
  done (took 14.229633254 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.79232774 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.953764867 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.025380991 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.446249885 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.792654378 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.794996942 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.72859812 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.794912064 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.795279054 seconds)
  done (took 19.839025121 seconds)
done (took 109.679592797 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.650202343 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.785945925 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.004309864 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.829804997 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.839304384 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.084980792 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.800146539 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.093672774 seconds)
done (took 42.803144357 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.849911226 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.115212236 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.141435974 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.806627395 seconds)
  done (took 16.777839445 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.773693428 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.334199315 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.819332437 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.377543779 seconds)
  done (took 20.04832865 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.160077861 seconds)
    (2/2) benchmarking "read"...
    done (took 2.127423155 seconds)
  done (took 6.008043932 seconds)
done (took 51.400535848 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792945793 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.79252203 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.78962316 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.79025761 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.791992184 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.790667204 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.789268541 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.793307331 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.793883335 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.793019134 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.794232168 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.793483504 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.793850441 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794742948 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.791420745 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791156409 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793228252 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.790323347 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.79002275 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.790744022 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.790644502 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794025083 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.791088877 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.789137403 seconds)
  done (took 44.721794955 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.793533557 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.791287227 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.794729128 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.794549994 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.790458706 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.793903011 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.793087484 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.790153799 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.793588727 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.794245887 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.791740421 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.791866412 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.79265067 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.791214019 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795682283 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.7908627 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.79477807 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791510746 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.795462635 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.792939731 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.794726041 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.792452857 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.792273925 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.79394267 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.79206654 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792990711 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.795460019 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.793439976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795525505 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.793636293 seconds)
  done (took 55.513254473 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.80036385 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.803474118 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.795624917 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.796157793 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.796448438 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.796085525 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.795234825 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.797531807 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.796528366 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.796347041 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.796688178 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.795119168 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.795512089 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.796688867 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.796184535 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.796700951 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.795522594 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.79603277 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.796894504 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.796259796 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.795130475 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.795828302 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.796264719 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.795413772 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.795846336 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.794901616 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.795528572 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.796984127 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.796889588 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.796932748 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.798213902 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.796401746 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.796968154 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.79659253 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.797383537 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.796558858 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.80215218 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.806189982 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.797472121 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.796018859 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.79729874 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.797391339 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.795711274 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.796606607 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.798199577 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.795835664 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.796376542 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.796271855 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.796279674 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.799756716 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.797163346 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.797620044 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.797173292 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.797015497 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.797395771 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.798310389 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.796748514 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.798242635 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.796623804 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.798972905 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.797966232 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.798859698 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.797320898 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.798339113 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.797962133 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.798053059 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.797331746 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.799301456 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.798610381 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.800214461 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.797556824 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.799058441 seconds)
  done (took 131.125960639 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.79710681 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.796224571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.795135743 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795812848 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796238368 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.798562574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.796370192 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799238869 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795974634 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.799777496 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798824527 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.797030449 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79672899 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.799418193 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799624681 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.796473103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.799198371 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.796227914 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.799256894 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.799746797 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799897764 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.798194504 seconds)
  done (took 41.274663513 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800166006 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798814534 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.796657504 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.7996528 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.796582102 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.800992 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.801295634 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.800908581 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800722579 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797570535 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798196259 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80068458 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.797918461 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796593596 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797453498 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.798166569 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800161106 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.798250021 seconds)
  done (took 34.104458594 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.79844291 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.797868212 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.800146717 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.79815605 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.798629704 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.802559174 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798804132 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801887427 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.801927644 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.798698794 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.801639559 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802745779 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.801341188 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799654566 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.800902072 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.80006895 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.80253105 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799902527 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8011855 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799713996 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.798957292 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801139375 seconds)
  done (took 41.330647002 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801689528 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.801293082 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.800087909 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.800435096 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.798070522 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.801947015 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.801924365 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.79896997 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.802481176 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.802185737 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799098075 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.803403201 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.799816026 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.800834659 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.800009055 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799898283 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.803333086 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.801465678 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80211458 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.79967672 seconds)
  done (took 37.745033447 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.804453429 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804252236 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.804413049 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.803452147 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804371061 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.80305647 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804749167 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.805568226 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.804891923 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.805368232 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804155372 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.804926336 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.804412341 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.805058345 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.805254674 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804633186 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.804635808 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.804849075 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.8061221 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80390281 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.805695506 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.806203688 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805322592 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.805483972 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.805824039 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.804722424 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.805148928 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.805356827 seconds)
  done (took 52.263232355 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805252944 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.80484964 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.802452025 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.802015186 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.800959488 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.801344989 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.802180084 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.802536902 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.805370902 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.802772723 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.804418988 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.806244167 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.804760658 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.805131425 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.805598712 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.80428949 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805043988 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.803825282 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.802378325 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802109636 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.805787094 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804989095 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.805993932 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.80278077 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802751483 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.806397159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80318519 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.804594708 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806813032 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804043019 seconds)
  done (took 55.849100743 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.824604099 seconds)
    (2/2) benchmarking "in"...
    done (took 1.824751887 seconds)
  done (took 5.378524987 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.802847927 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805844228 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.805657813 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.803433435 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.803029218 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.807547534 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.805881069 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804476712 seconds)
  done (took 16.16914812 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.807140802 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.807205053 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.807702104 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.807812636 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.806512482 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.807676194 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812985203 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.806849156 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.807153465 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.809280195 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.816669401 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.8163043 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.809074367 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808741641 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.80800548 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810105262 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.808486719 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.808310086 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.808236806 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.807858328 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.807335333 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810242586 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809571632 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.806208705 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.809572974 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.819867927 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.813208237 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.808375957 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.806961154 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.811900534 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.80788936 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.806164156 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.807069607 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.807787041 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.807334652 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.809189628 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.817670567 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806150704 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.814674787 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806296561 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80845496 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.805679917 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.810826348 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.809966495 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.809128632 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.809563102 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.809061219 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.805491317 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.807846613 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.811986919 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.815106437 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810245531 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.806017394 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813341848 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.812342054 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.816166277 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.808606937 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.814148752 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.821332691 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.820878235 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.822755824 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.81822394 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.812298186 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.811392208 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82108103 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.838195232 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816677975 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.807053728 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.808187613 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.809968897 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.817715522 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.823249624 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.819903168 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.811345488 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811222565 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.810516516 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.812207703 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811240415 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818332849 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.812672577 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.810711016 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.812740623 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821096505 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837403226 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.812253332 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.811516919 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.811177794 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.812538318 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.811893906 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821914937 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.81012722 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.811882976 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.810550364 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.811349672 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.812608323 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.811266063 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.812083856 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814234849 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.809205222 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.811523001 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811336236 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814983454 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.822510191 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.811955174 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811912732 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.817647032 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.81108993 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812451045 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.817711929 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.81244402 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81260665 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.814178457 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.819579214 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.808735119 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816350854 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.822175263 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.812275528 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.813412335 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.812129917 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.812851082 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821350267 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.841455481 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.813217906 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.813678956 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.817819896 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.826432592 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.813415988 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.817064269 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.815053395 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.80862854 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.81015446 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.813994479 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.81484279 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.813443435 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812765262 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.815045845 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.810756349 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.813805963 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.81305961 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.815087512 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.815249455 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.8138326 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.814258042 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.816685163 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.81449825 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.815591613 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.820070916 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.813065293 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.816524808 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.814227364 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.809446935 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813577293 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.814112157 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.814477387 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.813963552 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814918196 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.81486667 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.813750505 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813650707 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.814410821 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.815278501 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.816343363 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.820760836 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.816878309 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.820008607 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.81526444 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.812478387 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.815109668 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.815421797 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.813561407 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.815514129 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.81253498 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.817609593 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.823395645 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.814787548 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.815489679 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.818244388 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81541996 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.816672139 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.816593675 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.822731906 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.823908134 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.814946934 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.82217807 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.81530045 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816072654 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.816746585 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.815254446 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.815577887 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.8159819 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.820834949 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.825227498 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829313549 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825133607 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.818036865 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.821213284 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.818348198 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.820791553 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.822412271 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.81708504 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.817865624 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816091054 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.81699943 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816929181 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.818863575 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.816735664 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.817253377 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.816536212 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.81836424 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.816836543 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817875623 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.817975122 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818115483 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.81340398 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817593727 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817311913 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.818717162 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.814151287 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.816956959 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.81750876 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.818193396 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.816724008 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.826096352 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.816030473 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81995875 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820414279 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.819641738 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.818721743 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.818776747 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820463408 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.820036782 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825679778 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.816078609 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.822008435 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.82603581 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.817233269 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.820185134 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.822779594 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.8198543 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.816281439 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.82138966 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.830817361 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.818776352 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.820001035 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.819216488 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81961217 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81905873 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.825856473 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.815937326 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.819829236 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.820244123 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.821590872 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.817399607 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.820820076 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.821107181 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.820655436 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820469805 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.821092565 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.821372065 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.822092848 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.820332168 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.820138008 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.820760595 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.823162747 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.828783379 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.825462599 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.819612966 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.821997243 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.821158685 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.824628089 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.820958665 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.820296987 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.820412955 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.834322616 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.829157811 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827103936 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.822126915 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.821830627 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826960948 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.820886916 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.825325948 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821371017 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82093697 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.821140893 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.820808565 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.818960284 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.820603543 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.821050372 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.822620165 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.823682111 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.826337843 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.822336046 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.82096505 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.822669406 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.823053864 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.821768124 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.823196679 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.822593909 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.824446158 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.824146808 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.821962833 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.821893991 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828465386 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82090969 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.822346646 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.821714149 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.822972165 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.822106501 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.823623028 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.823062355 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.826605696 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.830984672 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.826748776 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.833045983 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.823452333 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.835039702 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.823145121 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.827735196 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.832559014 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.820064762 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.822427969 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.82348505 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.824411624 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.831879575 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.822436894 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.825894515 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.830027953 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.824145566 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.823743368 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.824192329 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.822792355 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.824475665 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.823761947 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.833246589 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.824844735 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.82910758 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826257295 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.820738299 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.823753751 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.82368769 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.824291946 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827859032 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.824662665 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.82500427 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.823549453 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.82353967 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.824851039 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.824332559 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.824627283 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.821052889 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.825159669 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831130913 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.823979197 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829451516 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.824664046 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.833481387 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824499302 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.834027443 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.824060277 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.826683288 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.825068342 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.824479399 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.82676456 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.824617041 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.826524349 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.824712599 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.826383249 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.829168011 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.825820479 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.827298795 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.826846293 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.825720893 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.825270052 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.836957408 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.852463757 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.827778428 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.830954674 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.823390035 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.82735788 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.831069834 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.82604102 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.825404203 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.828977477 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837694182 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.835815304 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.827222294 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.826079073 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.829190933 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826920847 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.828143029 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.826724566 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.826483415 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.828136139 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.828084795 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.827672893 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.83173384 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.82618052 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.829063541 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829620496 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.830040121 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.839153768 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.828290027 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.830770541 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829118128 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.82908504 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.829534701 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.827488819 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.826953378 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.829011784 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827857087 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.82893813 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.835961331 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.835006158 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.829877757 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.829118482 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.826736959 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.828941463 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.830223619 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828423724 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.828141981 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.828960452 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.83107885 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.828390327 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.829716241 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.828019302 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.829905032 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.829851915 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.828960019 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832947628 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.838928145 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.829230046 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.825903866 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.827907857 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830290699 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.828071864 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.828805594 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.837237675 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831086044 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.842868044 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.840440547 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.834518183 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.830697768 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.83395794 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.838920616 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.829286092 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.830895296 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.829697194 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.832333269 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.830334399 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.835480565 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.830038652 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.836125983 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.83092999 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.830793915 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.83855679 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.831466682 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.83192392 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.832247978 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.835715914 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.830132732 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.827883085 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.831186249 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.829076647 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837233161 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.83022941 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.829181062 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831833859 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.829913517 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.831373644 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.835351579 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.830991708 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.831940444 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.827234274 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.831211321 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.831547138 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.831266392 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.827902753 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.830826151 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.830889808 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.835110087 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.838886848 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.828579494 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.832545832 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.831829393 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.832079872 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.832806782 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.834157337 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.829561516 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.829291414 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.830704184 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.831573534 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.831179662 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.833977672 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.832599927 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.833215772 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.834274325 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832939304 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.837182129 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.845000566 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.84158325 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.830188025 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.833196054 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.833448167 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.834740961 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.833492425 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.833971262 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834721131 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.834273654 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.832827061 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.833507051 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.833225514 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.837874055 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.852070207 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.832445116 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.833692525 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.833281832 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.836436788 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.833337344 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.830988018 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.832901444 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.835629716 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.836031753 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.842308484 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.834792877 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.841983462 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.833729412 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.836005145 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.837868727 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.836817972 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.843480615 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.836701563 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.835095449 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.834039906 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.841160852 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.852999663 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.834354254 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84487049 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.867106923 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.832062034 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.836316492 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.835591605 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.835486179 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.835818867 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.837832076 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.834930566 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.835303844 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.833902573 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.834728474 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.837100787 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.842257478 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.83780244 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.833659292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.834860093 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.835209709 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.837442632 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.833104074 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.835787758 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.835522906 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.835949225 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.835496256 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.835894709 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.837694559 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849329916 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.846797483 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.836536106 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.836466314 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.833951952 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.84083524 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.839814931 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.849600905 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.844960617 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.836857876 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.836787225 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.839166896 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.837092455 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.834931293 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.838025173 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.836178944 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.837893848 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.833730425 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.85033265 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84694475 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.842985714 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.838321248 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837143945 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.837613214 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.838543867 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.837080544 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.839263471 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.839963314 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.838038397 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842293905 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.837476474 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.837521645 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.840556734 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.846829428 seconds)
  done (took 1088.94316784 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836264198 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834657852 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836560309 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83481956 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.836030535 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837030654 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835857774 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.837235144 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.835387748 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.83493081 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.835078669 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834413579 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834925623 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.836568771 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83370408 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.835497044 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833824481 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832858307 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834771593 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834396848 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.832926346 seconds)
  done (took 40.29790842 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.836846984 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.833360966 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.835398231 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836367191 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833835858 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.836314771 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.833436891 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839094707 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836576193 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832521062 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.836089175 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836279575 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.832167145 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.833275512 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83229454 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83667861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.835988573 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833810067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.847488661 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831794966 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834156024 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.831975441 seconds)
  done (took 42.135843642 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.835099646 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.836540773 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.833035921 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.831577502 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.834676647 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.830943011 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.83422793 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.83231018 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.832504526 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.832963474 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.832427428 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.835968155 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.838967055 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.837170921 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.833731092 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.832063071 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.980256498 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.835902914 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.830630567 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.830222809 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.828095589 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.83587885 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.825957666 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.827219997 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.829140176 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.831591192 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.830573351 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.831130808 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.83030356 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.831337837 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.834935847 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.831311954 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.831445726 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.834212512 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.831372196 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.832784307 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.835863373 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.830788862 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.8274841 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.831580825 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.840404433 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.854382493 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.830796412 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.836197658 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.830780262 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.830833179 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.834344256 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.841537255 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.829518929 seconds)
  done (took 91.73173473 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.832635778 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.831921873 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.828692375 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.831827368 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.83113396 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.832422995 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.831013567 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.831027132 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.828632329 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.82861188 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.831180462 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.828633048 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82769957 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.831302735 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.830558758 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.828650565 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.8288992 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.827461483 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.826857754 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828612677 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.828187288 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.833093409 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.830667292 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.828201144 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.831486959 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.828301653 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.828359234 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.8343255 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.828879515 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.82860389 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.830691163 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.831977676 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.835597776 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.828889026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828311141 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.831262876 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.831566461 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.828559689 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.834089741 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.82865336 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.832029317 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.832170335 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.831317187 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.833148485 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828202774 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.829358 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.82767782 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.828921288 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.829563812 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.832726046 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.832786147 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.829442043 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.831982061 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.8278806 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.835287731 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.830989351 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.827674282 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.82770082 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.830337173 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.827067741 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.829574465 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.826634489 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.824507316 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.827224965 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.826082114 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.828862192 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.824248231 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.825851966 seconds)
  done (took 126.184306541 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827261424 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.826028511 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828518307 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826190475 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827232453 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.828435704 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.826345832 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.831323502 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.826120093 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.827192047 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.826839563 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826371428 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.827387627 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.828454985 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.825966249 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.827290589 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.826383319 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826791351 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.830771008 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.826058847 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.826558203 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827228211 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.826584306 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827514881 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.828334564 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.827163255 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.828283102 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.827703996 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826794442 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.828381083 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.8280916 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.828038913 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826869111 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.828434261 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.827563777 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.827887218 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.827228926 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826606444 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.826953898 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.828655981 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.826439633 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826541848 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.827423861 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.82716298 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.827028372 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.827491527 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.827957914 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.829073116 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.827275995 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.827542461 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.826934118 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.8285449 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.82704077 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.828398283 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.827854268 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.827480715 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831071061 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828920402 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.827512373 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.826774585 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828281201 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.8274232 seconds)
  done (took 115.060051668 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825591575 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.826405554 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.82444775 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.82345863 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.828932556 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.822809277 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.825225999 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.827598059 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825302025 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.825458266 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.830360221 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.822096056 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822871492 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824630978 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.820445942 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827472081 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820655909 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.820261002 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823193972 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.820745343 seconds)
  done (took 38.241050455 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.824717139 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.822922947 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.819871927 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820305616 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.822971004 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824577985 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.821981505 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821543827 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819490745 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822154684 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.822109474 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.825096164 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816196851 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.816197927 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.82119266 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.816940586 seconds)
  done (took 30.885708405 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.816024004 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.819770162 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.820305142 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.819295431 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.817259579 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.820432428 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.820219082 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.81568696 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.817712042 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.819860319 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.821565914 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.819494046 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.818796488 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.818580765 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.817327411 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.818467252 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.819743099 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.815884377 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.818597274 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.820728574 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.818083169 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.81865878 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.818351172 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.819385277 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.81627203 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.81592759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.815346968 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.817532596 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.814416608 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.818298693 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.816462493 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.816413765 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.818837603 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.815058936 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.818668608 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.81585988 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.819384926 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.817546767 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.819314925 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.817855368 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.818659092 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.815196895 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.819366353 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.820116941 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.815360389 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.818295774 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.815555989 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.816334463 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.815391095 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.816870049 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.817244913 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.818302605 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.819322487 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.818426659 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.820864638 seconds)
  done (took 101.737733396 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817397349 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.817445851 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.815980291 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.81856953 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.820624019 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.815271953 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.817374749 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.815119407 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815019486 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.818264055 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.815538697 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.817464245 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.815497373 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818521541 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.81529817 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819895234 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.814331009 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.814998994 seconds)
  done (took 34.443212903 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.815424268 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.814794053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.819740771 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.813362328 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.81470309 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.81840501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814190385 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.818178739 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816461094 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.815677809 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.81484409 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.817662642 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816474855 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.818952196 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.814869835 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81460267 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.815982001 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816290426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.815048401 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.813157379 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816946453 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.817136956 seconds)
  done (took 41.694437163 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.815755096 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.819102925 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.831434344 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.83824274 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.837480489 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.852298471 seconds)
  done (took 12.733460871 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813390046 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815406473 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814037673 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8165953 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817335058 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818827646 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813531134 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813928242 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816147909 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81444721 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814565916 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817186195 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816895039 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815045323 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816744675 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815687432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817242594 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813363835 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81402633 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81587772 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813423037 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817730834 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814212575 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814245717 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814320369 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813445404 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816259647 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817451446 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814455103 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816881633 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817683308 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813222223 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821399602 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814240529 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816617448 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817216019 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813000444 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817584063 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821639425 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814108935 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.815637605 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816911339 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815884532 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817705643 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815887929 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813640987 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813803828 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813759798 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81399007 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821334173 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815591908 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813518064 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816869869 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81637459 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819685206 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81598511 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81319475 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813680547 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816096349 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812648207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816395452 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816206909 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814927843 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814047166 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816198724 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816885469 seconds)
  done (took 121.580853558 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813858254 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813451329 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813083392 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81361144 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815933604 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813661811 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813022515 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814351539 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813074233 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814922986 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816599563 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814218345 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814341784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813833856 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814510073 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814411199 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815379 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813590628 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814752276 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81747475 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815198681 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814879093 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81553735 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814873507 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815081818 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817124078 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816009332 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814641567 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815013154 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815801815 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814891379 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816553687 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81545344 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.814987298 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815120533 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814806134 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816082925 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815723713 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814012798 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817540693 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815483693 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816835511 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816651931 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816173884 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815995819 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815564906 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815241558 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815754843 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816659468 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815263613 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815409592 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815156348 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815701441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815864987 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815471213 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816231598 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816401681 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815374883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815899537 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821392209 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816523303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816293354 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81928464 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815935862 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818269614 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817019921 seconds)
  done (took 121.564746131 seconds)
done (took 2524.429306841 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.878681525 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.810004047 seconds)
  done (took 15.429541289 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.980959195 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.934904412 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.818927487 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.835809164 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.816226946 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.81341397 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.835412447 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.815720328 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.818601375 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.819506431 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.819882742 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.006412537 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.822375099 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.815521219 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.8189213 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.914658003 seconds)
  done (took 51.439649279 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.822062761 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.823879417 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.833823885 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.82530598 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.824595028 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.833954368 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.855237742 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.826579276 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.857492282 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.833615092 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.892147214 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.82893033 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.822103078 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.8716484 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.834764369 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.836650498 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.91107898 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.894057582 seconds)
  done (took 34.97271781 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.89942565 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.826746426 seconds)
  done (took 10.477910385 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.81757735 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.837361646 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.915602191 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.822628296 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.817249242 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.842223768 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.848075945 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.84225457 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.836052926 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.864699315 seconds)
  done (took 70.227752825 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.828192075 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.823331876 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.823430922 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.821402685 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.815237149 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.815345636 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.821399766 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.821662818 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.479794342 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.854954234 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.82901574 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.828425609 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.825059614 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.824784863 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.82262905 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.845554116 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.915471233 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.821965594 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.821003623 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.829069069 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.824089366 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.874699829 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.836917176 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.824356142 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.853101115 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.47955163 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.827600643 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.828700271 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.91131139 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.821290288 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.823873253 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.825986522 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.825376833 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.217149083 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.084577847 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.819760334 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.832532458 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.832541372 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.821904864 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.922016222 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.824722425 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.829810929 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.476966637 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.064572777 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.934996905 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.864272948 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.137097909 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.835482947 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.826500043 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.852820323 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.827078461 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.826020826 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.837699772 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.307378788 seconds)
  done (took 129.55181045 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.819999341 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.169825999 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.990647793 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.819937967 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107379589 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.031100841 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.82192796 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.86932758 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.822633535 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.055622364 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.079848015 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931651717 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.821261237 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.81998299 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.814838136 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.815830057 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.981111328 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.896229917 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.823913061 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.817883316 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852353791 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068883058 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.946793718 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.824252013 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.851663208 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.036718555 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.947220567 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.930914528 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.614876538 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.819948088 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.887280274 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.822678964 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.823280233 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.815762324 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980858874 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.920226319 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.908165942 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.821166513 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.821089925 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.820486934 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.495483286 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.0292851 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.920942935 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.964423258 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.022506561 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030537168 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.607117778 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.819529376 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.565805923 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.987553904 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.056121792 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.063496748 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.946431955 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.824319109 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.353674448 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.82083359 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.822072098 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.072123667 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.971759458 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.925156809 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.819315453 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.821074395 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.817838619 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.072711321 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.823098095 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.919606495 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823391142 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.818589529 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.922986312 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.924630811 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.962296515 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.039559285 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853690747 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.739247325 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.362077045 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.076076738 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.889437344 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07486013 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.825145191 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.820854876 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905866632 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.66945173 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.081894123 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.076572424 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.077472301 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857925471 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.551143222 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.822438051 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.055222911 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.045541528 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.08361449 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.036145954 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.065448284 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.14179224 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.82247742 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.822650112 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.061213698 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960332876 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.825151663 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171929819 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058112597 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.376908397 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.846058513 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135087378 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959459009 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.828279514 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.469266218 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.824422233 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.058211394 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.869154617 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.826472911 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825871883 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.046376149 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.813163564 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.825192933 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.463824399 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.889340978 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.826161348 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.059586808 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.824929114 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095661331 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.823875744 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.066930621 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.881148859 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860374636 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.05838912 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.035088505 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.827166337 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.073243189 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.075189234 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.94497921 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.051266865 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.525529749 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.82808054 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117654538 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828107906 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.825336027 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.999946833 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.826576863 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.974814365 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.827686872 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123906853 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852107461 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.062630599 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.829034405 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087616739 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.862633507 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.879147054 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.828181572 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.961863578 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.82820535 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.655104006 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.992744061 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826692234 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.827364286 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.715461519 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.825034906 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978960035 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.063548921 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.852347773 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.902324186 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.501244749 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.82553728 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910612026 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854098439 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.221402499 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.82845501 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.084092135 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.829321177 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.825864511 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.826749029 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.073726383 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.01457329 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.828730709 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.824808399 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.739543755 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.826876571 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.828332623 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014690385 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.186574194 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.827083966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034732387 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831749606 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958664823 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.830507221 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.912394023 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171679203 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8264817 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.827917741 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.828329072 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.827574825 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.828812879 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098332016 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.858180741 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.356243496 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.969873983 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.107141637 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.143863724 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.084189253 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.875465558 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.829879601 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084989787 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.830850312 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.893127318 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.831246022 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.854338839 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063823579 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831949535 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043372776 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.115248583 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.679566343 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878570424 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.833285043 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830508527 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.828783757 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.978354184 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919602277 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.827416515 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.829089168 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947869457 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.954768178 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.042882129 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.831115015 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.028274387 seconds)
  done (took 893.787240573 seconds)
done (took 1207.627431944 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.829794535 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.825797057 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.815507083 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.830095953 seconds)
  done (took 29.05923979 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.839397751 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.836201867 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.836981093 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.835806167 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.844218312 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.835930772 seconds)
  done (took 12.787305887 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.848726493 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.258547969 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.828613096 seconds)
  done (took 21.694311201 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.904630671 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.219756019 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.943995845 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260007206 seconds)
  done (took 10.087571921 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.838150633 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.837095712 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.836990928 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.838864534 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.839313534 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.839909817 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.837509027 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.839639272 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.840922305 seconds)
  done (took 18.310657331 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.014342985 seconds)
done (took 97.711194004 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.133974158 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.831855918 seconds)
    (3/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.564741287 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.898199015 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.591344381 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.10144229 seconds)
    (7/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.928913401 seconds)
    (8/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.926352576 seconds)
    (9/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.036991007 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.918861968 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.830994124 seconds)
    (12/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.147006889 seconds)
    (13/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.838156077 seconds)
    (14/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.960951153 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.129708848 seconds)
    (16/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.065177023 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.833295034 seconds)
    (18/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.276501051 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.853310852 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.833353092 seconds)
    (21/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.605809003 seconds)
    (22/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.044783982 seconds)
    (23/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.201827429 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.304788585 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.970250468 seconds)
    (26/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.884768996 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 3.24387421 seconds)
    (28/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.174555963 seconds)
    (29/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.02338122 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.277864559 seconds)
    (31/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.8643439 seconds)
    (32/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.311591738 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.936961433 seconds)
    (34/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.200931326 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.082924295 seconds)
    (36/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.912692851 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.924830466 seconds)
    (38/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.830889851 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.152283164 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.800483251 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.904860119 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.77021816 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.843548668 seconds)
    (44/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.841787366 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.514652466 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.097723474 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.94842647 seconds)
    (48/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.932051388 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.845011813 seconds)
    (50/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.944136633 seconds)
    (51/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.928907513 seconds)
    (52/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.358744248 seconds)
    (53/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.173000083 seconds)
    (54/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.214700909 seconds)
    (55/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.084864237 seconds)
    (56/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.953377739 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.171132913 seconds)
    (58/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.846710683 seconds)
    (59/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.984601375 seconds)
    (60/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.009338728 seconds)
    (61/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.023901011 seconds)
    (62/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.82982406 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.426977593 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.937050209 seconds)
    (65/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.098663377 seconds)
    (66/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.9427672 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.813746685 seconds)
    (68/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.138412869 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.83421612 seconds)
    (70/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.126286831 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.908896184 seconds)
    (72/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.874523979 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.77361552 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.526985901 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.912113661 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.118738357 seconds)
    (77/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.939652909 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.830644592 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.047590989 seconds)
    (80/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 7.845721721 seconds)
    (81/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.978088604 seconds)
    (82/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.100652477 seconds)
    (83/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.100971408 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.138788012 seconds)
    (85/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.035420123 seconds)
    (86/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.274677139 seconds)
    (87/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.867881028 seconds)
    (88/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.459981376 seconds)
    (89/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.951528504 seconds)
    (90/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.028580441 seconds)
    (91/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.122324677 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.17398238 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.142114669 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.172774286 seconds)
    (95/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.946310468 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.509902832 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.234066814 seconds)
    (98/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.873588698 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.867264974 seconds)
    (100/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.831806304 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.473260978 seconds)
    (102/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.942190931 seconds)
    (103/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.746441739 seconds)
    (104/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.87270232 seconds)
    (105/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.12611482 seconds)
    (106/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.874542168 seconds)
    (107/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.834925989 seconds)
    (108/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.411487198 seconds)
    (109/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.154370797 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.564883075 seconds)
    (111/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.570518774 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.847705726 seconds)
    (113/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.027081423 seconds)
    (114/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.886811899 seconds)
    (115/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.021011123 seconds)
    (116/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.263014978 seconds)
    (117/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.394599117 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.950274068 seconds)
    (119/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.76609205 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.922502789 seconds)
    (121/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.167150192 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.189890944 seconds)
    (123/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.987164301 seconds)
    (124/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.833729059 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.100848552 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.043444445 seconds)
    (127/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.01188592 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.880081877 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.85000686 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.424399669 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.946660113 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.30240912 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.908624249 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 2.075323638 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.871534124 seconds)
    (136/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.993948609 seconds)
    (137/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.855272248 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.160152342 seconds)
    (139/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.308759123 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.861469875 seconds)
    (141/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.833720585 seconds)
    (142/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.126719955 seconds)
    (143/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.848230479 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.158977296 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.097751084 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.873908755 seconds)
    (147/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.081717134 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.042386 seconds)
    (149/309) benchmarking ("sort", Int8, false)...
    done (took 4.747935807 seconds)
    (150/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.058135243 seconds)
    (151/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.93873706 seconds)
    (152/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.986737015 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.858284037 seconds)
    (154/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.941598545 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.017182093 seconds)
    (156/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.990467336 seconds)
    (157/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.981917088 seconds)
    (158/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.934447059 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.264476138 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.866718739 seconds)
    (161/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.985578626 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.079727461 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.24084934 seconds)
    (164/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.876003582 seconds)
    (165/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.860722314 seconds)
    (166/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.974769292 seconds)
    (167/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.852793243 seconds)
    (168/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.149144298 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.561961324 seconds)
    (170/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.372422814 seconds)
    (171/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.190674806 seconds)
    (172/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.711310446 seconds)
    (173/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.903405225 seconds)
    (174/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.899604455 seconds)
    (175/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.85977132 seconds)
    (176/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.016796118 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.866831263 seconds)
    (178/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.968380339 seconds)
    (179/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.873366988 seconds)
    (180/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.917616406 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.707129637 seconds)
    (182/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.047289952 seconds)
    (183/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.853597478 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.447667475 seconds)
    (185/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.772379908 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.878805917 seconds)
    (187/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.853851969 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.941306248 seconds)
    (189/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.879458335 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.919527643 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 3.182040494 seconds)
    (192/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.957119664 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.95663697 seconds)
    (194/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.00000995 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.884968478 seconds)
    (196/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.926664655 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.855000529 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.865399834 seconds)
    (199/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.315597149 seconds)
    (200/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.957404303 seconds)
    (201/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.873080938 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.85290482 seconds)
    (203/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.552214974 seconds)
    (204/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.887415223 seconds)
    (205/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.915994631 seconds)
    (206/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.151007821 seconds)
    (207/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.855197062 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.971347749 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.837595854 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.958045273 seconds)
    (211/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.862331313 seconds)
    (212/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.263009984 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.369865169 seconds)
    (214/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.083895878 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.916742129 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.852766598 seconds)
    (217/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.24591491 seconds)
    (218/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.837117439 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.057476349 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.177235383 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.0310133 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.18528999 seconds)
    (223/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.990542079 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.672626681 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.051856597 seconds)
    (226/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.863467546 seconds)
    (227/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.854676481 seconds)
    (228/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.010415391 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.87124367 seconds)
    (230/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.925292323 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.998681658 seconds)
    (232/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.928114804 seconds)
    (233/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.856150678 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 3.46686157 seconds)
    (235/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.978284459 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.028177952 seconds)
    (237/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.727992514 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.879725629 seconds)
    (239/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.366556621 seconds)
    (240/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.844600635 seconds)
    (241/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.313214782 seconds)
    (242/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.885918851 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.678332457 seconds)
    (244/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.879442593 seconds)
    (245/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.976135924 seconds)
    (246/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.996788869 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.939908042 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.099890378 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.923977838 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.855582805 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.477904495 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.977209384 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.101640707 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.745661039 seconds)
    (255/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.990058691 seconds)
    (256/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.935592721 seconds)
    (257/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.054728993 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.954896455 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.843216449 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.539614453 seconds)
    (261/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.01552594 seconds)
    (262/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.842422439 seconds)
    (263/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.051920829 seconds)
    (264/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.035620105 seconds)
    (265/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.857732063 seconds)
    (266/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.922452061 seconds)
    (267/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.955727082 seconds)
    (268/309) benchmarking ("sort", Float64, false)...
    done (took 5.661355548 seconds)
    (269/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.856131359 seconds)
    (270/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.943995301 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.88321456 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.963018901 seconds)
    (273/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.883018691 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.811955343 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.197094546 seconds)
    (276/309) benchmarking ("sort", Float32, false)...
    done (took 5.613633008 seconds)
    (277/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.207153034 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.271064024 seconds)
    (279/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.23656993 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.860122288 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.876418119 seconds)
    (282/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.623286481 seconds)
    (283/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.230418938 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.8483448 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.88234643 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.238492723 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.951586574 seconds)
    (288/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.442258814 seconds)
    (289/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.974138817 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.969713341 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.150609809 seconds)
    (292/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.95359454 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.173383209 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.033270061 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.275886806 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.623713523 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.974007702 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.520004475 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.900475273 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.15365448 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.83136328 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.844533365 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.954105633 seconds)
    (304/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.038858996 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.166714584 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.846710171 seconds)
    (307/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.998869397 seconds)
    (308/309) benchmarking ("sort", BigInt, false)...
    done (took 6.860058251 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.87086854 seconds)
  done (took 1003.30765832 seconds)
done (took 1005.13156852 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.893918117 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889418336 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.871258018 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.893736825 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.984286625 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.903888228 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.880916234 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.87458262 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.919297022 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.921131055 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.872542018 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.902883541 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.875174569 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.874231576 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.872195137 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.888569247 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.189973012 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.901736093 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.890784784 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.882641881 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.890021717 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.873599128 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.923239392 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.902709097 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.875438192 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.875735584 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.877949644 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.893377341 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.986057452 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.87529499 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.875634819 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.886133687 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.189620015 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.898246122 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.867447789 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.894128874 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.885742077 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.882838082 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.878521611 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.90733325 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.283856572 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.910753442 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.878764693 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.874515881 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.873826146 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.877748925 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.87738883 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.878695479 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887932222 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88971444 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.27285125 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.927943346 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.877426808 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.8757133 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.884555126 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.875576153 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.877114552 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891502764 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.896562145 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.89293004 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.178174451 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.905448408 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.877211066 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.892817297 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.884868246 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.310967972 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.907583828 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.878933143 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.283714284 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.916584332 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.311108195 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.922381259 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.879066034 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.891044363 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.907590767 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.192267893 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.896964075 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.87454334 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.884820195 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.87487132 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.88554771 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.889583086 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.879738688 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.875767995 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889935417 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.906387824 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.886906397 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.877744748 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.884455844 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.897376173 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.884785901 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.888699292 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.879728854 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.87180678 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.885525026 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.879680744 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.879880725 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.87967516 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.881170242 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.888350453 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.281775089 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934615043 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.874494173 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.87384372 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.877362775 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.892715853 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.282195627 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.916323211 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.899506869 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.925106391 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.878780403 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.178970583 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.907127393 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.894528367 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.886237633 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.879896953 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.876574316 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.17886661 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.305816396 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.931279691 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.881162417 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.87646291 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895179249 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.880563466 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.874218386 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.194771489 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.905984315 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.894595434 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.000465523 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.888938387 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.911861381 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.87756929 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.882588288 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.910820722 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896514586 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.912110603 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.881795323 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.896172807 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.895540558 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.876631211 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.892149619 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.889698539 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.88045052 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.885693807 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.873410642 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.91119584 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.893638018 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.892979394 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.901884742 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.002471155 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.877192931 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.182136207 seconds)
done (took 294.97678004 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.946808664 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.866086419 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.974823639 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.875826229 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.954727952 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.960282176 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.872238843 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.872713577 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.872019912 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.247749181 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.872528558 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.882492128 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.871873156 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.873116274 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.957053099 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.876151967 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.872502801 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.214196473 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87615906 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.946807089 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.868093221 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.873171672 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.874839059 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.248398613 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.87105052 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.874725353 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.946529488 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.876416773 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.211898847 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.868074743 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.874762781 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.261166899 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.967720538 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.894280776 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.886230315 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.883108459 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.95747892 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.88096784 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.956610277 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.957067532 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.978200115 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.915914642 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.877251252 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.870625179 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.882903749 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.876841917 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.873915971 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.903754832 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.869846272 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.875193195 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.215760574 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.887464566 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.885101213 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.874865641 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.874432324 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.898598872 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.875620924 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.878889999 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.967638386 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.878574517 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.93990318 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.249674605 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.252271932 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.878876737 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.877640027 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.875303579 seconds)
  done (took 184.749545115 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.942888387 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.955940106 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.943910107 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.882096754 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.92784946 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.944217325 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.882413492 seconds)
  done (took 15.27600375 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.883780209 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.877666414 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930088599 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.931440833 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.877814968 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.0265627 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.878282637 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.890775734 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.876415991 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.930967757 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.880896566 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.879393314 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.88517783 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.871241348 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.929458431 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.891572983 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.996748429 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.88103509 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.879430958 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.031017542 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.876739978 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.885121981 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.933443723 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.891581677 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.880409177 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.885076762 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.473351988 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.879415312 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876719148 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.879359669 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.876451027 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.920871165 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.878887898 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.873480341 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.876907748 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.994484888 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.879867561 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.87867337 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.881234067 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.880668929 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.881002186 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.87998123 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.880180971 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.877807299 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.880837064 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.90335372 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.881304694 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.881166359 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.881906863 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.882955461 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.93283954 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.88222342 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.878416728 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.879088126 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.936461323 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888260886 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.88272724 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.878903168 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.883405379 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87951637 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.033699366 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.932960454 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.882163181 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.932787622 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.882676306 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882200795 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.881945292 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.882925048 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.980437743 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.883022261 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.932882165 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.880569631 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.040269549 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.905556227 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.882527039 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.885040349 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.884928841 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882827594 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.880850994 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.888609607 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.879035986 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.883926363 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.888944798 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.879960436 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.87985038 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.994763332 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.990906398 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.880543771 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.894959645 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.890486781 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.880353434 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.936546068 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.883192426 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.880508279 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.940089457 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.000717399 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.937787623 seconds)
  done (took 206.948211853 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.887499229 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.890550676 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.883734136 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.899201744 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.883153334 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.883046981 seconds)
  done (took 13.129310096 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.885208056 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.885808719 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.884013251 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.884534536 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.885094643 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.886250661 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.885429944 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.88607009 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.889141434 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.884852133 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.885054443 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.886348375 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.885438648 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.885949803 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.885172865 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.884344476 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.886684075 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.882189792 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.883974321 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.885364542 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.047009635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.885095376 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884574507 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.885562593 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.889278463 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.884575498 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.892862507 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.885087979 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.884849793 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.894543232 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.888112895 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.885040028 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.886462604 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.890565529 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.889974721 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.886475096 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.890048018 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.886188551 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.883249661 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.885969625 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.886135233 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.884792124 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.885472059 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.886626943 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.886493271 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.891144045 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.891282563 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.893214911 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.887445066 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.888208341 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.888206155 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.8880444 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.888763391 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.8870867 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.889638992 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.893171122 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.891519519 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.887527932 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.887508755 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.887714058 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.889387886 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.887689203 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889244467 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.892258999 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.883970569 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.887402495 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.885838364 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.890944323 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.886683517 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.886296803 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.887468165 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.884093056 seconds)
  done (took 138.839739098 seconds)
done (took 560.755692 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.052182501 seconds)
  done (took 8.85760587 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.959889798 seconds)
  done (took 8.809610168 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.387574665 seconds)
  done (took 10.207430883 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.908166261 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.894454047 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.889075466 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.877459072 seconds)
  done (took 29.400471603 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.03825556 seconds)
  done (took 8.845946437 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.904662365 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.877758784 seconds)
  done (took 15.627038241 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.998078814 seconds)
  done (took 8.806620583 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.061220521 seconds)
  done (took 8.900706635 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.900411053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.91300547 seconds)
  done (took 15.635169676 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.864951858 seconds)
  done (took 8.671969846 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.50180634 seconds)
  done (took 11.392137939 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.904121121 seconds)
  done (took 8.802816345 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.889706487 seconds)
  done (took 8.69846305 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.9103501 seconds)
  done (took 8.718199208 seconds)
done (took 163.179908596 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.886449843 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.878761154 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.876876007 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.879142498 seconds)
  done (took 29.328509518 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.922412908 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.923406052 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.926040915 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.932373162 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.925309205 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.921185363 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.914677181 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.91365011 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.938258268 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.92527834 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.922923782 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.923643339 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.921547175 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.915369117 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.925282535 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.925441441 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.933025706 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.924124774 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.916547031 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.926381174 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.889296362 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.933497397 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.926372379 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.890998587 seconds)
  done (took 47.926313868 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.089287035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.962356801 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.043560501 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.94875973 seconds)
  done (took 9.852323 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.941417889 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.944500227 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.954768242 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.993899056 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.015531756 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.952192336 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.915872311 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.912133143 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.898243694 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.946805151 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.019126309 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.939295928 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.04622611 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.890089794 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.077937828 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.890626489 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.891418322 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.943093175 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.995105386 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.013004558 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.891018649 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.943128232 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.949066643 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.939403392 seconds)
  done (took 48.713710509 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.888717374 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.896891725 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.895170548 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.890476529 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.890485327 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.891270513 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.897216874 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.892122972 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.91294919 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.892496596 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.890054316 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.890448028 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.888883849 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.890474612 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.889862763 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.902513955 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.902821148 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.890844876 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.894453348 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.896335345 seconds)
  done (took 39.695610368 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.883609347 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.738318009 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.236975437 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.139806769 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.883926408 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.885171738 seconds)
  done (took 31.578087536 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.905148231 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.898444418 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.891875392 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.94940967 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.031270012 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.895547172 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.891980694 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.902850755 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.940554053 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.95404427 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.911815395 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.921822449 seconds)
  done (took 24.907125057 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.887313514 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.917703022 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.885523206 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.923921283 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.903394234 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.900063776 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.89999177 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.886678402 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.902438487 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.911137133 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.899181105 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.904478884 seconds)
  done (took 44.637453175 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977748388 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.777819025 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.931172387 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.60969179 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.423626025 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.101454432 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411192149 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.232745183 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.894018063 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.162276329 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.9396452 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130527539 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14444874 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889942473 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.957964384 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.357531404 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186627792 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122057571 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913900192 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.663892583 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002881354 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449593196 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.650465285 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.008866117 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.102769393 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.027459251 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.149943261 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.852254488 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027161937 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925291493 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900026496 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890462858 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163758386 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.274832854 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018371464 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899743695 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.546487469 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.605307866 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.890182122 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.627881522 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.896598524 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.014015362 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898409333 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.890769018 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.825923863 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455963867 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239125023 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.893962623 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.593094618 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.890228983 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902152717 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981637576 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.894876867 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.70700375 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843978605 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.168410956 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.888455285 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897245756 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.462796385 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.031696461 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.545830429 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.830241334 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.983569928 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672203764 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.360594207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.044109721 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.895779269 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896587612 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828306528 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.621682245 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.009767498 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038384908 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.908707337 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54340579 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205893049 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.007612099 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967899664 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185450438 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.739378388 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.830728617 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120404645 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849714968 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827770188 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.750776515 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.827255494 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168504156 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929242674 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.578010889 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935407587 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.235012344 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902372849 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914488665 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901525386 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117768267 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.776831919 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89358535 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.705971909 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17014227 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912249221 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235196326 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82721123 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.89358571 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150164069 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.104834996 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.176317992 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.368118595 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061110675 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.891845351 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.976988137 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.84741208 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907271556 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.179106342 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955693397 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.026946043 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018474022 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.850763921 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207660793 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919508534 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.063810698 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.948581193 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15063555 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.22756715 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147969035 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978327754 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89640127 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894341074 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.685972477 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.51638319 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.120725909 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.896189873 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434176129 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.905685971 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.895699203 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829611355 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.554239192 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.953603533 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.996048967 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119281327 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.887868223 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170448216 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829096966 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042502546 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.004840138 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.114849495 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.548849856 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.96859731 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155621936 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424757664 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.180037444 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9079248 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914873781 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01506996 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917460465 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.372661914 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150537587 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.899552355 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.899317571 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.715731084 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.961552492 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901502333 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.901981559 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725806735 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183353319 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923821578 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896643944 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.832112866 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.910841967 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980664812 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902818399 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907233602 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.423926205 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.651748402 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.904479396 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.639829934 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147360099 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907773412 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.700993181 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080033112 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.989734221 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18030901 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9614933 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.832497283 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.600123804 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.600988782 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897546961 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834020297 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.897702755 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907534745 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908715041 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.121540371 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190507077 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943939793 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.630771487 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.00995976 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909477353 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.903755634 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898691581 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.400981615 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.045079181 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.551498009 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.907050168 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035143763 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.91349442 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.83428092 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902803512 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904350654 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899628082 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.865634327 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953188194 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.686111361 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357119252 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155920706 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.547590686 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91718527 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.706179043 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.023093104 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.922735029 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.723522537 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893546778 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.026106297 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958986705 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.910488943 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.686772853 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.679166813 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.472307202 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217162185 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.224346954 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356983691 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.320496485 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.228785913 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243866099 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135087458 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.431004965 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962471611 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247027583 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845024284 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991030607 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.554793034 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254785214 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914579317 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129570724 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301773776 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.788623359 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059801026 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114815128 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93726758 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.749685934 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.934650391 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.422908784 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059138298 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.798858659 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125361707 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244946338 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.718923522 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.00677864 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.901713454 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.607426621 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990730192 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.609460551 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.264313039 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.47044803 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.955503377 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401917197 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902224058 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.348400619 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260118291 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.258839392 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.999462797 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837001467 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.915009726 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.914687192 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.904177046 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.894021345 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.847175639 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.196081758 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913528989 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138305869 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.218561467 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173760965 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.812735059 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.908640023 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902977096 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215787653 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.615047113 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147125168 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.282241486 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.515492037 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922378864 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838243053 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838317579 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.605692821 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.903902598 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.87873316 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139374655 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.01721355 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862030216 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.322975683 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22106438 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.160548804 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.917485303 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.188912363 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.183518842 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.641265122 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933329926 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.005493696 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.723324635 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.654664337 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.127591557 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.140823981 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705376691 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132722659 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.969356964 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.887401093 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.903482738 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119708497 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.129212084 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.9640285 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154933824 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.630659402 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.91196003 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.280177059 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96780427 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.983548838 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.113406796 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.999725318 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916661185 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985842708 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916095834 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.917572801 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917701269 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955401923 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.960336681 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.034949594 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.922389039 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997385619 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.059055841 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.529990116 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.922300402 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193757457 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277893186 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244428352 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969863409 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.907032097 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907512842 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842646668 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043000557 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.353743381 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180598732 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.038053475 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.044836382 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933946574 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.732858943 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.222868057 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223962885 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182619227 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.802525772 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908138526 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993629381 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.133485073 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918395248 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.119072031 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148431319 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.240647309 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380152182 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.077293499 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35318606 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180239893 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.276062792 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.908846433 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497964007 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.912028603 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.66146743 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.951644182 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.957014205 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189767424 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918998787 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299979789 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.93349518 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.103976521 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.360974591 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.666309788 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270239548 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.911789575 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.973450682 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198270192 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31777904 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225801618 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990444087 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920881131 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.60816359 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046531933 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.887530178 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.175225002 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909899434 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121125371 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.622213215 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.920182371 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201866717 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221497104 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.907336528 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.893063118 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95460858 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.919192464 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134280438 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179835472 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165345661 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920660938 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.911582445 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.730415472 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195154913 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.968380706 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845545293 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.911182211 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010561713 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.16063072 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930655944 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.428149437 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.613102627 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213402158 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.832223428 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933424527 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345103882 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.35611001 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.243453231 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.442786887 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145206596 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47309335 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.794775977 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287903656 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.916170456 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344122145 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29239641 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.916943518 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.44888934 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025078037 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.187584247 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238162723 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.921759747 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.748720409 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.953306889 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137429376 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508947032 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853203591 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.914373919 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.974508278 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.909659771 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.046994726 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.921222277 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.907194662 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800379147 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.754781142 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.406720615 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.914520081 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.004457282 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.759910207 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.493090545 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021955125 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.070624159 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91563802 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.623869825 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.204423408 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16880757 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.438089153 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.985992207 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.917806883 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.915733959 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.843153595 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.108427199 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.110885376 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227723783 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.299557531 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.026099974 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918181814 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.129658588 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125966808 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.972424747 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068901983 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379140094 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028870413 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.844820678 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.629874555 seconds)
  done (took 1705.806685846 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.91993694 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.061256843 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.912250354 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.949378311 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951170763 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.982551176 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.971384149 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.982856423 seconds)
  done (took 57.571460349 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.915140051 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.11941797 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.924415505 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.916017055 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.936242172 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.916994792 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.730528964 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.928148643 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.93290704 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.928066837 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.918348146 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.919988358 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.303073086 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.943123536 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.917978621 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.928504324 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.936710313 seconds)
  done (took 76.023866864 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.921305185 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.265862458 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.953777591 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.93881527 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.981410806 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.921735013 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.056054102 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.951791816 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.921031071 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.103836503 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.25093695 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.925450422 seconds)
  done (took 91.035825691 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.935913736 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.925929631 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.925931648 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.925892203 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.92491792 seconds)
  done (took 11.491527739 seconds)
done (took 2220.394440375 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.187715824 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.164420871 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.171961754 seconds)
  done (took 6.180865709 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.068227179 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.117666104 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.235301198 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.241937038 seconds)
  done (took 10.512203386 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.213972214 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.306358525 seconds)
  done (took 6.365729027 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.26219759 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.944710804 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.346945449 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.917948472 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.91882394 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.917767217 seconds)
  done (took 22.604375632 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.923859121 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.926059098 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.92309163 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.92591336 seconds)
  done (took 9.543439782 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.904983433 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.643179665 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.904928778 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.91805757 seconds)
  done (took 21.215826652 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.672530266 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.048558608 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.668460658 seconds)
  done (took 9.234540497 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.749094713 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.834399712 seconds)
  done (took 9.428890763 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.171293208 seconds)
  done (took 4.015989264 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.952439254 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.195049041 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.479576974 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.490474078 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.571060726 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.772640976 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.250123282 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.159316058 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.382065102 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.399428723 seconds)
  done (took 25.499416737 seconds)
done (took 140.187446 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.276211427 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.950437208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.149951798 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.293083633 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.211772692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.145283743 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.045053389 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.303335986 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.842789767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.021963359 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.332069017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.157104458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.049731765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.94847722 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.057499691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.949012505 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.151354445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.322511593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.985668814 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.195194358 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.113713508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.938139675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.124745173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.954829714 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.156541872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.079859146 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.483587024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.942678235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.119675798 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.494369802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.081353532 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.333746647 seconds)
  done (took 170.058982661 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.924566199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.921240579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.92222722 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.920384998 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.454510683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.922557172 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.92167831 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.920630856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.140109394 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.12042704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.922289103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.443515698 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.921676383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.92095566 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.923827535 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.922018799 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.302097531 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.923245044 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.923921007 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.920527643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.923274385 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.285354878 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.923212702 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.305262428 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.257243894 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.925065825 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.92248999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.923855889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.923740637 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.92183381 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.924796579 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.927492739 seconds)
  done (took 210.306474393 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.879645146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.924220789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.923806391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.94222209 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.922380683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.923891267 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.925024828 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930624136 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.448036891 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.457551979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.925011784 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.945153993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.925046031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.92367049 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.926346385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.924069992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.924799889 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914862866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.925431564 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.924297627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.926559552 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.536314958 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.924164608 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.543741028 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.924709477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.924818896 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.92575963 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.925224537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.925258795 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.925874922 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.925792677 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.924302838 seconds)
  done (took 221.720993997 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.118279222 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.933822204 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.935721384 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.857720431 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.934638631 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.933365343 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.92833989 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.116509746 seconds)
  done (took 19.612749303 seconds)
done (took 623.552815348 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.450734242 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.300344178 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.118240512 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.959951938 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.213378727 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.999374638 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.955207046 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.021735732 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.683567277 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.029986943 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.640316718 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.974725039 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.728977014 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.984011871 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.082660936 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.01085605 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.504154233 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.590049031 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.134570554 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.049936282 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.135433603 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.916427085 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.041956781 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.729234439 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.755674041 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.96654779 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.143632322 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.509542057 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.964884823 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.118829181 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.759398425 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.361371873 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.970015916 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.952453113 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.012798145 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.986896559 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.298645641 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.968098622 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.076915515 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.723630275 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.032373545 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.573678142 seconds)
  done (took 106.283908005 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.926336758 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.924762666 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.923111714 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.923048574 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.924617655 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.924135573 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.923743982 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.923080599 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.924021262 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.923691899 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.923547605 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.925098587 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.926156957 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.925681893 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.923715558 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.923434966 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.925279642 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.927186295 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.923825457 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.925176055 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.925529418 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.923582318 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.938541162 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.924404393 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.926216512 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.925776314 seconds)
  done (took 51.921911583 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.938853683 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.106336707 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.181303039 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.95805659 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.940127785 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.94192878 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.958413821 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.945066256 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.940213096 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.940501775 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.047259169 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.944923218 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.959860718 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.183770335 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.959534936 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.940315443 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.940029838 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.939270147 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.114296752 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.955622929 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.958681866 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.943335744 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.95756905 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.954009284 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.940059022 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.940431958 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.942588182 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.387841019 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.949879221 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.047776189 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.989778759 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.964896491 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.312436362 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.193051391 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.996692742 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.947408092 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.942918805 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.04949437 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.947484396 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.940736307 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.960897565 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.946344342 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.181456482 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.435600536 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.953757831 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.943190209 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.400648287 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.05700896 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.980651711 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.950528227 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.184076973 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.957917542 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.943724463 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.941960004 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.977767836 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.947564478 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.942582283 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.237377071 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.954120781 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.961980332 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.945555345 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.942188953 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.121037152 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.948391988 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.108242261 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.949485692 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.950599196 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.942422571 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.18389196 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.960108649 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.438640858 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.956571043 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.944840996 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.051789054 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.109363402 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.428206186 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.954727451 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.120298248 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.328764049 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.969808307 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.950947347 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.378851096 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.974898416 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.950474218 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.946441927 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.947080197 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.946377497 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.989507009 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.962424523 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.374265023 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.441849035 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.257219377 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.974331067 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.960991898 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.947332323 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.238874837 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.953029797 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.944576119 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.181126344 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.450668639 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.961256625 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.953841597 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.428723069 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.959574774 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.966270521 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.954137406 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.18936619 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.960287063 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.993490378 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.945707842 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.952228854 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.946701601 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.966423758 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.953051895 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.946233079 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.419794706 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.07416134 seconds)
  done (took 240.559298669 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.94123331 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.938533644 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.937560694 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.940609472 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.938800856 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.944648601 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.938355982 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.93887364 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.944813289 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.939037881 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.938835807 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.937896395 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.939925474 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.939683255 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.087054581 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.94675077 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.548053825 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.943019275 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.939826317 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.94008776 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.60224917 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.95101067 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.958360241 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.936553814 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.94300062 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.940499341 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.943605377 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.075932158 seconds)
  done (took 169.782201938 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.947083338 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.061646938 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.962300906 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.974202001 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.954161007 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.944698433 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.969654913 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.96315449 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.953881827 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.943907587 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.943386541 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.007048648 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.955879372 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.044740705 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.976044249 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.97519686 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.050031947 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.953233654 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.945518616 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.944347819 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.975584452 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.940653256 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.007542653 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.076172877 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.963479278 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.063789721 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.950028428 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.947729137 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.948385292 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.064946743 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.960646446 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.007733322 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.977664194 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.96517804 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.070036853 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.062981092 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.053569225 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.975118753 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.951367145 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.947093595 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.946749258 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.935260917 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.065362692 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.966132914 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.94968721 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.055012632 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.965629639 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.949938584 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.957766517 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.945967174 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.961952278 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.967099054 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.015870764 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.077784217 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.98075495 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.972808125 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.973170103 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.24101856 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.961080275 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.049147865 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.940761301 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.068115649 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.968690334 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.937372624 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.949778237 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.955699259 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.978793327 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.983281012 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.055877441 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.956866393 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.051105191 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.983878949 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.957005477 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.950338484 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.952750684 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.066344256 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.067251114 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.983372199 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.989944666 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.981972041 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.946175928 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.950576473 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.939114542 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.967418907 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.952353333 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.066058708 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.066135841 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.955222241 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.953717467 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.951478952 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.953124874 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.975175128 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.078941276 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.984187713 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.047450553 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.016752914 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.021917868 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.962077775 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.964227925 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.955828918 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.014160176 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.964136216 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.961259202 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.294705069 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.024640512 seconds)
  done (took 210.933560263 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.399229318 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.003763246 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.007290431 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.280992104 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382909195 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.800926859 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.996746581 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.000418404 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.025354636 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.184409445 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.068897524 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.02296297 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.985854998 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.973134991 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.997978689 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.020099638 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.022182815 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.320560284 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.119257931 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.074836758 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.981047575 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.290475385 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.320590191 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.396601512 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.034496245 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.351805888 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.679319023 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.140202989 seconds)
  done (took 63.758060033 seconds)
done (took 845.090780615 seconds)
SAVING RESULT...
DONE!
