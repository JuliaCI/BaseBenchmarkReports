cset: moving following pidspec: 9188
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.493349947 seconds)
loading group "string"... done (took 0.486452599 seconds)
loading group "linalg"... done (took 9.380347408 seconds)
loading group "parallel"... done (took 0.167566564 seconds)
loading group "find"... done (took 3.167041286 seconds)
loading group "tuple"... done (took 2.124254807 seconds)
loading group "dates"... done (took 1.420647282 seconds)
loading group "micro"... done (took 0.201486674 seconds)
loading group "io"... done (took 0.519965531 seconds)
loading group "scalar"... done (took 58.964675768 seconds)
loading group "sparse"... done (took 14.364462634 seconds)
loading group "broadcast"... done (took 1.314819851 seconds)
loading group "union"... done (took 10.704785701 seconds)
loading group "simd"... done (took 3.824813024 seconds)
loading group "random"... done (took 13.761869866 seconds)
loading group "problem"... done (took 2.301430772 seconds)
loading group "array"... done (took 24.449648383 seconds)
loading group "misc"... done (took 1.140032532 seconds)
loading group "sort"... done (took 3.801540837 seconds)
loading group "collection"... done (took 22.056859371 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.717979196 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118364996 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201087215 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.197652763 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.272467573 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.169629407 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156882672 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.126039298 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.606479283 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204455785 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135692087 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.368421123 seconds)
done (took 6.043957762 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.343936386 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.062071797 seconds)
    (2/2) benchmarking "String"...
    done (took 0.198803507 seconds)
  done (took 0.967299784 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078010167 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.1625316 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.110500743 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096075928 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097021285 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110792953 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095271943 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.110319391 seconds)
  done (took 1.48225768 seconds)
done (took 3.574758413 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.512136999 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.960967954 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.561046332 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.188538216 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.374167305 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.311514667 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.265159696 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.230325176 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.088725036 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08469229 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.195708663 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.463356651 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.405692197 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.03443428 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.071148546 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.096714152 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.165510346 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.849214259 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080304904 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111569056 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.522594391 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.223201949 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11478789 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.10872694 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187043881 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129565481 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142375176 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101872369 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.72423058 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135898539 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.215664102 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.085097702 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.146065301 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.162800187 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.216489499 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109315889 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.772309575 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202779379 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099139204 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102060499 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.734705181 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.126893368 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.208941523 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104095157 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.069138004 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.171961951 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.114147399 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078449612 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093281238 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101991085 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172373279 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.503949736 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107600062 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.203293636 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092428871 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.776407785 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.099068843 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.285632486 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126135853 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.095961749 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090108102 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088221433 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.168565294 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096674765 seconds)
  done (took 20.99892186 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.195123442 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.210914653 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095021729 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144728754 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.142626192 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085339848 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091817011 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097206242 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.116751697 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.198588933 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.128666071 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.218453353 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075134155 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.108056753 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.16868719 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253515317 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107509028 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122123927 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089149362 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.094759205 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.14342696 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095401165 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095266989 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111950207 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169382682 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206253124 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112357032 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125552708 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091942134 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100764863 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14645098 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151815032 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094366761 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091481454 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176790219 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125916456 seconds)
  done (took 5.503197081 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.243353712 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102490054 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246846942 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.190419444 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.127251362 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.180965638 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.193174272 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.30497946 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.293629727 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162611456 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1308188 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098170747 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082115618 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082612103 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.104793827 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.827933114 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.174782657 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.143523977 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.185906458 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114005484 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081208043 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.739470216 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086448848 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.104093766 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095857845 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082117059 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.227689712 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094049876 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.48638949 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083576411 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095971741 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130738045 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201194069 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139045218 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121144412 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111417026 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.084750296 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.208864903 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.100069601 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077968282 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.09533881 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116629145 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129357199 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.106029409 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.104723098 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.133278636 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088850243 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112339387 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.093350291 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196331974 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.188137696 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103691528 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.279757202 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106646803 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119650443 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.090822892 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.813211453 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.122888359 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099473708 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081963721 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097418338 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098347902 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.825985837 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104013625 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.345847209 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08140459 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159492225 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.1779277 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113313476 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117363678 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086842827 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087926933 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127518793 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088754812 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080229083 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.104696383 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.082709949 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.090882153 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.133884026 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.0859439 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097899401 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.087473605 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150404201 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.113794676 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109744022 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126287826 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.092183375 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.086566017 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131427499 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084925163 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107809568 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085988937 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.208583376 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096410113 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102893393 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112969792 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111437392 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128763993 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101252855 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.339763429 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084270327 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126044232 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101244793 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128042647 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.096862332 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085678957 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.104553584 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081000446 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.083345897 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.162513592 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089055575 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08324364 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.090067667 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114172648 seconds)
  done (took 28.367444775 seconds)
done (took 55.567431482 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.442057429 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081193654 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101565506 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.082404281 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081648959 seconds)
  done (took 1.564704872 seconds)
done (took 2.317182044 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.303833505 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198991939 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087719479 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188069598 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087685691 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193840536 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.163005897 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120589567 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208070034 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.085090548 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189731641 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086380902 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086246424 seconds)
  done (took 2.777663231 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106911167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102156302 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10602674 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124723488 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088717376 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10518842 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12332674 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111783765 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104100567 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118196585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089222081 seconds)
  done (took 1.933179811 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.103371911 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099789921 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095538252 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121188291 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088849096 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10211468 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120109584 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110077275 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101470989 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116888999 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08905534 seconds)
  done (took 1.901564568 seconds)
done (took 7.36173792 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.203845559 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.946710117 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.182042917 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.251087974 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.342753525 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.307375868 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.618409649 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.202772266 seconds)
  done (took 15.940107672 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.235256892 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097583232 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09964098 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.094498828 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.114811669 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.099959086 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.094174792 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.116561761 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095404302 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099030811 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.118979495 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093663772 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092728428 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.098496172 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.115904175 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.095305147 seconds)
  done (took 2.582810888 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.140774564 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120179341 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.121164435 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10328913 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097628306 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.122467256 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104754486 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100204677 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118071546 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098696736 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105203998 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.119446575 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100957087 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.096819622 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.119603289 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.12029417 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.098853153 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.119351127 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120368979 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102684485 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.119947881 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099047692 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099855655 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.120397088 seconds)
  done (took 3.513510867 seconds)
done (took 22.791544121 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146600937 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087845014 seconds)
  done (took 0.993814835 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.173108699 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.190225388 seconds)
  done (took 1.129909989 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115436089 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09415221 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.141972649 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.1071118 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095583588 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.112207592 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121780623 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.09510075 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.113433493 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095275817 seconds)
  done (took 1.86266782 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09881717 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099579497 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127411477 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.16513253 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.121412608 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09656417 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09873742 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.117075942 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100915157 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09294104 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.118863783 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112617796 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099068028 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.130772482 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099299725 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.099521351 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.120924134 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097431202 seconds)
  done (took 2.769256092 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.095814784 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095420274 seconds)
  done (took 0.960961973 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096960257 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092790688 seconds)
    (3/7) benchmarking "month"...
    done (took 0.095756176 seconds)
    (4/7) benchmarking "year"...
    done (took 0.114313267 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093724495 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093833499 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.111630994 seconds)
  done (took 1.470209353 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.547225372 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.251336 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.390133561 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076392731 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.126083188 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.312134156 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.123816947 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073896518 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091903857 seconds)
  done (took 2.799539851 seconds)
done (took 12.752618908 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096465071 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.215230676 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.618171672 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.133153314 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095048151 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.151393559 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.351836841 seconds)
done (took 2.43619716 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.350216444 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.187333256 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089492366 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095810273 seconds)
  done (took 1.491133395 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085636189 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102381002 seconds)
  done (took 0.968738533 seconds)
done (took 3.237681068 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092867329 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091997204 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.091465681 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.110759134 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.091598029 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091838048 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.136501617 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092587492 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092523958 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.0920938 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.113128902 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.096550743 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091763539 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.114492643 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094041765 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092823461 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091954253 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11246485 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093633655 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093167334 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.109470252 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093381922 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09182737 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093163978 seconds)
  done (took 3.180018772 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.116042631 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094892418 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.115585863 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097576893 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.097645816 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.241211023 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098295651 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.095788336 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.115813107 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095653032 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097970677 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0978156 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.113480943 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.098328461 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093875704 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116383426 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096993038 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095682439 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113494817 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097554631 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097105358 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113975833 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09938755 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097262265 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.115966216 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097346995 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.094011287 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.113708305 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097240167 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097219223 seconds)
  done (took 3.994103443 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100133161 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090936572 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.0926125 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115973795 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.087037188 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091541453 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104897617 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090585174 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091690438 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090225031 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110365488 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091772982 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091720171 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109102543 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092698081 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092504659 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.098188903 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.11124866 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.092221468 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095978432 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.11426874 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093798956 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094370775 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.093486159 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.112467533 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091094983 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093221605 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.111155378 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094508066 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.093838932 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.095222291 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.115703791 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094126253 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103574104 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.116778944 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.094341669 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100117937 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.089778029 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.115682334 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091436507 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.089596807 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.112905222 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09393262 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.099300517 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.09338661 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.114705194 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.09392224 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094969126 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.112335362 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.096316852 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.091160954 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093373593 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.11587099 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096300549 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097124496 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.109273155 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092867759 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.091136018 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093792488 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.113469969 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091061326 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090491788 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.117230754 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0948441 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109460195 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.119485673 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093712561 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096274033 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095000392 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.118595224 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096051379 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.103675248 seconds)
  done (took 7.957139915 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118253435 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104051506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.114728138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09594336 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094979911 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094066017 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119547642 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094229469 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095452965 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119033858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094350173 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096021558 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115148243 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095528844 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096267326 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09565536 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119667258 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094723809 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096232365 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111629476 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093018228 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09600616 seconds)
  done (took 3.04226034 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223467827 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11613024 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140236022 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121824593 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108995273 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122382625 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.096113655 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097307188 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112483591 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100558193 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101069944 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112669899 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109403255 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100024576 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11844711 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101158024 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095118096 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.11816791 seconds)
  done (took 2.883727119 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.108592773 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095269656 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156360138 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093132187 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094425986 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112196891 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098771089 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112145484 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111022756 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093511287 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099868569 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111727728 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09359129 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092582868 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093146094 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111473045 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093906593 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093798444 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118142881 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09960116 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097982963 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117156915 seconds)
  done (took 3.086470518 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110673301 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094673502 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128970054 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096775893 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092613248 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.091465296 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116779045 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.093377565 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098969334 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111456465 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093195935 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092490746 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125711619 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093497709 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099457771 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112222174 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.094155846 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093250569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110837206 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094749372 seconds)
  done (took 2.835433943 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.191339819 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127294248 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109767965 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116966484 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127821119 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108524948 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135209154 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108848563 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108526001 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137150433 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110130401 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109800907 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134545255 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114286279 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12779669 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11758795 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116298065 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137202641 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108415501 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109453131 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138992571 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10908558 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134729531 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109803703 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110510549 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12712442 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.109592767 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114566053 seconds)
  done (took 4.204822997 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096487175 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095727912 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093198617 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110048534 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091572658 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091833454 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091125311 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110362544 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091676584 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092587588 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109559505 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091691155 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091291882 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091765258 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109424837 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0926774 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094431967 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092489976 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113568346 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094664639 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.091856613 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109476702 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093433954 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091843518 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091167165 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.11119933 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092348269 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091450747 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108521577 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092976746 seconds)
  done (took 3.71798377 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109350017 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106377691 seconds)
  done (took 1.012501995 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.104006626 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110903993 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.094708735 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116651405 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103284159 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097077687 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.124649419 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100499387 seconds)
  done (took 1.651085034 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.190546749 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.209984525 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.116831242 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10495289 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.209901925 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.188595008 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130909284 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096397047 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112338926 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086374029 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.202807059 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084070627 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091002798 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110165256 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091196848 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097012907 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.114337816 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104195927 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102700623 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.113720214 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098377609 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09877698 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113030966 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.10515233 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086906225 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.113959698 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097212612 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.104242412 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108604745 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.094828739 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091357236 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.113498853 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097387248 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097842203 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092712602 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.206229053 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120779214 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09093467 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094863983 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.118568243 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127873921 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097890792 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.119593631 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.095983066 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102429978 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.120940069 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104675399 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09902712 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.089249112 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.113804008 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098221194 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091939711 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.117957 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097801015 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.097672467 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123204547 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098995847 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.094534694 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108678475 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.091282652 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093773275 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107395341 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095131759 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097537394 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112200153 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094165965 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093024462 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.093005199 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.112165032 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094885662 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092004707 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126844463 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093100779 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097578875 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118481279 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095676475 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090560508 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11690799 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09292329 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093440196 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.116160179 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122018988 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094944141 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107188828 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089183278 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099480447 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094482284 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.116304585 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085713583 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101059161 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.115502143 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094722437 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085837686 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110385743 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.090168631 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097123276 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.105034293 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094282164 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092366831 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097174877 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118688632 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092571339 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093638139 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11775908 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099833739 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092217891 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.163195046 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090419 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.110307899 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095481576 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098033112 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087053704 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.112861232 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093016658 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08960565 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.110036058 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.098372203 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093175591 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.116076216 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098287382 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094957915 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113102584 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096635831 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09438056 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089186248 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.116956444 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101882925 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.094695195 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.115098223 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094638743 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094231816 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.113071222 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.097527244 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091267762 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118636097 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090049099 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09441086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094330807 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.119186382 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093498367 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.088833781 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112237555 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094411622 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092624764 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.116623331 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094536432 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089701593 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104830638 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09459691 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090366042 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.114757204 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103076745 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089723264 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.094663218 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.110342502 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101929548 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090382091 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.119336729 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097297419 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099458536 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.119701921 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087688277 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09092759 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.118104897 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095246128 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.09016359 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09514731 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.114812466 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100032619 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086554029 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.116646089 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086402778 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.089807757 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.118551998 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.09665514 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097092233 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.088973716 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.151447662 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105721896 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117892296 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093844095 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092786263 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097983924 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.113604934 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097930864 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099579953 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.118872621 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091175907 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091773998 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11989329 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090824232 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095566511 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112220964 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095535554 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086634874 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.096111753 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105884902 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.099437665 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095927766 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.119650906 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099922191 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096335712 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111805738 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102947409 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089230802 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.118946178 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087034072 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098545724 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105246257 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.121811185 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100432106 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094226098 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110725059 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096211248 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103565123 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.117678709 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094892517 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096146359 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106869271 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087263032 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100054723 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096865826 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.111227764 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095418502 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095845436 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11555786 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.092044332 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087547112 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.118257039 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09791872 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090011763 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113437729 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.094564829 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.092460941 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121222866 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086917166 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090093582 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096304339 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.119599163 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.094565429 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094845185 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.118266349 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101773475 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097409827 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.117541178 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091794982 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102550744 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.112885802 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094142575 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090152295 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097286325 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.108204602 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097803274 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094291915 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.111095936 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.09195195 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097901358 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12069359 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100731533 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093495689 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099348865 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.120910165 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100587131 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091583964 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.120846667 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089356897 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08710436 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.111105434 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088102157 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095866503 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.110791084 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100280854 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09307387 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093991864 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118988983 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096240927 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092839292 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120894558 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106054358 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088403067 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108841305 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092694387 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095046445 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111893569 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092116443 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097079062 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116921438 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099530268 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097621919 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111541294 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095018321 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.101787729 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092411543 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122084505 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101262225 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101644722 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.11124086 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098089118 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101137612 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119869708 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088905639 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093512603 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114641015 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094720508 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091800031 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.11375835 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090964457 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087577804 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09158663 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.122107728 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092795993 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100421378 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.1148167 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09218433 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.091584005 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112113536 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102889137 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093267094 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.121783168 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095910033 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089271919 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089228536 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.1210274 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093988662 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.100493994 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110456291 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098873421 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10099666 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.119256001 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096259911 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103263017 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102775196 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.121531208 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098592169 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088226212 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.113141296 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098727362 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095382883 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.130347903 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097226782 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088196534 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117234812 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10087424 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096321639 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.114004363 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087769425 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095619436 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102175901 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118820452 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097803587 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.096462642 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115786749 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091428218 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099674864 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.101642718 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115378575 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101892358 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094624825 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.120743804 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.092420471 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.1009276 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117619751 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090499189 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089193207 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113236424 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100689406 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089643435 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099728657 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120638849 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092885715 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093533239 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120616343 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091850955 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09818856 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121714266 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092324406 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105274498 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.118445546 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093596116 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10040807 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.100182631 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.108976611 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092965464 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094645795 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.124263274 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092853343 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100471615 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115278656 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100688311 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098751267 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099606837 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.122184195 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100370436 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.089277207 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.122196345 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098283872 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097512118 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114613103 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093505449 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090917372 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115297922 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102640712 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093390304 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103350828 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.120524004 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093459513 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093640447 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.122202578 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0932807 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102940659 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.11326801 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096068299 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089050522 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.117784579 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094003314 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102354301 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.113202913 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09014292 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100292482 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099693837 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.119876833 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097042398 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102229567 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.109940036 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090266822 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098485379 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113687546 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105297704 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098282126 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.113906625 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094939318 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097855602 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098042444 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.122615571 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090033597 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092563968 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116411331 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096505121 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093903154 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.110588141 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.09996925 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094518827 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.117562365 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094537756 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08994598 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09405418 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.123134822 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092555733 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091458703 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.114157132 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102540054 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095862037 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.112752678 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089630774 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100394096 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117916662 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102901907 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092469789 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.116741343 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093665038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099219718 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103045762 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114489817 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095184462 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094228224 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.12167605 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101160982 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088131699 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113594927 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105277683 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101873557 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117579141 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097819024 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094582116 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123919377 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10340366 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098143274 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090254352 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.110850867 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093729945 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089663829 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.118306928 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10135969 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094045781 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113346626 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100551387 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099336467 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098146137 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.120996858 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090487833 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102674424 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113545251 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098776791 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089200554 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109700735 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098790024 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100429294 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094114838 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.117058389 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096619835 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098125978 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.111570125 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093460012 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099077814 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120480711 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.10135659 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095109047 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092651286 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.12045553 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105816951 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098056954 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.114989942 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102540037 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102392318 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117453784 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095122428 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.101898685 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.123826246 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098512543 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101774445 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.11328291 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095804784 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101772315 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.123389196 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106017501 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094430648 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089011357 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120959884 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092974878 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090475131 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.120259753 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102974582 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102025148 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116560726 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092191528 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104164696 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121175482 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096174077 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093499457 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11391573 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099873234 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092657271 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09822031 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113922778 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102040587 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102563641 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123288626 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103846582 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090150666 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122150545 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09828944 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103771865 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.118603756 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090407701 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089454313 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097324534 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.12439424 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101630519 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098929863 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.120069683 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100481012 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095490865 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115559493 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094125913 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101609212 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101032861 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.118561194 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097706878 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093810256 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117088901 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097948404 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102005876 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.122638493 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096947881 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105515144 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.121190275 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094313117 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092554713 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.095609704 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.119808853 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.096170856 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100159965 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.11394723 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091192515 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101363004 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.124683187 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095947416 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103188779 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123894474 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09471184 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098330764 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104062061 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121341883 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097368508 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097272775 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119555352 seconds)
  done (took 62.541648771 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150658003 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105026843 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12019405 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098835526 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116604453 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120969058 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097517839 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100017404 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120063769 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108328151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.099209173 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11888412 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113746434 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119624695 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136959524 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108798822 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097842039 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121247374 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098857589 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099287859 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134137699 seconds)
  done (took 3.236989185 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.121578492 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111783064 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129759906 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112173062 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10368393 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.131822175 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108818594 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130335513 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113259486 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106499483 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133539148 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108909688 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105290343 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126550495 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107274189 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128310209 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112312525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105756687 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131174149 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108552427 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106844469 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.13076768 seconds)
  done (took 3.424733492 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.13285237 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103286919 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097276135 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119107209 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100363419 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098333997 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121959385 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098524604 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107612719 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093350317 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.11130649 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094874512 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096855892 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118202167 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091809198 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098760186 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128187967 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.10077598 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103596445 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098322724 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110394748 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09901029 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.10050717 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110229135 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10442602 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103833934 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.099485437 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122878104 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090175701 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101762564 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.119411212 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093408902 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089868175 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.089327924 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110342815 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102681504 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101924442 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119197547 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099818945 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09017499 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099357495 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123805529 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090522816 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100088931 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119756685 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092478743 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101862038 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098584078 seconds)
  done (took 5.852684532 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.131432168 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.156276436 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102416179 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128472107 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135636412 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107893565 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102881556 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129223002 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101297962 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124288131 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115072768 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.113424763 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126616396 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105662552 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103905508 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.12441015 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104791411 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102658223 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.127936027 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102220555 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106123034 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125789189 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111578374 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.111146171 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126969468 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10295508 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102597633 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.127730767 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.110734064 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127710271 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107301474 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108329437 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.134208101 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104769026 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102516095 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124127542 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114317886 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10394391 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125312512 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100390365 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103175077 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125987428 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.105754054 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.115537496 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126500293 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103449462 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103490889 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.122741592 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111499587 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.104078227 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.132678039 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113042763 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104397481 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.126045933 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.361787897 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133846326 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104052784 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102755426 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104221785 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.133618442 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101321317 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105294479 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.135258684 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103315873 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.13024954 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.114896742 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105506236 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126795298 seconds)
  done (took 9.079061427 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135720048 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106243916 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136210936 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114455221 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106808687 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128373266 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106893107 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106061812 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128323432 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112373195 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107038419 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.239457549 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.125880066 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111157584 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106015792 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130061346 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107220539 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105941794 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130685551 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108346041 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106614027 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.137241513 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107620178 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134882071 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119508375 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103792371 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.128631409 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10678967 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11425827 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128128743 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118567315 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126794026 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107062689 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115083846 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.139969579 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106716709 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101291304 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129396055 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106979523 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.107243656 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125488929 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114852031 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108467673 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125908048 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108483166 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.106783171 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.137152864 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.118166201 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.133055112 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11083231 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.106856311 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135547185 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10736347 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106437222 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137393087 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.122394178 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136676816 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115332552 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105922988 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.135372185 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115930293 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142626321 seconds)
  done (took 8.319519996 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106928083 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100258381 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098796907 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.122510462 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099486466 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099275175 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099813802 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121284933 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100695565 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099642989 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121039091 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100709432 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099408522 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099964082 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121309555 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100937319 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099674611 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120062456 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101845051 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100183694 seconds)
  done (took 2.979930131 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.116347469 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118623456 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122074447 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108054498 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10250295 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.13009921 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101140666 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101891346 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101461444 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124391608 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112125002 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109659638 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.125682471 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108032667 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.109703345 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.130409787 seconds)
  done (took 2.692251585 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.124643002 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117863596 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.202794814 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10489957 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.126694106 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108379342 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101688039 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127423528 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101085476 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107087155 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.127908039 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.105308108 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102355679 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103242843 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.127097957 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104733047 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100840412 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128684775 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10194867 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.208433031 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10517953 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103590343 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125822017 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105504115 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103245747 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128875362 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106887409 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101502273 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125603049 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104210941 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104436949 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130513394 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10161598 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.108103801 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10324346 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126434434 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102682175 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.103965801 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127702664 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103526913 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.107371405 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125159728 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103464093 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104476444 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100332904 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124376292 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101003876 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107140822 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126650662 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105534795 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.102240097 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129829541 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107130639 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110192561 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131476045 seconds)
  done (took 7.214688412 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11936713 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105731807 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.138097113 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100372827 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103290283 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.103313595 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127378789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103631357 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104294766 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122803191 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.1045031 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104518583 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.125554573 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105067911 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104333737 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104011999 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122633029 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104044434 seconds)
  done (took 2.875852666 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111141016 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103472987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106638254 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.125676285 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102226892 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102805848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122970122 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101319433 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102119291 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.10164201 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.125232124 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102683178 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101828745 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125641208 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102820262 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103230948 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124783497 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100803434 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102413914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101101434 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126002954 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102987433 seconds)
  done (took 3.278507308 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.117137968 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.231222096 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10769762 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.237641505 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100128266 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123502447 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109376574 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.122776812 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.116725645 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.098695049 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.122223642 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099056385 seconds)
  done (took 2.465672695 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133504739 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140820052 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126999766 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105174175 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112276371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129982722 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106924888 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107686168 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13814231 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118447081 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129512203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114698947 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11448346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137114762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110795615 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11075773 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12875418 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10841796 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104087533 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.143325196 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107762489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138514539 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107459374 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107353187 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128986623 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11716354 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115342935 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141052749 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107072051 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137792086 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112869078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107631142 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137500683 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119495961 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124965674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116225264 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107641667 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144647736 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112212139 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115604165 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124767264 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112855677 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137041594 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113553394 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11602997 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130233825 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113345733 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107980973 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129883213 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12871669 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135124581 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116910207 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111629476 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138142546 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117613489 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150788924 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119110342 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136907477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113653615 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118778197 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138068053 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113578337 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138805158 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119620266 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11246449 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139193094 seconds)
  done (took 8.949212126 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145609185 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104316375 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130354704 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119929484 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116514008 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131179339 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108952772 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10739731 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131272595 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104283095 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173340404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108760486 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116797809 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13833186 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108517644 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129586274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108332232 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115876405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126803159 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130471139 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108618216 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138747584 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115689259 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139285013 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119502968 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113028941 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129755815 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110307735 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107930985 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130816634 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113336744 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130775372 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116336855 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104777465 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139455518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108355452 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108678286 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135365954 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110038836 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114180192 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137231704 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123149779 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130215906 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107690625 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119813913 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13202938 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108801779 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105106384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130385859 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104437582 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118768479 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142641594 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118957398 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13803957 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108319902 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110813151 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130500523 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110189619 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109663126 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134931253 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117222765 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131061507 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128966733 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109886612 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131263457 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116933648 seconds)
  done (took 8.895858299 seconds)
done (took 170.15278437 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.181358736 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.215884063 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.199329103 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164003408 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094421282 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.167192716 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13556846 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.203449097 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093911162 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094233505 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117007138 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096790869 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.205146051 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.116705343 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094242798 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.096397525 seconds)
  done (took 3.160267926 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199536117 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343594089 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.13333558 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098409741 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101096016 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099130511 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121208878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101001897 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099355759 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.12804721 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100935826 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095262521 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127460123 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09674136 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09940884 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122545214 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105146237 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099124393 seconds)
  done (took 3.168461278 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122261516 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.211385758 seconds)
  done (took 1.232358718 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.135779581 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.21584805 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297236433 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170853654 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.120687243 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140729885 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148557312 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133663601 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188870455 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135348887 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112621976 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097706332 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148918337 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105720867 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114642225 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120462248 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127974007 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114362908 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135746818 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10159182 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123356644 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.124452045 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105993702 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136445784 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179079731 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133760434 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103289921 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102810819 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.122932643 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113971657 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106388802 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139945343 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111908214 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180814915 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102617041 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176645983 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106227561 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.122833069 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115657142 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099574181 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.12575403 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.104074966 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113050909 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119808488 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103202259 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.106565922 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126969707 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103147586 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107886291 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.130132729 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107493423 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106325182 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174595906 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128860991 seconds)
  done (took 7.937192169 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.920857697 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147661147 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09942633 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.069543573 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.143866012 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113948735 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.90785508 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.147907755 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257265772 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.929058874 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115217576 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107079765 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.265775562 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259457667 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.277463987 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362022539 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.76952044 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.11130085 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131832187 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.166532288 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104579955 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139376144 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.116449607 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.457005665 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100324524 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099396153 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126608639 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10797571 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177916797 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099979452 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104239516 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.197255786 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.2954137 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215574009 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100334397 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122468746 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09987782 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.187876105 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.282141475 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222640499 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.167253422 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120684349 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098692463 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104766852 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138261357 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097112191 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183236587 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192490105 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169849951 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126563509 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10911613 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107068686 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125900761 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.180853335 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098744931 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.362434774 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361471679 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121373201 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106046007 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112330513 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270801287 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124898395 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243343942 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.121417423 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219247777 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123220475 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.866165526 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.164668298 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122381088 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.103867731 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105243934 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128223306 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103393176 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.182064204 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.408969896 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128733742 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104990655 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099582787 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231475456 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099801572 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123084997 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180503746 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101239823 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1060149 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130576788 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106442044 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190940875 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.249816677 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12922092 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.10640764 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.12835057 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110179343 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100975399 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.237153867 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234751322 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179302314 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234022423 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.103899334 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184212543 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188003954 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105390929 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191559791 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104924761 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111127558 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125989365 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230374145 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135296424 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.124890385 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105253536 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106699701 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.163617921 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104465866 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128949197 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166443902 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.495509024 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.189280026 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097699263 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127433724 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106959564 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181552656 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10601293 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271403815 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106615095 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.188401321 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128611418 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097162577 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106412144 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181538247 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107546491 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130143356 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.103743537 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108461137 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.284788581 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223668073 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131882875 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249696674 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173256478 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127618041 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171004482 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130263454 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164458797 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133125679 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10396001 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1231343 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.853517376 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111580474 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106704061 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12830088 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18410714 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123737708 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102746819 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099995817 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097752997 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.839992697 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127717137 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097757923 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102173194 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127134135 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105390235 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106903465 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127009844 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158327239 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.274212278 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108978293 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105445183 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122166065 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158147735 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124479578 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100446024 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100858201 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123497293 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108046588 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105206055 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126591583 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167751927 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.17927323 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.233055122 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566765578 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123940919 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101050256 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243818518 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101018419 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.355999475 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106385081 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.238802496 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184523821 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098303164 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36080083 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186258672 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.206604547 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103760958 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194973097 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098844739 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105695282 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.180723197 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123210681 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107884801 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180278057 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108717952 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107441617 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.282620643 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101344061 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255389464 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.098415286 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190929581 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102368221 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106249416 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327956157 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124637555 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114228909 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18119951 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106223299 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123106632 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.947631118 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124101719 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109981607 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105622539 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.260928613 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161320248 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.130319982 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10756263 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132556227 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159292457 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233865993 seconds)
  done (took 47.000044155 seconds)
done (took 63.393396259 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.23006269 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167323266 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.353590507 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148218826 seconds)
  done (took 1.916760885 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.263182517 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164819535 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.243276409 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097403483 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.248743349 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097048807 seconds)
  done (took 2.040537954 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17476705 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.1647865 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.142765804 seconds)
  done (took 1.408386226 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.21267299 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.207809923 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.346542899 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.234600984 seconds)
  done (took 2.012929299 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.278510013 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115667451 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.125863497 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.226090418 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.242950085 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211615901 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124362014 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174999811 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130306307 seconds)
  done (took 2.599147989 seconds)
done (took 10.90163039 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.380372935 seconds)
    (2/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.142527986 seconds)
    (3/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.447133743 seconds)
    (4/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.286761232 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.34865002 seconds)
    (6/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.32246564 seconds)
    (7/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.440663822 seconds)
    (8/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203477056 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.234623452 seconds)
    (10/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.303543403 seconds)
    (11/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.339444994 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112533292 seconds)
    (13/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.156627029 seconds)
    (14/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.237448808 seconds)
    (15/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.259648679 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.109190708 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135125393 seconds)
    (18/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.134413304 seconds)
    (19/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.244584279 seconds)
    (20/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.199472918 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103240632 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109826693 seconds)
    (23/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.203092881 seconds)
    (24/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.1291354 seconds)
    (25/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.34395064 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.085995438 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101949313 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152232689 seconds)
    (29/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.117912264 seconds)
    (30/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.152371182 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.151266304 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.085112707 seconds)
    (33/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105910927 seconds)
    (34/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.186995058 seconds)
    (35/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.173503366 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.110653768 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.156502923 seconds)
    (38/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078136476 seconds)
    (39/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.170390674 seconds)
    (40/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.288440441 seconds)
    (41/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.078298016 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.128054758 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.149041216 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.321412344 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111715505 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110162412 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.146278655 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104510747 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.216890822 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.223780257 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.28889741 seconds)
    (52/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.173884337 seconds)
    (53/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.109877274 seconds)
    (54/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199030965 seconds)
    (55/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.112335033 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.106915622 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.132553558 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.139722432 seconds)
    (59/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.082238101 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.135772422 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.102015182 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.218414687 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10257273 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.127416158 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.132686201 seconds)
    (66/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111931004 seconds)
    (67/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133725514 seconds)
    (68/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.08254655 seconds)
    (69/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080011757 seconds)
    (70/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079702955 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.132167909 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12856985 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.082495278 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.102838974 seconds)
    (75/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.25530388 seconds)
    (76/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083474557 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081795096 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.103681172 seconds)
    (79/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.107331555 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.130085812 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.13117166 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.137731763 seconds)
    (83/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.270425305 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.106270515 seconds)
    (85/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.192723147 seconds)
    (86/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.21486521 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120536189 seconds)
    (88/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.0844659 seconds)
    (89/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099960671 seconds)
    (90/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128703341 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134959641 seconds)
    (92/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.196061818 seconds)
    (93/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080703231 seconds)
    (94/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122370224 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113422416 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.1304919 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125413519 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100403717 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.130080041 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.086905925 seconds)
    (101/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079662818 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1023868 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134421476 seconds)
    (104/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091106528 seconds)
    (105/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.09003829 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099921282 seconds)
    (107/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.203078628 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.112389555 seconds)
    (109/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.143361102 seconds)
    (110/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.079568511 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.152574529 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.08599922 seconds)
    (113/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111049913 seconds)
    (114/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.168184125 seconds)
    (115/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.20840749 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.220325003 seconds)
    (117/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113248394 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14698212 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.219434615 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.193374686 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.137055198 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086703335 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086285843 seconds)
    (124/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.082410916 seconds)
    (125/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.084084258 seconds)
    (126/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.104607961 seconds)
    (127/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108001668 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.110724956 seconds)
    (129/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.081212511 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.106813621 seconds)
    (131/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104873898 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103957273 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.147544582 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.13039495 seconds)
    (135/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.080180291 seconds)
    (136/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.14714932 seconds)
    (137/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.107752199 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104698022 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111829231 seconds)
    (140/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.079576314 seconds)
    (141/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.15882236 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105604307 seconds)
    (143/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086075829 seconds)
    (144/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.131448997 seconds)
    (145/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080092184 seconds)
    (146/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.079757883 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.103855514 seconds)
    (148/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.082038729 seconds)
    (149/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104173136 seconds)
    (150/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.087939449 seconds)
    (151/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.079252435 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.157594424 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.1263244 seconds)
    (154/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11410655 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087382871 seconds)
    (156/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099859544 seconds)
    (157/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.126080656 seconds)
    (158/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.086087508 seconds)
    (159/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081528679 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100812252 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.110101122 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.174063615 seconds)
    (163/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083677492 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109711068 seconds)
    (165/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.138442791 seconds)
    (166/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.111647339 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125386901 seconds)
    (168/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.103306011 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.079858038 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087471144 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080754037 seconds)
    (172/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.201007873 seconds)
    (173/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086722045 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.08302166 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08714414 seconds)
    (176/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082068622 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.111766774 seconds)
    (178/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.087716137 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082015438 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103267699 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079412751 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130073433 seconds)
    (183/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102037395 seconds)
    (184/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111420291 seconds)
    (185/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.103149438 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123882065 seconds)
    (187/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0810326 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.081595775 seconds)
    (189/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081782151 seconds)
    (190/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.105228251 seconds)
    (191/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082287431 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.087101943 seconds)
  done (took 27.572644906 seconds)
done (took 28.507269476 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.23104431 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13159804 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111061471 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110824153 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.234531551 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118479732 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.154146352 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11269176 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120529732 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.137655761 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101279014 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124361761 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.136171428 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.219532141 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141843398 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103256894 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102211389 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148019634 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127052587 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126919331 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.232830317 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129869459 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121534647 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.103413354 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.234300732 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103740634 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.136285724 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112585285 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.124242109 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111752749 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.138695382 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10241887 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127092176 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.152845678 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102558234 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.11102648 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125891492 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087772141 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112400714 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112531207 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.147603515 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113046534 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111794607 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127397561 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113165723 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11127744 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12755114 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.115195326 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101290372 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.137269182 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104153819 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126815334 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134031241 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.101579301 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.100990891 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.126078951 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.12269752 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103465869 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123949793 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126389229 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.103988762 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101726203 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137400397 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10284971 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111280181 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126891921 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113140828 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113972893 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.11008556 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129218497 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103475261 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110535579 seconds)
done (took 10.090420074 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.113409525 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146813258 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.247675619 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.252334261 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156335385 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.118968894 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116050707 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.151431384 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116555648 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120626777 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.16509778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134494906 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254605312 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11782244 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.1441157 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114547776 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113782858 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.138709487 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.249670899 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128455708 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124324917 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.14502719 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129501904 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.118940886 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.133044557 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.13076893 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.13778851 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115291908 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106503636 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123847632 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.150889857 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.107181997 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133189009 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125694901 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.124823108 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114983673 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.144153579 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114762285 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.130057922 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108029509 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113241902 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.146969381 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106873837 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119697915 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.14108254 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.124516048 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.113031574 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142057273 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108212387 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113770042 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107097095 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155553267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.118951471 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.14670854 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120411082 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.118682502 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143012321 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119633076 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110401992 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118577181 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.132639083 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107638122 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108402327 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151523557 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110216609 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.11924936 seconds)
  done (took 9.801204562 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.131613461 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137010321 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142510012 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118009368 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111792643 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126374873 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101172014 seconds)
  done (took 1.847113914 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.108457845 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.268009584 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.259088632 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.258940065 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.248134419 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.267128649 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126848203 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102251018 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165080282 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113832647 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.26838338 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.324276921 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.140838673 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119001404 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.262886212 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102625446 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.260825111 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102503654 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145518635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.262701191 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12065296 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132669043 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.142937501 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.1038892 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263073402 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103022477 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.30181819 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.147860239 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11372548 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11484605 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146022613 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.180277565 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263722414 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.144949808 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111109877 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.25993582 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.252463519 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117107262 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.334072679 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108232882 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.249896842 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117808917 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119419129 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144981722 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118140062 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.246549414 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121409117 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146298251 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116972245 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.273570626 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.11367795 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.264863222 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114233671 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.144354234 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.116046525 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118324762 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.153818468 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119045929 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.270105962 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146774758 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.230706002 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.259281716 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.254058846 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.258324799 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.15464764 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.265098867 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.211681017 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.144656033 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113279894 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118515365 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.260464539 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.145058387 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116091421 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.250928429 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121123981 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.262555318 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.264277258 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114416618 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.143992227 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107166673 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115438459 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.131445275 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.251871921 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118023055 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115580304 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149091658 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117974211 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.116833697 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136956911 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.128203896 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117723113 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.140828691 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.125275378 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116160598 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145138976 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.26827262 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114042916 seconds)
  done (took 17.777082369 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111845673 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105269746 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108135935 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130830153 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105534455 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105921188 seconds)
  done (took 1.677401718 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.147413486 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118590125 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.153273567 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118976234 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16580164 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.252882066 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.259787871 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139870358 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138594961 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129497586 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.254044156 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256359046 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.257127101 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121852924 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259207502 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119550301 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.260745473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143586208 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127273147 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116190197 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.143642678 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122313179 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116899241 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.244577875 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118837951 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148002753 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112365323 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126742788 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154400944 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112544364 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121307286 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145956298 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110290345 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.13722614 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.232412666 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138301148 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114517655 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121866392 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148624414 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118730375 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.259004249 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116006942 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.15229082 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122038459 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112827741 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.139259602 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122321064 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111310811 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259125619 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120342688 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.151073556 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119649926 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117644834 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.15109531 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110719957 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13975929 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123308416 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261234153 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12180952 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11053253 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147891423 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119973712 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112490188 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.150450343 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.119503018 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120037197 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.13842259 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120998262 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115640513 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.14593302 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122598704 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118114837 seconds)
  done (took 11.793703736 seconds)
done (took 43.87298547 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.633277144 seconds)
  done (took 2.638782874 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.091869427 seconds)
  done (took 2.10241699 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.224205543 seconds)
  done (took 19.266671518 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.428808174 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.351069054 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.018282691 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174965907 seconds)
  done (took 2.98395035 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.09923987 seconds)
  done (took 2.121499428 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.344680663 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.244511105 seconds)
  done (took 1.603705203 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.733230398 seconds)
  done (took 1.758706131 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.773108634 seconds)
  done (took 2.791043213 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.275138538 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.244449293 seconds)
  done (took 1.549863967 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.694919407 seconds)
  done (took 1.723152528 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 18.993213351 seconds)
  done (took 20.027001783 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259539996 seconds)
  done (took 1.297481459 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.296507735 seconds)
  done (took 1.331276175 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.648737991 seconds)
  done (took 4.682405038 seconds)
done (took 66.900336245 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.122852018 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.122944352 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121817053 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.145604014 seconds)
  done (took 1.534225678 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.12724982 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119090648 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121115636 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144090471 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124211703 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11685582 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143774906 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121693255 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116829348 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146574655 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118632345 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117294059 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.147729906 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118634569 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116630815 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.121463469 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.149138155 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11815378 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.140394353 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.145181996 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120138629 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118884331 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.147735452 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121910951 seconds)
  done (took 4.116460547 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119817173 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110062732 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110827869 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133489114 seconds)
  done (took 1.510622088 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.13129756 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131480061 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153799663 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126381059 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131271825 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155076686 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119169133 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11633256 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144298564 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126417057 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.13408615 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.158340933 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13024335 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119873737 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154923293 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114082939 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.120080286 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156966117 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125796347 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128423875 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146332612 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127196184 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123502326 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.153232148 seconds)
  done (took 4.260678752 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.198463004 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129214627 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.174455156 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164334737 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174624436 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117414352 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.14577238 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150063984 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124353613 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.118348787 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145250102 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166045106 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.123006263 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.147732718 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120846455 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.122503028 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.153925352 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122428341 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187962607 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122482188 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124413208 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.156126027 seconds)
  done (took 4.227888968 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12654663 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.10941342 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.107229098 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.132159297 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.12253247 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.110881741 seconds)
  done (took 1.746247966 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.114286206 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104213331 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103501272 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129267872 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.1071564 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103153547 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101487276 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12997386 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103609403 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103546447 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129422881 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103653125 seconds)
  done (took 2.37694628 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208246518 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147407386 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249605683 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384714269 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19005685 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188299151 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.279235358 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185422662 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176664982 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166077918 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209336032 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162287548 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154540433 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213857352 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139587561 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.187517349 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198938694 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209214311 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170187323 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215151876 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183307743 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202293025 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189504869 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17603418 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139893351 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190395792 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120826767 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129565099 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194530499 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162549295 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202580902 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177964082 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142094899 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212974918 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260993211 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17635676 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.26743966 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159561082 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17428798 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.214755426 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258564342 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141707236 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218203909 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1507151 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155559306 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217609007 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149766388 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.212666509 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134567949 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143042711 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212852472 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207525201 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168632002 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16316197 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.326134871 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134350728 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.140745997 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204784739 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214815027 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202110398 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208130166 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122066254 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201549898 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2182163 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243896091 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141965692 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.191170186 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125000246 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162828608 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232557663 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210667347 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158213645 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.218958969 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157169823 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172784442 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193150226 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155508848 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23558772 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171096932 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146565254 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149641502 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161549338 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126453303 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.18765842 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149311258 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245203049 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132430075 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.181684695 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207155431 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179797332 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161122215 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188626292 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161509505 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175161734 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.103303324 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143596126 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185642664 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157826547 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157317538 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150557316 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137594438 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.152365818 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15089536 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149967382 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169752152 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.163053301 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157375953 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198931206 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131101635 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209152075 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146665905 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.189588777 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167590605 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223200866 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131320531 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160646027 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219475998 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198797954 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136333499 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198326476 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226429909 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.153220773 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165054185 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165410176 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222747172 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142278995 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228317688 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13849872 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162325699 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.14050861 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20209787 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158198344 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.188044482 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126789068 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.194186419 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214188093 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126722629 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139382549 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209703345 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133370596 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153900921 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135746238 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135178578 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.171923955 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.149791432 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16752829 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153909668 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194929094 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165730211 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185310521 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135142898 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202321413 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13082278 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.197150374 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147304671 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146388492 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174055067 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226066499 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12875644 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208692954 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159745118 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209878592 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201217438 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129276938 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210301941 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127768626 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120699366 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190040261 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168439533 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.192115835 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.216562253 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17830961 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191582171 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.191245187 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148732502 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196326261 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.18371912 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184004006 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138092851 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20002004 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168460574 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.153277446 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125138079 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126842649 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16539112 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13083273 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163740014 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180908006 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192360271 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202859551 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166522667 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164652071 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190567624 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152342189 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159051847 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.202954577 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138540345 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.216917064 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189140274 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207753784 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138530057 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190788081 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119616767 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15477434 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.1339956 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185293524 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137023755 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133468855 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169656967 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190896861 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196561209 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146953691 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218440546 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192595284 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229494196 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.1214158 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161271795 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19324074 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168412239 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.209688779 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133421682 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.188383791 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193109162 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171102094 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189945476 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196488751 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20907885 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189710435 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193335397 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130695485 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172413334 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15935171 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166033919 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159679354 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140582973 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158284303 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147506818 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167534644 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139504757 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214865111 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142497788 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203472597 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15270954 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200893448 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124683576 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1710774 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173112348 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174475091 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.1068603 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195206807 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190606376 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178109887 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150737631 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197635038 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128839525 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.346422612 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179437154 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199531398 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134767799 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167126825 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170832784 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185287682 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157614614 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212057381 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13919734 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23816596 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.199043837 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13811223 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128432406 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174192419 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148710331 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.167629491 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.155300312 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.192819217 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143000119 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215518451 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135517175 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199144369 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204022597 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146686473 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148519568 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168050881 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256913972 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168590173 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200876812 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163895796 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191793076 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180638231 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152413059 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125693583 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130945204 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21386041 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128330398 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206474676 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192019599 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183307934 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201533304 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19001727 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141102759 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126003669 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19626438 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147545517 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212042155 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133461914 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165089608 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213898211 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128240742 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130069591 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188086786 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289990355 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172346326 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165819738 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.136753561 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280930052 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15560178 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132287635 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185963088 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16840445 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161744712 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181934968 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17424657 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170082864 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15631914 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164006672 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205657077 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182531982 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196472505 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174130249 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.174157585 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160277737 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187662695 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168938828 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175339804 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.14716012 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187863561 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193184282 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.201560212 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129793765 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198041227 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168780816 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200791795 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203002501 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139499532 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20973616 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126987904 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164592415 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166745587 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123772121 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188142356 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.166407113 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158157827 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170750755 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200066813 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129786874 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155951411 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146840879 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196036059 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141028381 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127862537 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214346964 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.157443581 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182764722 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238619204 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129504792 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199572843 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141551837 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130107809 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167904204 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142923098 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160653264 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174660553 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204892245 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130675916 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200579049 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166936089 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192630559 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153422565 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170285314 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.263843953 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126454867 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220555238 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149320073 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225748226 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177415522 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176124431 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198243055 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148894616 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195438796 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146689141 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249212032 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165957439 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.197773446 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131653879 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171300702 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137380343 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132924631 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180488533 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167539261 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170894675 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135760423 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.197035798 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145728064 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.174106243 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141087549 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229494748 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150697321 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216719225 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184436594 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167659255 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175236792 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206474251 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127319093 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192560246 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199700359 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143715521 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151102137 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.164228059 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136608925 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244223295 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125726005 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187738513 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175131845 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197753827 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172832654 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.163330251 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179011215 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169670008 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175545351 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155630014 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15048563 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196954054 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133967266 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126381413 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201708063 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159730878 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.19385836 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142578136 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.20386477 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196821132 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151478935 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134501734 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311255345 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162255709 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222832351 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.134352791 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165400751 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145876429 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15689856 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.198866693 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200859518 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13168649 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129612047 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.174077246 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160237462 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.165459724 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169977111 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210721021 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156190028 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213491311 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134414863 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283648235 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142610117 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200318689 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118864368 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128657798 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169655895 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135766601 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142030736 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210463645 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246783051 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161688288 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.177898108 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135129662 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.1562604 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130482935 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160967501 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179205114 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168987189 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176979042 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105111562 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169035889 seconds)
  done (took 85.039439324 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.233425337 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.174284247 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.205265616 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.262520636 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.215682384 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.324286493 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.250973622 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.334002713 seconds)
  done (took 3.120120794 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.12550325 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.163352495 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144338326 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14570238 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.110334338 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.498799751 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.162671968 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121130098 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161387909 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.152970463 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138245422 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.578560999 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118055591 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.145783353 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123326107 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136803002 seconds)
  done (took 4.146498435 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.075048672 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.550276021 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.058967894 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.310384072 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238071827 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.214219119 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.81252741 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.201151953 seconds)
  done (took 12.580504041 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.174492037 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.170409605 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.462304259 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.326569763 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.214776498 seconds)
  done (took 2.482961799 seconds)
done (took 128.168070509 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129372719 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.698482488 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.129000167 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155622272 seconds)
  done (took 2.231706397 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.201667693 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092192192 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09411739 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.12136724 seconds)
  done (took 1.639843136 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.381044483 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093401179 seconds)
  done (took 1.641685499 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.150304811 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134100892 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.165480775 seconds)
  done (took 1.59027436 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138554927 seconds)
  done (took 1.268067892 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.122515635 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.116687999 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.277982273 seconds)
  done (took 1.652032395 seconds)
done (took 11.156882742 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126538865 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.931554278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.434399442 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134770668 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.716189746 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.429342978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.436726972 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176415572 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171788064 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110171571 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161390669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.695706889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.44830781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.880676209 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.404289838 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.90711264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695813831 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112869891 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145804707 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112613387 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.41430094 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13686262 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113721343 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113900752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.690423797 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.450558412 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110908059 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.89197353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139929879 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11564686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.399348906 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.140460362 seconds)
  done (took 21.072770304 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117560199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169672579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148321308 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11218025 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113399548 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141857293 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123833263 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123040881 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204307617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111598592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162888538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111159987 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116856263 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111403097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165591011 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111374504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114113813 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143055902 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119639103 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112716552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162656547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111138895 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114173724 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143760253 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111217639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134033931 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141513514 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123778448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11159583 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14666297 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117285077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111984917 seconds)
  done (took 5.300782566 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.165878095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177814188 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149549916 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150239392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190639096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114015719 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199292987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179230658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205827418 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11436777 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13420657 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139349745 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153706048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113046649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166154254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111584143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115135926 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142806886 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119481129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113823008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163904551 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112469113 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114205901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143229224 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112602701 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135688478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141263328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124551749 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110791827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.144315175 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118218863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112000107 seconds)
  done (took 5.635950634 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133221482 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127626451 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135574314 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.167421349 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123753052 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125522506 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.15835223 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123612361 seconds)
  done (took 2.243374235 seconds)
done (took 35.391121033 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139916322 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127434621 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.13275764 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157309727 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.276004101 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.1189029 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.130260347 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.149184255 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.127991055 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134911838 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110688 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.152740539 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132230667 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123307514 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.275554352 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.161204875 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.249305693 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.277728532 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.153396024 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128137661 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.120417285 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.281857115 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.154064772 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121579199 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.276194828 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.115544029 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.266258564 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123649345 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122239832 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.144146099 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.279801352 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123643173 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121395591 seconds)
  done (took 6.643002232 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.231636956 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.154905295 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.1219834 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121309398 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121822065 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.15115195 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.232126023 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.153392472 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121059695 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.120802554 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.150654241 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214187861 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158896959 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116189769 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122760199 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111743703 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.263451397 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.122325171 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.145514572 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095085123 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116437824 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118847658 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.279301547 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115688268 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.152790077 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120518691 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.12282386 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157548579 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123171412 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122651048 seconds)
  done (took 5.616811201 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128772413 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133981197 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137656199 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.218089079 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150735323 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16384296 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138949658 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133011394 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172843358 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116018361 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129680776 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.18101019 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131107344 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124235057 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143368521 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132190871 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129386316 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14408158 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123030265 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132803494 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.133776635 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161130399 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137316919 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121463258 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143569511 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121141732 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124024682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155572376 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123747832 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128208605 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145823271 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.11872947 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116023144 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.180018571 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116843016 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.127198075 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.166443975 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127243993 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.12717974 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178003347 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.1180414 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11606127 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.172253742 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170606661 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115295583 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.158469633 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.116436146 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12872615 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140555144 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132471545 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157846361 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.14297441 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.136815314 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113105741 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.141313176 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123098793 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114588575 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117538107 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.159519629 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.117604282 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.134302074 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.152627659 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125917249 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115604814 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.153961391 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113751344 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113477469 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118372487 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.170936521 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123576024 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150598152 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.144297028 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12702212 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126605721 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.156273867 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12656204 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.111833146 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155800556 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125811511 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119436422 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126452948 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.147109411 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116960124 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130380582 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.165123275 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128322067 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12537215 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.157616884 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11783928 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115649717 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.16264615 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116124689 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118480564 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158004539 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116068473 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118096324 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125961848 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.1549577 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111790009 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139225929 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148112196 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11471764 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138531486 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148401217 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120331847 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12383081 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187058929 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115297004 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12455197 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.158045507 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115135025 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121986678 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115930863 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.144108466 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129319943 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128929174 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152929415 seconds)
  done (took 17.077994475 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.379678162 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.364433618 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212443319 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.41036612 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126982974 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.283654738 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.394659489 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.36822833 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114092292 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.148352805 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.20556939 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329563888 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114725973 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.175907806 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.370193252 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.446081282 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.144124643 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184220902 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.149574111 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127322467 seconds)
  done (took 6.216886691 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139712938 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149125757 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167437109 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142646832 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124778989 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161225836 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115482242 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135554994 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157584792 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124266004 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116633405 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160436546 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129023179 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131163909 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159114005 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.1474416 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123208535 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149560866 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137410169 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119238283 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.102818729 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.171230977 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.124201544 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.166012664 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133476215 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.124576433 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142107053 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120698885 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122002193 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123691722 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.148613894 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134200332 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.120857806 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.136231918 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127290882 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130097739 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150374818 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118393182 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119576855 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.116476226 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.159315408 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129012871 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12158995 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.12902438 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133082317 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111853694 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128042193 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157837147 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.1078191 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135131339 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.124942446 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.159976577 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122346159 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.134312535 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.151941836 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.133181027 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12402416 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.160465199 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12068264 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113152477 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.143754879 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.119241641 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123451078 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158336697 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125933146 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134177051 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.159800231 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115049035 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119223102 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117021604 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.149345776 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.12863262 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166669448 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.124561099 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121830878 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125691176 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.153411476 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.095985259 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123223151 seconds)
  done (took 11.774639185 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.14544217 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126580755 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131493304 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179752388 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127495576 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119735633 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.155442181 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134341421 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12849205 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163742896 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13061626 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127671494 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167860927 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126601955 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124042407 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160955977 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129704123 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152350915 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.158753842 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142753567 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12825132 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.150678456 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127781654 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.126412693 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173679044 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127095296 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140331759 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158227605 seconds)
  done (took 5.157105013 seconds)
done (took 53.638024234 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.324242225 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.515353313 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.286317281 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.286301307 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.297151613 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.307659012 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.283156459 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.285872669 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.798088622 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.251569914 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.28618601 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.284576539 seconds)
done (took 29.392021458 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.414747076 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.417158445 seconds)
    (2/2) benchmarking "String"...
    done (took 1.594574527 seconds)
  done (took 4.193830253 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.269609729 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.269313327 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.516401948 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.2707761 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.270450015 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.269668011 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.272398742 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.27652272 seconds)
  done (took 16.316713772 seconds)
done (took 26.371990186 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.272459137 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.587736932 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.526624345 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.255185154 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.272533603 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.272108792 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.277724753 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.340220502 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.284667692 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.266421289 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.700571933 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.55453713 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.27393086 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.682730687 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.263609124 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.283857965 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.289638105 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.674905869 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.281376405 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.305083209 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.245653308 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.248235011 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.283821699 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.271942207 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.286785158 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.28789478 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.308334407 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.274588809 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.638607907 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.310266496 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.305118477 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.276355867 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.306378847 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.292707385 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.287634555 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.280801794 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.591893162 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.279623698 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.25684394 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.286571473 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.639935407 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.305379195 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.27155329 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.285574369 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.26745755 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.333898344 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.264686079 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.39080329 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.309831057 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.284041589 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.372859189 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.684714218 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.272313733 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.290890576 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.28770706 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.667612633 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.311821437 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.38155473 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.310384466 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.273701372 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.274721552 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.274855347 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.306735519 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.291869813 seconds)
  done (took 149.516811437 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.281232615 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.273149645 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.276281243 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.275016925 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.276867227 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.274005679 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.279052667 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.276992361 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.274703086 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.303641334 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.281416736 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.275216227 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.280289889 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.284761535 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.285697195 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.302773447 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.281767421 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.278096733 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.283778254 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.27925015 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.283822137 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.279789405 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.277309305 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.278885742 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.279628136 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.377401898 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.317394445 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.291081111 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.298608669 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.283093739 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.290144917 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.285877744 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.962778276 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.149747688 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.287030457 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.318087587 seconds)
  done (took 83.058277931 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.280683355 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.277309034 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.280469179 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.31583725 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.277940621 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.919582047 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.921005016 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.343872261 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.552822566 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.841941337 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.629131396 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.284848749 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.375843731 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.29085014 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.278197168 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.378386647 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.307208542 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.282527246 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.282696026 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926134361 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.296689472 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.322492078 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.46777708 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.294069078 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318937278 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.675839311 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.282878399 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32271568 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.625113926 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.334041456 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.282386892 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.711943158 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.971671218 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400903678 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.282575232 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.324140995 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.284730572 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.574545151 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.283252398 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.287314667 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.291142077 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.018399709 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.289797142 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.926923543 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.290101305 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.309072647 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.283077122 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.287550074 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.46787335 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.098689261 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.284819079 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.286803399 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.29045373 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.282927128 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.287855361 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.326342342 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.351494321 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.227211829 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.286595907 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.29417272 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325650875 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.28994512 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.383435887 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.28458404 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.271040866 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.34267474 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.392597382 seconds)
    (68/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.289982034 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.93176819 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.291581107 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.383645273 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.407892269 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.287210896 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.288134725 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.29155512 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.287557336 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.402988329 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.287438658 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.025971372 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.472071147 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.300265747 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.290138354 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.784456936 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.383742869 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.281543025 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.707423219 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.289930151 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.29062592 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.141754171 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.385900818 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.286297418 seconds)
    (92/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.285770697 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.289018313 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.291106913 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.287798996 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.032994625 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.93136429 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.677330153 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.290754396 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.977996225 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.292558343 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.203835192 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.900867353 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.020824776 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.286635347 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.407115532 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.473872183 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.302929168 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.291463976 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.779222517 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.287657193 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.350494735 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.282862656 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.692136536 seconds)
  done (took 389.472662796 seconds)
done (took 623.225029465 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.269646505 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.267352475 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.268775329 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.271506435 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.288330569 seconds)
  done (took 12.548033291 seconds)
done (took 13.738839651 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.494321828 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.490533379 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.354471351 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502474533 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.322884051 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515260655 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.475294926 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.302079459 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41143366 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.382578992 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.41095568 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.34906069 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.324939099 seconds)
  done (took 19.520343822 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.604268479 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.301062506 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.354383311 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.574127303 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33763674 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.595359352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.652329884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.301738594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486306626 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.333326601 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.315816981 seconds)
  done (took 19.043094015 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.600315806 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.302535666 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.381571777 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.579782098 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33796221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606972155 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.633368579 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.301946884 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.499638192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.341395858 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.311247753 seconds)
  done (took 19.083023266 seconds)
done (took 58.839767021 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.330264947 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.394791862 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.328439046 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.307884774 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.31154149 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.308881865 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.309505867 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.31013817 seconds)
  done (took 11.787958984 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.3089534 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.310385172 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.308978898 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.30690059 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.306947638 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.30623612 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.309040705 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.306843274 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.311449468 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.305928009 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.305856945 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.308596987 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.306593303 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.306653367 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.304411512 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.307140039 seconds)
  done (took 22.110935656 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.310936384 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.305768071 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.305046724 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.309526349 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.309872445 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.3090613 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.308510265 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.307387999 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.308730861 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.309834322 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.308552447 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.312302602 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.310032539 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.311895093 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.312165419 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.31012193 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.313570332 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.308800371 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.316809691 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.310661758 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.311301218 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.307997283 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.30939668 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.311683754 seconds)
  done (took 32.629856256 seconds)
done (took 67.722572637 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.295808132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.295189625 seconds)
  done (took 5.780068208 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.371186251 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.371656055 seconds)
  done (took 3.9337788 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.313456294 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.315216672 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.311326689 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.311504719 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.312856937 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.312338345 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.315511066 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.315223205 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.313788471 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.312121308 seconds)
  done (took 14.322869029 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.314225842 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.312955318 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.312307534 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.316409653 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.31529768 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.315385003 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.316032366 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.315557612 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.315196824 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.314072013 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.313206176 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.314851517 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.315611273 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.315049009 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.316420319 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.317015346 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.314976925 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.316750216 seconds)
  done (took 24.859833846 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.330101957 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.334682751 seconds)
  done (took 3.854269531 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.439514541 seconds)
    (2/7) benchmarking "second"...
    done (took 1.352807455 seconds)
    (3/7) benchmarking "month"...
    done (took 1.419762851 seconds)
    (4/7) benchmarking "year"...
    done (took 1.415042095 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.357970663 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.336530692 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.355525212 seconds)
  done (took 10.868036614 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.303311143 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.600262485 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.785820088 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.465140422 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.293155531 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.322158544 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.275450651 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.317542753 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.322447147 seconds)
  done (took 14.876282325 seconds)
done (took 79.689972501 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.298329229 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.323758153 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.30808172 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.319231284 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.613721683 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.353367149 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.297459372 seconds)
done (took 16.712351201 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.284688571 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.275741322 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.288927798 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.306168065 seconds)
  done (took 10.347343942 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.303286645 seconds)
    (2/2) benchmarking "read"...
    done (took 1.625439727 seconds)
  done (took 5.121213197 seconds)
done (took 16.66659074 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31833712 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.319045314 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.319628198 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.319329019 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.31896589 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.319433984 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.315607498 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.319927698 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.319645399 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.319197594 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.318047293 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.318945212 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318190217 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.318712715 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320139692 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318788798 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.320413943 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.315646902 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32110119 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31815425 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.320858297 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.320663589 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.319174123 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.321521624 seconds)
  done (took 32.851543711 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.328292946 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.320087804 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.32121594 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.320342056 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.321623408 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.320313716 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.321384405 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.32100574 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.321072281 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.320443622 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322429331 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.315993914 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.320808605 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.322247693 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.3204033 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.323071514 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.323287793 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321611341 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318176273 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.322133315 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.320609047 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319402388 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.322957986 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.32152876 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.320978012 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323435193 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.321250221 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.319720759 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316568571 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.321515834 seconds)
  done (took 40.829818043 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.327502289 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.328794964 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.319278222 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.320742538 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.320472389 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.322804863 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.317945516 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.321291751 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.320998433 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.322038629 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.322690903 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.320572356 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.323584595 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.320874664 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.321323099 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.324175725 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.31877475 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.325487827 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.322513866 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.321118128 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.319913319 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.324525805 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.323469528 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.322651907 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.325100098 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.32329672 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.325367775 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.32452957 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.324358565 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.327328688 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.324632859 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.32387711 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.323481756 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.325229617 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.324947636 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.325149511 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.32869378 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.333919958 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.327395803 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.325923411 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.325543051 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.324708706 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.322722419 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.3268796 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.325894874 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.325371968 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.323189901 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.325188928 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.323974779 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.3272119 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.326949807 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.326024728 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.326334672 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.324886163 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.324872194 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.327282862 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.325180945 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.325612767 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.324398335 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.32520505 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.325423257 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.326172654 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.325468385 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.327085181 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.326909512 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.326486943 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.326226898 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.326474663 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.32644485 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.325654953 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.327157366 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.327628177 seconds)
  done (took 96.569025933 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.326626362 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.327793431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.325215387 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.327775431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.329229481 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.327240576 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.327621954 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330801976 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327604662 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.327290698 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326212952 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.329367089 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32772526 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.329354661 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327293745 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.326972494 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.326168496 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325872833 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.328784154 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.328809367 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.3301122 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.329196809 seconds)
  done (took 30.411992821 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.326602114 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.328649322 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.329175633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.33094472 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.330801893 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.330349003 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.32867848 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.329485993 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330440471 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330681627 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330461638 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329417242 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.331840587 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330825219 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328499407 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.332503444 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.330281796 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.330577558 seconds)
  done (took 25.14204485 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.330542887 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.328749146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.328703739 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.329335512 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.327978041 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.330442206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.32952866 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.330929938 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.32906587 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.329493106 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.332667855 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33203086 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.330818405 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331929216 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.33131685 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.329916014 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.32998052 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330044652 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.332600972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331906229 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331561664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333980407 seconds)
  done (took 30.475712388 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33162796 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.332296156 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.330574423 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.331853221 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.330856934 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.330344221 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.332016958 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.332170526 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.332844019 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.331445998 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.331903566 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.332709739 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.336564812 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.332118747 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.332929397 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.331480943 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.332867744 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.330016814 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.332743444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.333828539 seconds)
  done (took 27.84528335 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332437501 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331017988 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.331806189 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333491301 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.333100575 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.333026274 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.331733441 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.335345187 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333579239 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334556101 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.334388258 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.333188099 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.335532943 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.335527562 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334341389 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332767594 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.33209524 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.33372677 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.335319646 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333486001 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.334245004 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335878149 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337200208 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334990427 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.336546469 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.333729168 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332271005 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.335401578 seconds)
  done (took 38.555826204 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.3347902 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.335270304 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.335007438 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.336429008 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.335607604 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.335533814 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.335636602 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.338321525 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.336451416 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.333673563 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.335288329 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.335202659 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.338684589 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.335093084 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333627308 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.336741566 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336062011 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.335147459 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334174402 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334988025 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.335989885 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336237172 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.336855508 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.336914042 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334258517 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.337422679 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336112177 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.339636924 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335267957 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.337384899 seconds)
  done (took 41.283552933 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.352296506 seconds)
    (2/2) benchmarking "in"...
    done (took 1.356978606 seconds)
  done (took 3.917322891 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.336989166 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337984582 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.334510165 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.338445359 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.338063801 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.337973955 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.336017357 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.33712026 seconds)
  done (took 11.905208427 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.328408392 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.339946968 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.337071137 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.337843473 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.339115513 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.330612643 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.338971811 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.342054042 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.331547599 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.330731831 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.336826172 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.336521796 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.332845218 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.333125658 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.331273157 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.335199327 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.340922811 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.341754588 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.341191747 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.341025237 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.342041052 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334644897 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.338925913 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.3426876 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.332780154 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.343284847 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.341516332 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.345497674 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334543696 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.34167183 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.335437839 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.344552663 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.34129291 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.341088047 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.342568536 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.339944266 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344701682 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.341940601 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.341543128 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.345371244 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.344152278 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.341821162 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.335653808 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.338333938 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339314805 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.345099215 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.342525348 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.340693281 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.336644161 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.337479793 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.347289411 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335002506 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.342950758 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.338503128 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.336321919 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.346708356 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.346445316 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.338474965 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.34199638 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.343586511 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.350474125 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.354503631 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342104396 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.348501907 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.343426212 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.360964479 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.347067482 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.348861667 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.344359161 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.344239265 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.343316957 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355807693 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.35513042 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.346016366 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.342336303 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.339902734 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.33870454 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.347084468 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346427843 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.343522226 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.347508125 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.344799151 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.34568918 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.356340228 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.339188572 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.348364518 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.341051654 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.342936622 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.336230723 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.34814964 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.34652595 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.345622383 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.336298897 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.336624966 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.337993591 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.33908318 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.334817084 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.337622051 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.346873233 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.344558457 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342489395 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33881453 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.343235466 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.350769645 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.343321507 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.346155922 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.34810604 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.337305561 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.34803852 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.352799946 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347934532 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.337315493 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.342245176 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.347861599 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.336090689 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.342920071 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.350509129 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.340018927 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.352114666 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.347873337 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.346903039 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.364607542 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.346304602 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.346242662 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.338052771 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.353675532 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.340694487 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.342406268 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.353236544 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.345116431 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.344883141 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.340066906 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.347568568 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.338072676 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349244447 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.338040651 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.350705304 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.347971319 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.34397674 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.343006295 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.346272359 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.343734087 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.344147065 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.347321194 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.352085576 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.341858625 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.35760308 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.343455827 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.344240982 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.3490453 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.353978715 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.345252594 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.338185175 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.350705545 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.350386412 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.351975145 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.338173612 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.350089712 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349384207 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.348546111 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346279082 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.339394969 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344988476 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.351206143 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.34885916 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.35002566 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.353769506 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.350508319 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.34937794 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.338127715 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.34889087 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.341726583 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.343625194 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.350584054 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.346770627 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.349155851 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.346091364 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354219719 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.349670397 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.345239124 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.343303003 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.351819419 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.354001941 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.351652799 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.357307977 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.348783833 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.346599252 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.343125751 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.344341319 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.351014949 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.341238461 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.357602462 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354644863 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.364797034 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.343565796 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.35169803 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.342507887 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.355049607 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.34976 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.355833269 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.349170311 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351134973 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.338972781 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35455106 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.345814591 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.351189111 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.339852479 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.352296435 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.349324901 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.350517143 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349798259 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.344311084 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347057896 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.356441158 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.351952816 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350774181 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.341958803 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.353116696 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.343657841 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.34941461 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.352648342 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.353392801 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.352434224 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.358465486 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.344921405 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.357849969 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.353649819 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.342492093 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.350216523 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.349618516 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.350414456 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.352470591 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.351691717 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.347254183 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359439375 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.354336632 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.342660403 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.354122071 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.359744111 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.35125837 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.345265551 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.361647286 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.354611559 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.35306212 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.350611307 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34538695 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.354236653 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.354947329 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.36204038 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.346813465 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.358415746 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.350743171 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.354624863 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.35097293 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.356451875 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.351188509 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.354651872 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.363750376 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.356520429 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.346913751 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.358458835 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.353975633 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.353382537 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.349260793 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.356022043 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.357841328 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.358948719 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.35047561 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.349712578 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.358556699 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.345395558 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.358124213 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.345333578 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365340487 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.381580373 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356331985 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.361084237 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.358078637 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.355626179 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.361352613 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.349758125 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.349930958 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.352922703 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.34988108 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.349363871 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.359948316 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.348510378 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.356357714 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.352758684 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.354654533 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.361206921 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.357655684 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.348218999 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.361356195 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.354897905 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.354323571 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.347307315 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.35737175 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.353188326 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.360059915 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.35951275 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.352537949 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.36576169 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.36409491 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.353166579 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.353137135 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.352661658 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.34678613 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.355175665 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.359822585 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.35273529 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.362988695 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.348087601 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.357414842 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.354672561 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.364271054 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.365019114 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.355475309 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.363419235 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.354246661 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.349807411 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.350656891 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.359487431 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361882807 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.3725814 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.350454837 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.362565728 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.360413201 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.358775791 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.356893577 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.357307217 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358723918 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.356682812 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.365651512 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.367742034 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.357836237 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361730924 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.369239687 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.360646907 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.359759111 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.349026356 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.360794424 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.369267705 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.358505118 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.35507291 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.354065763 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.363207137 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.36178491 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.360832385 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.358691606 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.359459523 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.365351991 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.365848954 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363095014 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.360363546 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.363878356 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.373895017 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367584745 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.374718833 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.355107614 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.36693614 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.366663832 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.355043116 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.357225928 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.357147902 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.36507088 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.352926918 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.366023704 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.363075304 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.357204211 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.360849027 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.367973472 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.353112024 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36870506 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385499248 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.356349213 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.367549585 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.364330226 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.352976916 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.366673542 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.361431435 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.352829599 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.358098386 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365931912 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.37029679 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.354869611 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.36367531 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354491192 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.364405348 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.362694977 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.362654269 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.364761797 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.363231483 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.356138853 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.368235166 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.36279656 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.374297931 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.356913513 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.36379207 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.360471039 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.372262151 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.377272979 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.362140221 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.371789493 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.363952441 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.359141073 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.363859648 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.373124681 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358963637 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370796635 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.356892211 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.360851887 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.364139988 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.366729195 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.372933548 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.366607897 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.356403771 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.359556874 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.365475804 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.36412645 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.366593468 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.362309299 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.375213573 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.355778393 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.358724441 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.368686286 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.360212818 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.373474727 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.362591171 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.367496674 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.361502422 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.373308156 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.364868084 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.363218775 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.361286958 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.360910235 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.374283034 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.374434859 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.365892158 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.365839508 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.36811321 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.358441542 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366155272 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.365862638 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.364261911 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.358521026 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.369434562 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.361692743 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.364390808 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.36178196 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.369648725 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.373137306 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.375941299 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.364003308 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.379111222 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.380969374 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.378058971 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.360911558 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.366736432 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.363227245 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.368689633 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.369994732 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.362754479 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.376427396 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.37836744 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.372471551 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.369153305 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.372382733 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.3613138 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.373387129 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.367783512 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.365599548 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.378356633 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.364985229 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.380611116 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370201838 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.371505192 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.360198662 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.361022465 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.366529628 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.370162601 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.370414468 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.371069688 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.37701003 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.370213283 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.378495994 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372651896 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.373500999 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.372569455 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.36435564 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.374669088 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.366753513 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.372883628 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.375961629 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.366105818 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.376176198 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.372300818 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365336063 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.372860976 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.380391991 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.371831213 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.365473605 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.372911009 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.380149104 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.383679551 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.372907571 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.365742879 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.370755011 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.3785614 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37462147 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.373070956 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.370344759 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.386677453 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.389136667 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.367996183 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.373757251 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.378654623 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.387193404 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.374800736 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.374612681 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.372224713 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.37531897 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.379970344 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.373176759 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.376816787 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381663152 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.368210445 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.379534648 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.369324675 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.371781012 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.377702675 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.386984025 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.374314348 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.372588382 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.389236501 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.386482896 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.378809739 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.4032378 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.384926095 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.376326317 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.383638564 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367807951 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.377139995 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.370148999 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.380334523 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.377565561 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.377554196 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.376633983 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.371102113 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.378510299 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.387547428 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.390865048 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.377437008 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.36889101 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.370714518 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.379990556 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.377419929 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.378626609 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.376384491 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.377892246 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.37700673 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.372648913 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.389481813 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.398581507 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.385300601 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.377456376 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.378529984 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.378643881 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.385335254 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.378486908 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.382709915 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.378859888 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.377158443 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.375804377 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.38743116 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.375757173 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.369970136 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.374983614 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374209479 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.382117189 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.387131637 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.404214398 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.381390584 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.385852516 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.381112921 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.379120966 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.374269545 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381561871 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.378593182 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.37213373 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.377791539 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.381610315 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.378601666 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.378782401 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.374111796 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.386343966 seconds)
  done (took 810.640201338 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.37991531 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.378605848 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378369474 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.381419875 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.379709534 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378352134 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.3813734 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.382474533 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.38015612 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.38000321 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.380567939 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.381256158 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.380028705 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.382067672 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.381300325 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.382385691 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37975004 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.380273134 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.37904436 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378567672 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.383317516 seconds)
  done (took 30.234240513 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.38104565 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.379195155 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.382743204 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.381997108 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.382372959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.384386801 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.382872798 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381473222 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.383917798 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.377270501 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.380745935 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380968335 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.379973188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.381609124 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.382230557 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.381063423 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.38513868 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.381315546 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.382852524 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.379667765 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.383239116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.384150466 seconds)
  done (took 31.644066322 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.383593445 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.382722484 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.373746337 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.385591374 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.383743604 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.38225297 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.381285325 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.379286395 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.383674655 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.374433247 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.375719238 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.377606599 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.381286888 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.390172315 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.377543302 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.387804032 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.383725324 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.382707302 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.383442268 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.381470436 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.385881721 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.39711019 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.387045369 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.376509646 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.38885931 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.382403573 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.385818959 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.386688229 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.374880282 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.387606883 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.38305288 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.377258496 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.387989287 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.388730481 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.378877777 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.389069585 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.387372712 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.383802046 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.384129639 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.387425599 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.406682847 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.386132355 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.390590886 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.402029855 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.387589119 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.382288374 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.393400273 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.382689254 seconds)
  done (took 67.710897049 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.38564295 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.386310483 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.384390293 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.386774758 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.387701753 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.386932386 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.386704532 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.387777975 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.390151142 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.387300333 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.388659684 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.387151834 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.386700292 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.386091897 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.387481568 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.387475096 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.386822291 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.388860966 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.387574277 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.387503137 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.38788085 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.386777971 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.388200976 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.386531897 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.387787605 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.386844198 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.388559007 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.387326008 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.386926085 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.387398679 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.389457754 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.387472947 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.388244381 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.38631505 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.389526868 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.389282948 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.391277696 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.38950635 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.389926441 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.390590621 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.388770958 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.390428665 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.386394668 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.390048206 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.389434539 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.387563113 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.389318574 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.389431775 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.386521069 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.388873384 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.388711045 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.390829785 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.390024871 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.390117367 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.389487092 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.389310955 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.391737294 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.387978034 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.392473991 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.390722512 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.391239298 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.390846683 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.39209747 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.392572661 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.392990211 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.389044279 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.392452071 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.389056273 seconds)
  done (took 95.680685823 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.391136808 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.392106305 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389990127 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390380158 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.389778859 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.389171623 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.389477829 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.38922509 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.389821113 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.390793889 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.39005918 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.393641688 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.394317379 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.392657734 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.392595378 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.391328232 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.392558796 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.394000444 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.393794556 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.392187425 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.390159168 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.393092723 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.392591844 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.393114642 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.394263144 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.393297944 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.394446649 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.393830482 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391874998 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.393081095 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.393938294 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.392704819 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.393699623 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.391602645 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.392611626 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.394348258 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.393994563 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.395509333 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.394014502 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.3927335 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.393454491 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.393299997 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393990682 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.394513774 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.392537418 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.39360043 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.39281874 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.395473899 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.394916066 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.394482933 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.395780065 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.394085974 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396983167 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.396843557 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.394278274 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.396947628 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.396225638 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.395238276 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.395781195 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.394934175 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.396107138 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.394639586 seconds)
  done (took 87.636312412 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397774379 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.397570545 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.397993433 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.397361573 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.396481252 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.39628594 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.3965223 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.395670664 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.396680489 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.396179878 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397104845 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.397927211 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.399024921 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.396918763 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.397845209 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.399378297 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.398599355 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.399763064 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.400255704 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.399139009 seconds)
  done (took 29.210439935 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.399419925 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398445412 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.3971565 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.400024297 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.399422297 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.400463838 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.398632296 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.397871667 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.396684751 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.395758757 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.397945891 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.398226866 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398140203 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397678147 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.399528338 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.399525235 seconds)
  done (took 23.632351619 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.398372363 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.396508931 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.400671069 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.397179392 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.400001505 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.398834466 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.39908974 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.39736948 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.398792988 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.397830499 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.39712986 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.399045402 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.397978941 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.401433483 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.397834284 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.400750987 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.398464955 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.400733143 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.39816549 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.40193772 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.401147486 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.399593155 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.398064967 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.399446957 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.40237198 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.400096121 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.399098222 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.399499654 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.398342389 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.398638715 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.400568 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.401277217 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.398565139 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.400393332 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.401598361 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.400908207 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.400426498 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.400428426 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.399288868 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.401292311 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.400333633 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.401646164 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.400042262 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.400926167 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.39953426 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.401393502 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.399875323 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.402250239 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.402527129 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.403640616 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.400408344 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.403289777 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.402248684 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.402268096 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.401084776 seconds)
  done (took 78.262257648 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.402782781 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.401870687 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.401822181 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.401473176 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.403477408 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.401334898 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.402418718 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.404089047 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.402461347 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.401369217 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.402037087 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.404298848 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.404116542 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.402798192 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.40355204 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.404519918 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.402644316 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.402415655 seconds)
  done (took 26.51092638 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.403993422 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.403727561 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.401809489 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.4034783 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.402079772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.404884989 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.404574598 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.403738736 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.403777376 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.40344501 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.401685396 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.404554635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.403769582 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.403150576 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.403534997 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.404661218 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.405191316 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.405786229 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.404629005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.404044685 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.403117239 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.403481796 seconds)
  done (took 32.147628202 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.39477959 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.393786405 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.392915135 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.413300758 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.414052162 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.396206706 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.394346899 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.395326706 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.419862916 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.445630442 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.439416024 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.412256021 seconds)
  done (took 18.176567133 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40426319 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407465014 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.407269852 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405841203 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407863811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407432588 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406245929 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407124766 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408044784 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.407942994 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406421097 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406027624 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.404914253 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406807618 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406322439 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404598198 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406053201 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40792586 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405881598 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408337192 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406100043 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407223034 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405778982 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408211338 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407141109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.408187593 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410257478 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407688481 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408988796 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405555034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406902225 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406676645 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408108141 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.407314663 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409436257 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407162927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406750687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407024065 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.409453916 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406049761 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.407813128 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.407834133 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411195274 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408202561 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410015035 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411094936 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.408752768 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409871188 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.409463111 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41106279 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411004305 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.408453218 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409814679 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411741618 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409409505 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410269831 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41121756 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41011181 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.409517359 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411611846 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410041655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.411071102 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409650788 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411528497 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411800853 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.41030026 seconds)
  done (took 94.213493007 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408629063 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.410683094 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.409175133 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411421434 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.409438961 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409424327 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410501833 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411447041 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41080982 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410027891 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411873088 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40821484 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410346933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409832046 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410867389 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.410231155 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.410157333 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412592069 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.410130269 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412679364 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413299335 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412807348 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.410765533 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41276813 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411799745 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.41269191 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411737845 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413162787 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.411225017 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412337192 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411536181 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412149327 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411641379 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.411976952 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411847254 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411559985 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.411905374 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413608738 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.412723272 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413203049 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.411718946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.410757377 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.412745832 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.414097461 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411972648 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412936005 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412453821 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413401653 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412200728 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412444345 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414482512 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413336913 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414962228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413014781 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.413684885 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.41291894 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414547944 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413343085 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415535019 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414445901 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.413868829 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415704859 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416196986 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413009287 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415527598 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414578798 seconds)
  done (took 94.477923958 seconds)
done (took 1901.163912305 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.578442012 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.568117912 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.403923861 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.45364421 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.397833567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.429738961 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.422828367 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.39985395 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.404126739 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.404377186 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.404665443 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.602352809 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.445669825 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.399199295 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.406808171 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.502660633 seconds)
  done (took 28.497043341 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.437053461 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.41624071 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.544954287 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.40999756 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.437132045 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.629879421 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.473701284 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.411634029 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.620082452 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.425618827 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.411741346 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.431812363 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.410015685 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.407446564 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.425288865 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.626134812 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.709210069 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.408504666 seconds)
  done (took 30.908786368 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.952479612 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.406561437 seconds)
  done (took 5.633971576 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.432109791 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.409434938 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.413616065 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.410234301 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.402272396 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.397192408 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.411396616 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.405124221 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.401907837 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.576386453 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.413911601 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.427741508 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.430428127 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.413067728 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.421084564 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.462584381 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.564920957 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.421556817 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.420561629 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.418202168 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.411835042 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.513717876 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.455124936 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.423362157 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.564408326 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.41159927 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.416903724 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.423023027 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.54802827 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.422622829 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.409537284 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.413755444 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.41399958 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.417351119 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.990802266 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.418897953 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.437796815 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.417384844 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.423231982 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.568795855 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.413915536 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.41971711 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.405414212 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.011664464 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.529422078 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.548744185 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.423944809 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.414631111 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.415993167 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.490300629 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.417254389 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.412180279 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.479376033 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.310367787 seconds)
  done (took 90.138497753 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.457157812 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.403962008 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595382933 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.429819208 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.401588447 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.423820628 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.418361616 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.764041795 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.476710498 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.406142966 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.769831081 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.094073873 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.406264865 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.474056867 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.427724068 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.432484545 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.409888885 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.403962739 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.408268578 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.412427346 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.022016272 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418989273 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.402971996 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.60578747 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.449453562 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.044099659 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.418817613 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.411918906 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.410527899 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.404998153 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.063376969 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.41514482 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.454350315 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.40611908 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.736161245 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.875170258 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.828328754 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.405623207 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.406035926 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.411047082 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.405230144 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043336401 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.854630259 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.405875713 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.407711303 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02464692 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.403553328 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.413674591 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.417257044 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.685569703 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.409030489 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.412749913 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.418231057 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.405124602 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.408971477 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.477094701 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.441174463 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.022903468 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.403493273 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.406678104 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439728422 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.411201719 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.413984978 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.413098787 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.41510881 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.872490819 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.702004473 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.409333744 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.878682039 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.062549746 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.412504019 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145965251 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.411126095 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.438311272 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.525480906 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.422392516 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.407484129 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040317476 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.421176786 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.408303749 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.85625385 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.414017115 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.764549847 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.432153637 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.409538276 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.040899609 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.426054594 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.46536925 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.410093511 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.412778337 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.408675501 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.416189897 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.744083215 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.441367631 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.409767906 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.411287438 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.422271675 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.40781533 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.407722256 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.421886011 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13347379 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.422493561 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.412463699 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.414293444 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413200452 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.408696518 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.411597754 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.413041601 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.69935447 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.414024719 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.437445323 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.415599926 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.409082343 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.416277295 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.620460024 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.417930148 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.807114968 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.416250845 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414102556 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.435526015 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.413353638 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.453604112 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.422486398 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.409096812 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.378973233 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.772741904 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.432348573 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.431641855 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.415250637 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.41359018 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.416101841 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.413102314 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.478369677 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.414775244 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.260525875 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.439833725 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.451059277 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.415475245 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.425758525 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.415714803 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.416261453 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.417855629 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.744348763 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.752013277 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.699530057 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.416996665 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.41556229 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.277209212 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.468718735 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600644311 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.431325859 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.415147515 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.723182744 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.692739476 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.418112699 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.41271055 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.4176042 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.724302741 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.417296454 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75570368 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.093670316 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.418557707 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.42514608 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.263301117 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.18832643 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.420403664 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.419765993 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.771772985 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.437597755 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.419716273 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.419465118 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.421276747 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.418830397 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.421653351 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.42974751 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.417344167 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.418749216 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.486350549 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.621513006 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.436111542 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.419311078 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051457082 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.445659877 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.413971219 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.423739322 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.415349962 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.417120982 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.449200644 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.422686733 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.470550694 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.41981291 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.42853918 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.08874094 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.419038835 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.419921038 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.621781109 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.225259307 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.422832382 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.419716499 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.419652804 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.472299411 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.075207764 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.425496561 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.816243966 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.422715005 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.464178203 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.420492383 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.448726445 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07827333 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.422084294 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.415922727 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.218720568 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.421056599 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.201070799 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.416554588 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.428542059 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.14210337 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.422757854 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.421504462 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.418138444 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.416673582 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.732994704 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.421175909 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.434872153 seconds)
  done (took 519.485001307 seconds)
done (took 675.940685618 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.420342341 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.421117643 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.422210883 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.424681226 seconds)
  done (took 10.978076724 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.4421749 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.421554981 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.436184178 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.426632854 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.438121447 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.425341065 seconds)
  done (took 9.881190515 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.42263997 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.422963475 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.423316722 seconds)
  done (took 8.56246791 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.679924106 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.444368429 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.849302846 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.424933738 seconds)
  done (took 9.691805944 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.441606794 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.441768547 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.440235108 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.440007843 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.43927383 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.449612843 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.441913758 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.442435766 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.441277069 seconds)
  done (took 14.269104601 seconds)
done (took 54.678438869 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.399969684 seconds)
    (2/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.481482463 seconds)
    (3/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.430923219 seconds)
    (4/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.400181832 seconds)
    (5/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.441304442 seconds)
    (6/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.452105192 seconds)
    (7/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.938930786 seconds)
    (8/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.877822977 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.505292692 seconds)
    (10/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.582876553 seconds)
    (11/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.647196219 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.461680035 seconds)
    (13/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.496150909 seconds)
    (14/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.402556397 seconds)
    (15/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.57675309 seconds)
    (16/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.551751679 seconds)
    (17/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.600418971 seconds)
    (18/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.460891259 seconds)
    (19/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.60829603 seconds)
    (20/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.403160836 seconds)
    (21/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.614014535 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.459663287 seconds)
    (23/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.71063529 seconds)
    (24/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.494821907 seconds)
    (25/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.876727678 seconds)
    (26/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.405280954 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.588781412 seconds)
    (28/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.503962834 seconds)
    (29/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.474345452 seconds)
    (30/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.774872375 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.438345011 seconds)
    (32/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.40178861 seconds)
    (33/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.566147218 seconds)
    (34/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.511287645 seconds)
    (35/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.603362549 seconds)
    (36/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.452647539 seconds)
    (37/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.508156718 seconds)
    (38/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.400543108 seconds)
    (39/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.512452938 seconds)
    (40/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.715378203 seconds)
    (41/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.507747632 seconds)
    (42/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.500733357 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.70076852 seconds)
    (44/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.399946866 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.501009435 seconds)
    (46/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.46360393 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.467097543 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.426336347 seconds)
    (49/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.830115832 seconds)
    (50/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.59627546 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.395383827 seconds)
    (52/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.462106801 seconds)
    (53/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.480392082 seconds)
    (54/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.420134982 seconds)
    (55/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.685694033 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.53221352 seconds)
    (57/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.574888195 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.528328203 seconds)
    (59/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.765815657 seconds)
    (60/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.65390359 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.588202985 seconds)
    (62/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.856312746 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.556077218 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.459258767 seconds)
    (65/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.610530568 seconds)
    (66/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.510063128 seconds)
    (67/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.480746097 seconds)
    (68/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.844780304 seconds)
    (69/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.45203381 seconds)
    (70/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.403381468 seconds)
    (71/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.743920712 seconds)
    (72/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.471297803 seconds)
    (73/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.642101645 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.531822879 seconds)
    (75/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.889177082 seconds)
    (76/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.878645452 seconds)
    (77/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.839837646 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.694570825 seconds)
    (79/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.765994611 seconds)
    (80/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.518906804 seconds)
    (81/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.613525664 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.547519883 seconds)
    (83/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.527633871 seconds)
    (84/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.833461468 seconds)
    (85/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.499465203 seconds)
    (86/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.753553828 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.536047681 seconds)
    (88/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.655883982 seconds)
    (89/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.562053822 seconds)
    (90/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.488406407 seconds)
    (91/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.619041915 seconds)
    (92/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.72008044 seconds)
    (93/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.404452214 seconds)
    (94/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.506555214 seconds)
    (95/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.588047581 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.554719694 seconds)
    (97/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.5032555 seconds)
    (98/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.520022417 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.543398228 seconds)
    (100/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.403440319 seconds)
    (101/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.536571165 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.523722485 seconds)
    (103/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.452472786 seconds)
    (104/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.418568298 seconds)
    (105/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.583806952 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.560352833 seconds)
    (107/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.397844751 seconds)
    (108/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.454017494 seconds)
    (109/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.58382905 seconds)
    (110/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.648405865 seconds)
    (111/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.507258947 seconds)
    (112/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.85727268 seconds)
    (113/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.487578633 seconds)
    (114/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.579239837 seconds)
    (115/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.508406673 seconds)
    (116/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.928600959 seconds)
    (117/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.516893605 seconds)
    (118/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.401408177 seconds)
    (119/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.615004798 seconds)
    (120/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.11825475 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.462884138 seconds)
    (122/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.826743936 seconds)
    (123/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.926241441 seconds)
    (124/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.542458969 seconds)
    (125/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.705514788 seconds)
    (126/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.524103343 seconds)
    (127/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.634042832 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.464719985 seconds)
    (129/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.832875037 seconds)
    (130/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.396637594 seconds)
    (131/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.496896806 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.700455735 seconds)
    (133/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.571254877 seconds)
    (134/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.510922328 seconds)
    (135/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.452937838 seconds)
    (136/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.7096431 seconds)
    (137/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.549178509 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.44790257 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.500410012 seconds)
    (140/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.419869899 seconds)
    (141/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.544631255 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.599285517 seconds)
    (143/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.624594962 seconds)
    (144/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.489368861 seconds)
    (145/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.400985899 seconds)
    (146/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.420431957 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.578649629 seconds)
    (148/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.66624211 seconds)
    (149/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.410466027 seconds)
    (150/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.404773983 seconds)
    (151/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.493075723 seconds)
    (152/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.748372874 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.498349726 seconds)
    (154/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.510841862 seconds)
    (155/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.946645323 seconds)
    (156/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.54573159 seconds)
    (157/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.637951706 seconds)
    (158/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.717094656 seconds)
    (159/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.40218741 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.517524962 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.592086158 seconds)
    (162/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.404361924 seconds)
    (163/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.447061018 seconds)
    (164/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.470666318 seconds)
    (165/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.463479803 seconds)
    (166/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.46231823 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.535123541 seconds)
    (168/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.402532788 seconds)
    (169/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.425823306 seconds)
    (170/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.597357473 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.401274308 seconds)
    (172/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.417974815 seconds)
    (173/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.678146821 seconds)
    (174/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.016208174 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.421479756 seconds)
    (176/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.405222817 seconds)
    (177/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.806755739 seconds)
    (178/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.120995301 seconds)
    (179/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.516843883 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.538294229 seconds)
    (181/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.409765919 seconds)
    (182/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.559123856 seconds)
    (183/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.555749043 seconds)
    (184/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.466809234 seconds)
    (185/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.452962433 seconds)
    (186/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.638330415 seconds)
    (187/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.566067226 seconds)
    (188/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.405955008 seconds)
    (189/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.427235246 seconds)
    (190/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.539744913 seconds)
    (191/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.403767409 seconds)
    (192/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.670363038 seconds)
  done (took 349.783275702 seconds)
done (took 351.08504115 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.455703954 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.52100139 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.439385945 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.435687772 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438474515 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.427914795 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.457922623 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.438453566 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.452432425 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.453428564 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.427819249 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.466356088 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.453434748 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.448818824 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.471126697 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.437339076 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.436202872 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.447737593 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.454761156 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.452377257 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439585605 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.438118524 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.465971175 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.436193325 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445238521 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.446444177 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.444642052 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.428414707 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.445693321 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.453394836 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.438545698 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.443381507 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.453184279 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.45052086 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.439690634 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.447660993 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.438409192 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.521838442 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.459238756 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.451139425 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.4478414 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.455253713 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.44413062 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.442189857 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.452176485 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.466598709 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.448063569 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.453759188 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.439315755 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.440336904 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.459279571 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.453503637 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.447407769 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.444275051 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.43217068 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.453914007 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.449746448 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.460062377 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.448130534 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.44249737 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.47259222 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.460033276 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.45374202 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.44948013 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.447279209 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.456524968 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.450005137 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.456559669 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.447234455 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441195384 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440775803 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.447879504 seconds)
done (took 113.718283301 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.563928542 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.435494226 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.596529432 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.449797853 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.611640719 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.565205627 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.447807442 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.447234405 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.446696272 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.254464444 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.449873846 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.45179387 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.437187246 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.449596078 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.564605638 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.448971874 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.448990861 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.140137099 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.44864942 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.576406755 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.439946937 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.449951454 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.448568748 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.248763799 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.438586902 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.434401352 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.577924391 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.450812083 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.148625754 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.432996557 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.437876662 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.151012065 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.577403165 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.466835325 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.459340423 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.457888581 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.614115222 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.453274088 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.564201623 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.566807688 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.597591331 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.48766347 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.433158289 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.440927475 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.452251503 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.451722463 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.449036283 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.479104703 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.442403398 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.451354194 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.160824472 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.461478043 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.461365381 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.452794639 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.452596019 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.47269912 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.453122802 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.451275997 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.580614215 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.452275703 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.569330847 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.251745405 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.243455017 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.452479109 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.439832859 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.454926828 seconds)
  done (took 115.858240748 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.512035303 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.520134402 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.56695487 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.444058728 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.494508832 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.567018651 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.443656718 seconds)
  done (took 11.857206999 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.450105555 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.452266747 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.492311202 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.491387407 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.452930753 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.616786968 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453205189 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.455977857 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.453539838 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.495718821 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.453863562 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.453344072 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.461599857 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.445883435 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.491709543 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.457526791 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.564672989 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.446067662 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.454556259 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.596058768 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.453246422 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.465439593 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.49834155 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.456200022 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.453391681 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.450806073 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.203122687 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.454121935 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.453617694 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.454436253 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.454149076 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.512508785 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.455300784 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.437130494 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.455596998 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.558586442 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.454595474 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.455249215 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.45560223 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.447437657 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.454784124 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.455802578 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.456289645 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.455716564 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.456882283 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.471718224 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.457976976 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.457159744 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.46006718 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.4574955 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.497087625 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.455654817 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.455048774 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.456862823 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.501829358 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.467874141 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.459063581 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.456155853 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.461458417 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.457072686 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.599282998 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.494498391 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.459112375 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.496072393 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.459101047 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.457519748 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.459104978 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.455835339 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.538193604 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.457734542 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.49803331 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.456721388 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.632326944 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.474230998 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.459093182 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.453791626 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.452295439 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.458347657 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.447514439 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.457623333 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.457777893 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.450282809 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.454173964 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.458327467 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.458725788 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.607593005 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.557514276 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.460053293 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.465447918 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.457132258 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.461222758 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.503224243 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.458977449 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.459129313 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.500870962 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.569961384 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.501407358 seconds)
  done (took 149.182448216 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.462199969 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.46347069 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.456291732 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.480278228 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.451672944 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.448978685 seconds)
  done (took 10.077579006 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.452722984 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.464641885 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.459108893 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.45968506 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.460573606 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.46247047 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.463019264 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.452812651 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.46473997 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.461046836 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.460387678 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.461724713 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.461202023 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.461024023 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.459679189 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.461974323 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.461063576 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.458743749 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.46177451 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.461418266 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.448071208 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.461289904 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.459791202 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.454030538 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.46537376 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.460984082 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.477829878 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.464085297 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.463752991 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.459740226 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.465924148 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.46236278 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.454949041 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.460239797 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.46732473 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.456314434 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.465783153 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.461410737 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.462601654 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.464260794 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.463620125 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.462786026 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.464178885 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.462706681 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.455278393 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.45869006 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.468390734 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.478910495 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.462724565 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.462684944 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.46278449 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.462585123 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.4625125 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.466879537 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.457376134 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.459298639 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.467323639 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.464340709 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.463297016 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.455863226 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.466321543 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.465111808 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.457057468 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.470446021 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.463698155 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.463932043 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.457235249 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.466934771 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.463722386 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.464900637 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.465694417 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.463699471 seconds)
  done (took 107.595508647 seconds)
done (took 395.881396764 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.010221938 seconds)
  done (took 4.329479693 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.638300996 seconds)
  done (took 3.960751527 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.88596127 seconds)
  done (took 26.214908882 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.511734727 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.45424965 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.472070782 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.4505154 seconds)
  done (took 11.208717471 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.026333574 seconds)
  done (took 4.345863245 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.475954173 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.463961031 seconds)
  done (took 6.262249636 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.767097628 seconds)
  done (took 4.087223284 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.374550578 seconds)
  done (took 4.706151722 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.474552323 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.460452365 seconds)
  done (took 6.265362732 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.425877756 seconds)
  done (took 3.748121607 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.998069356 seconds)
  done (took 22.319773856 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.465912144 seconds)
  done (took 3.790621125 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.487813539 seconds)
  done (took 3.808798772 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.645114873 seconds)
  done (took 6.965462644 seconds)
done (took 113.340929851 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.450182602 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.45763545 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.457662075 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.457085426 seconds)
  done (took 11.1428296 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.530295868 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.528885424 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.538697076 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.523363752 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.524298834 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.53326277 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.492643993 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.493350924 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.523708071 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.52074351 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.535419544 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.524954551 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.534167008 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.492987609 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.519896637 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.536416584 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.525438223 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.540724668 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.505040938 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.527051781 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.466994584 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.526419916 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.520577368 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.469356674 seconds)
  done (took 37.760693158 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.955352337 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.531305064 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.61465868 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.511619883 seconds)
  done (took 7.935462578 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.573804717 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.573248939 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.599694293 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.630321064 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.675935895 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.585974929 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.495449091 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.49044681 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.475332769 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.574102178 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.658325143 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.572982321 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.789744301 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.468599313 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.791276523 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.469908819 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.46902052 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.572398 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.623892622 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.653865808 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.471219022 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.575619415 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.589927585 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.574018991 seconds)
  done (took 39.281052546 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.475923424 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.486596729 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.47031094 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.48354423 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.471271656 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.471968054 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.472965842 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.479196271 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.471700785 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.475261952 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.4733662 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.487938827 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.475885791 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.473950318 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.477635603 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.474276763 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.475003479 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.477578559 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.481949335 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.476415117 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.474134486 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.48122376 seconds)
  done (took 33.813601485 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.458674614 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.456512436 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.80765383 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.712651536 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.461314148 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.458914009 seconds)
  done (took 14.681992986 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.550203762 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.702146352 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.464633983 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.901367283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.984344088 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.46587087 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.468050995 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.75050697 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.126871404 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.154929848 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.531645442 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.545347915 seconds)
  done (took 21.97459672 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551781862 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.470986795 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.478605399 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528032255 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469274351 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.46927185 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.514840153 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991409255 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.475029703 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74555305 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467406952 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55852163 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.719489786 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470162401 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.474622655 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.438282331 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.702900206 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0662481 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.476194261 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476452566 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507713288 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490613113 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473364153 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.725057573 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.476620131 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470481667 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.734221919 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.470922347 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817611093 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800657505 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797329971 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477524945 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.744775827 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952861663 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577710942 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.726098345 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478293952 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.479283187 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.445545524 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.473198949 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488520616 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480468236 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795461431 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478284705 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.474590734 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486334087 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996102147 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.48233405 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.477830952 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.471950396 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800171425 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562289248 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.480741554 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.476330264 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56885393 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.471149086 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.47796148 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602103128 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110263383 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48568452 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494193901 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.472296253 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.481636057 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489825693 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228737539 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.486882462 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.47936632 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481076195 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472413999 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.478385562 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50502085 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475284201 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.495298354 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476218915 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473582589 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.480772054 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48108122 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133230883 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483274576 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.502431942 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.701315551 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474907483 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473727705 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.474531129 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.473735475 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.356399321 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481758639 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.443633636 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510509346 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.999205363 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.728210299 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500934895 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504865885 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.697534586 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.444413183 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477016704 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.475909172 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483691535 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497564414 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000969398 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.476514581 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.481556503 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725728704 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.688334064 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491332363 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.454497015 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033670111 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49490977 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.495368607 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493001498 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.729145301 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.208190131 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81345918 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502573889 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516316669 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.476390725 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424151988 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478090679 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.490402504 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478729593 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.80502928 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.439202982 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.481838969 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55158506 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.480159798 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.480708164 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49262519 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484348987 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.478882657 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.70777457 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.505010433 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804938889 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.48875314 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483745257 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.485096412 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488617385 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.486512075 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.701455317 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497910344 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.756057338 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480941721 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480304783 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478446136 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.703080556 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.49373447 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.487501995 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.824005778 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488497569 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492773656 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81116952 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516576139 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592606509 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516641793 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.484300958 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.735939704 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.483934149 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.489556519 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479035075 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485456638 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491501921 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.493610622 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478206561 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230205482 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480012928 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491845923 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.485740546 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.501899644 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558313425 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495456096 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.737992635 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.487629257 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.478276847 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.490919063 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.490406525 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713790434 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81092978 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.494504693 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663673811 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.012212716 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20677982 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507738552 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.485119842 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.48346211 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.487009182 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48953631 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487062365 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.488134503 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.738410544 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819976967 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.480686906 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.22393807 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492025266 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499815193 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.496563102 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.808268628 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.499743819 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490153421 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.487856195 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489102091 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516319369 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.816892793 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714921499 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.501609437 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.486575554 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.051100453 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496276775 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.487196227 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.48540005 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514259604 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496691127 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10071478 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830136917 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492945856 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81705374 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.509679624 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.51071396 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.486233957 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494764821 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495806813 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.49293121 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515789818 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.742589503 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.503748403 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49318371 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124974392 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.472722527 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16842862 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506195376 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.488592144 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.491411035 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.016236283 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48614004 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488836273 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.770421497 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02350249 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485788755 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01599379 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.485095132 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.394156767 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.820310593 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720656309 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494622162 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.494863439 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823478594 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.706072108 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517895094 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504828833 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492779165 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.454165421 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1006282 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5017405 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.673157456 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018592749 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492744325 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495826013 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.524005152 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.490799329 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975730019 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.493210443 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49014943 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506456135 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.501334543 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109660769 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.496660326 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489656628 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256154377 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.49628096 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.043908808 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494283921 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.74533179 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.824868068 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.793966766 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.511338072 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.511910065 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.740669194 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824993798 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496789733 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503045792 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200427301 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.428766712 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.49781243 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491788387 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449382556 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491732161 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857112877 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.50975084 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.498924165 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503418434 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.493281574 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493131694 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.489178674 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.499651292 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479442686 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077233429 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.511714138 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49002329 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.504127769 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494403454 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.740609322 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.505466945 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.253431787 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727809328 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48492647 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526849068 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.497934257 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500052679 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.464433071 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496529934 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490723336 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49422089 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.714461266 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.514687242 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.457951452 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.585805365 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.702642932 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.493054274 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495810816 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.766608047 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.500160679 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.500587036 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497779799 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531926632 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497148416 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502348887 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.485262207 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530499092 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570236451 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.752322521 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.834267523 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.834781101 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986260097 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50158923 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502618848 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.511859208 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577136699 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498588388 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.508818994 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.49136333 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256098284 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499929327 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.266823946 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842157557 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.504858986 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5006487 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49828817 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.738517803 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496871589 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.77332623 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498435871 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.497600281 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517796977 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502788811 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512526215 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.714806866 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776450013 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498802651 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502581196 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500089057 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.497916779 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838452961 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.717648643 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.108809446 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175361049 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502901739 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.515852993 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039380208 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.774288463 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502937384 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.501201599 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499663515 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.504781218 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.503813662 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.504354327 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516892168 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.727318076 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835716657 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023877675 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.836054683 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.531426534 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.373708035 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501197085 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.753098849 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.333577429 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.753407492 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253286433 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392249093 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.759682715 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57273733 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.760473314 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.504317176 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.739082435 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.509734149 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.504748 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.496688865 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496409848 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.497242758 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.829746352 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254540529 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763445612 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.506138076 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.508861342 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534162665 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.757699195 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.728935059 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38283073 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.720763349 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841693422 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.514596312 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.50057214 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252553174 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844062001 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507640901 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.504863731 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.768427488 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.507860174 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535494155 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.37271543 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.503539495 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.16620448 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.717056777 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.525554324 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504652219 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399726822 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.259840287 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.512809662 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109710799 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507804281 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518490638 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783809732 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.51092771 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520468941 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795416658 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.510585857 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.52347241 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.766159082 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.244542573 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.440878337 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.518153919 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5316412 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.509010212 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501445355 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.541950323 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501094264 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514787298 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.974576968 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509347374 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503841458 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516727719 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.508445836 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510816193 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.526575088 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504957618 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.511832026 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.497307409 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.472412651 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.510424692 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635779774 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121929541 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506065468 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.12141502 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.843412604 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.756648368 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.504850127 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.477389458 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.513877437 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505925503 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501216355 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506560568 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51666281 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174960502 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.511811953 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.845487243 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.519269554 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.718238943 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718081895 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525589212 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.771531698 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512056318 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.549895556 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.471570156 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.505381483 seconds)
  done (took 1044.101927456 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.556705013 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.53720144 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.539241392 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.575012386 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.51461999 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.531108063 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.596373448 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.529028677 seconds)
  done (took 21.740608655 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.500841327 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.512990545 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.500180913 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.510523947 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.515156297 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.070259582 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.499101722 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.51238942 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.530317321 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.504992973 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.504084671 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.237271979 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.512007811 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.497528788 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.503750528 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.513397106 seconds)
  done (took 34.796752504 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.722470328 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.726363003 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.173525742 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.504106754 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.569902799 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.50574764 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.919253244 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.53758845 seconds)
  done (took 29.024505169 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.510911286 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.515919222 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.516268894 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.515540761 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.514779597 seconds)
  done (took 8.932306848 seconds)
done (took 1306.516989946 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.514950065 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.510333576 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.514895679 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.516609566 seconds)
  done (took 7.418761424 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.475630476 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.478015328 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.479503917 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.494525855 seconds)
  done (took 10.291327038 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.937828599 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.147383216 seconds)
  done (took 5.450118194 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.518856551 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.282142207 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.260487763 seconds)
  done (took 8.425465218 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.818196467 seconds)
  done (took 3.183447532 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.960250105 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.030406774 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.500954663 seconds)
  done (took 7.85724312 seconds)
done (took 43.995918074 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.50261238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.279072881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.687648158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.518517381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.680560013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.666783295 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.777197628 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.505259425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.505077871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.518862051 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.52034235 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.709180932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.771052361 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.271796829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.768477586 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.26415158 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.67621839 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.497599261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.514734122 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.517264702 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.781446099 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.510969356 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.498995488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.513450042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.697494756 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.658230247 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.499665003 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.279894765 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.514483992 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.525225757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.665102281 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.51364688 seconds)
  done (took 87.174364078 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.520466311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.507287134 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.527434047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.528647024 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.507576695 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.509230925 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.529013572 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.50846595 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.506618474 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.518394182 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.50855234 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.518676036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.510018235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.5075745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.509989124 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.508083402 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.522563906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.50736135 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.524397384 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.529007627 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.509676831 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.506528802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.510228043 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.528390501 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.508387792 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.509507054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.516474485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.511284831 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.50769403 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.509512574 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.513759651 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.529008887 seconds)
  done (took 81.833875457 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.50750259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.508185612 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.506113164 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.530882583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.531965573 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.507559547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.52939133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.510116326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.509320505 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.50945855 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.530338205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.507507485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.532530361 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.521128453 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.511684446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.522381003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.510495641 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.508047125 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.506967166 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.515015662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.510144668 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.512108212 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.524884721 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.523879819 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.512985173 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.532212336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.515803872 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.512080049 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.533008984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.509680313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.512160913 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.512843343 seconds)
  done (took 81.892422194 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.749384846 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.521540797 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.526774972 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.519887344 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.528079591 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.524463406 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.518228593 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.781605258 seconds)
  done (took 16.03831462 seconds)
done (took 268.312114531 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.516862946 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.520858309 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.550343277 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.522982358 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.540657372 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.54588722 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.754787256 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.550409991 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.743231988 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.522901953 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.56104913 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.520380779 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.477840612 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.67122417 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.516715787 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.524479095 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.517476092 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.51524153 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.543584267 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.780564179 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.555966485 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.517301075 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.544367051 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.523952804 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.497865281 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.598708704 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.600816226 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.69031485 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.653387008 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.601410208 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.515804538 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.546094206 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.524437418 seconds)
  done (took 71.137612748 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.516756272 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.5272891 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.523538579 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.530738444 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.527703223 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.52823345 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.519492063 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.530046137 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.527363994 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.529426586 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.530153719 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.533182807 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.529988253 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.531910989 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.529901084 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.500665197 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.524676331 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.527899204 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.520891257 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.500958032 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.531356094 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.530846962 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.532248323 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.526926387 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.530358529 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.530351278 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.531658111 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.533829597 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.532426563 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.530103594 seconds)
  done (took 47.173953708 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.53368437 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.515527554 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.518866099 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.531389425 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.520902784 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.526116968 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.869156499 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.53560063 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.525498248 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.52632015 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.529793186 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.535760005 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.579413106 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.518143637 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.525962579 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.52901252 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.528856101 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.525696005 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.523982972 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.543092961 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.882551008 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.535357045 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.876680787 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.541574384 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.526963292 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.526424162 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.525944972 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.516108651 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.530118054 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.520043524 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.512134201 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.869995537 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.531538744 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.522498571 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.502836083 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.537063362 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.5323839 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.518109981 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.528532395 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.528667217 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.866049295 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.529335048 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.519049299 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.517473961 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.528476484 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.532868245 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.513046603 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.523631795 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.8390122 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.536844051 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.519683264 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.530471508 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.537421823 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.527990747 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.813988907 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.531579649 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.524245625 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.520807372 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.537519523 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.873802743 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.538944089 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.528979208 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.53133722 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.531246061 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.524824978 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.535590251 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.543816817 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.529897914 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.528492821 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.534228103 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.520595977 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.532329343 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.536613378 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.54197538 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.530518099 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.526325295 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.535313466 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.535436883 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.523574952 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.873058674 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.534468962 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.519063972 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.892680925 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.536967644 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.541403662 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.536668067 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.539883502 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.650119439 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.867169221 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.516794992 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.548651581 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.526418377 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.881180172 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.541279745 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.528780277 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.521336899 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.541500531 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.541101648 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.52335926 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.527530432 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.533382436 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.544427468 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.525886744 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.538201318 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.884120734 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.539861534 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.523803508 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.535078445 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.650445751 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.537139058 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.540959998 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.535891703 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.89769748 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.53798936 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.536881973 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.523167379 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.529799704 seconds)
  done (took 223.423003667 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.525345529 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.528638811 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.521496548 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.527986671 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.530892737 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.534319508 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.525058823 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.527145724 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.531431192 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.52389158 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.529104682 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.532702407 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.533675648 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.527114176 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.524511089 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.530125201 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.528518382 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.530846559 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.528982636 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.525244414 seconds)
  done (took 47.951042653 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.539046487 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.208611413 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.1671037 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.545856971 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.540635833 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.532979904 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.603356673 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.547311017 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.541314802 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.894924519 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.744176544 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.549057819 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.543105185 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.542748818 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.167367654 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.516399485 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.89993608 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.212924155 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.549933759 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.212718835 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.517652725 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.542585384 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.533836008 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.218296648 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.91991092 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.886735406 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.610836787 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.220766717 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.545398448 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.543429288 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.223198633 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.547304142 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.534281436 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.201220054 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.54925451 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.557916701 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.545152293 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.609226822 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.61241359 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.910666951 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.232268655 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.894804034 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.560995229 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.714393052 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.550113947 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.512727097 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.232467293 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.549735389 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.516395464 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.547869461 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.548523588 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.186062185 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.539919402 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.191031857 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.551091606 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.547221102 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.221942892 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.193587466 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.17843036 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.750575999 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.53809144 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.88514828 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.551181342 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.22670503 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.552085727 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.547694319 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.549344201 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.746994291 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.20972986 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.889442883 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.91266721 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.912757794 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.549753379 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.620382116 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.549199922 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.91104392 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.622571791 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.96046353 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.908450002 seconds)
  done (took 141.139784511 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.854292526 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.66955948 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.998955985 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.187990383 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.11699192 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.695805569 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.670045476 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.818243466 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.560250704 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.644462476 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.325997932 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.651398684 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.387003767 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.618412864 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.660696284 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.678931214 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.031346241 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.550429242 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.268994775 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.304293589 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.562525561 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.662755102 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.357951534 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.973136306 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.537718683 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.337117499 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.538212276 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.13305713 seconds)
  done (took 59.185541592 seconds)
done (took 591.383033223 seconds)
SAVING RESULT...
DONE!
