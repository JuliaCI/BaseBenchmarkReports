cset: moving following pidspec: 9823
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.343836119 seconds)
loading group "string"... done (took 0.485084307 seconds)
loading group "linalg"... done (took 8.046410047 seconds)
loading group "parallel"... done (took 0.184749805 seconds)
loading group "find"... done (took 1.247288558 seconds)
loading group "tuple"... done (took 2.020932841 seconds)
loading group "dates"... done (took 1.357044087 seconds)
loading group "micro"... done (took 0.251600682 seconds)
loading group "io"... done (took 0.685479627 seconds)
loading group "scalar"... done (took 42.425360988 seconds)
loading group "sparse"... done (took 12.962303197 seconds)
loading group "broadcast"... done (took 1.110440285 seconds)
loading group "union"... done (took 14.986527758 seconds)
loading group "simd"... done (took 4.930815464 seconds)
loading group "random"... done (took 10.113107819 seconds)
loading group "problem"... done (took 2.032554041 seconds)
loading group "array"... done (took 22.818821168 seconds)
loading group "misc"... done (took 1.494561489 seconds)
loading group "sort"... done (took 3.64395492 seconds)
loading group "collection"... done (took 19.95634985 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.465965474 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142854282 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149124967 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.155002646 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188216241 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.137976207 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15938984 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11092341 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.926367068 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.185270944 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144768576 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.506655995 seconds)
done (took 5.000621966 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.291235459 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081725576 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097450728 seconds)
  done (took 0.851439806 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.089668618 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143995165 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.089214904 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075297666 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090582612 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075469201 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.076965966 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.090163703 seconds)
  done (took 1.316026002 seconds)
done (took 3.226149222 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.727909323 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.275654279 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207063783 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.50415561 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.180389529 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214186216 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675242884 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343343334 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.242799731 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100116241 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130181833 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394552797 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115413471 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677014124 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.084911982 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.122557055 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175935072 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.450643392 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088618007 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091995307 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115235203 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.149625402 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.109648485 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083390673 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.175155317 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.077323311 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190819252 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10646779 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075939463 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.281996839 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199777644 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695035246 seconds)
  done (took 10.771866491 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114541923 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139261182 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095700082 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13750742 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.139197137 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083907202 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098722322 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078050459 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122691254 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181557671 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.133538765 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141245127 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.07528935 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079271871 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116536414 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246895513 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101505731 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.117964992 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.096689561 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088995157 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137668384 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096415815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107115181 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091753604 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168439837 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.214573365 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108995575 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121117173 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091723433 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093473395 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140015029 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.152460217 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074404228 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091043905 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172923598 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104513139 seconds)
  done (took 5.045826687 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186485566 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100107339 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.184806081 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.106378813 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.161368411 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.138466734 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164130451 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.094346983 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254780545 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.123393052 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177960502 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124931791 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10979216 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076901993 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.096069054 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074673522 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.723744451 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.161671052 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110912385 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115792577 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097693765 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085004367 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.376769185 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081832962 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088131586 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078918723 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086259626 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156426792 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.073110952 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099883286 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.187467778 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119039798 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079509153 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132434045 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.188876653 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121869281 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116756543 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09580454 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.075814721 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.180213282 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101847792 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077083961 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.124691373 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117095148 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134447436 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09301185 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07808595 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223098105 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.076600626 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.095256785 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.015899164 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17497248 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.099832695 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073757079 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.340306442 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11616735 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077883362 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.09410805 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.270776414 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.12451019 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096728344 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07718714 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078720109 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097396109 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389664913 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.077020286 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.693234127 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078813839 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.087213948 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09590213 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092853839 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085900267 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102764825 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.097085963 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.095285946 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079746696 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077648221 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093958633 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078122063 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116348613 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124249165 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082092544 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096094047 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145547594 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.090342094 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.074625732 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114804615 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108136908 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.095884755 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076269302 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130822905 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095778956 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078162456 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137193118 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078551348 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116376007 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.093734664 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124904525 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.093922105 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.168720088 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.0888655 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107667082 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098505928 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128570463 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109381147 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080178855 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101757953 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076248323 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.092598826 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144374117 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.076673815 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09334987 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078449257 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109055695 seconds)
  done (took 22.357279044 seconds)
done (took 38.850684845 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.357697684 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109225403 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108721174 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.110054168 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108133258 seconds)
  done (took 1.540039947 seconds)
done (took 2.267420079 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.278928856 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.176185183 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074188306 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189138142 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07410603 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.179654963 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161437255 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.109882013 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.189036308 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.090986749 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.167538939 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073778836 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090841275 seconds)
  done (took 2.601223328 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092861907 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114408224 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079622396 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092074863 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09143179 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092596771 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108729622 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099515048 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107687325 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082730806 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091679554 seconds)
  done (took 1.775684682 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09067324 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11222009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08036243 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091318171 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091032748 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091211923 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108276255 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097374508 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108769855 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083509076 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091045372 seconds)
  done (took 1.764318738 seconds)
done (took 6.856566275 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090424285 seconds)
  done (took 0.80952977 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.038077718 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.146676598 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11715458 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16375005 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.33142781 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.214314799 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.605117787 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.133477238 seconds)
  done (took 15.669531456 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.112342994 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.114676559 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077976986 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096797706 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078416363 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09680985 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078778709 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096130528 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.079376229 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.096807115 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082831425 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.096982037 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082578249 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.09583857 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080453062 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.082611892 seconds)
  done (took 2.237561443 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115675956 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115167765 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102124584 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087575335 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100916486 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.083291653 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103189385 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.1003723 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082599779 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098405523 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087837984 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101916725 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.085599674 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097603939 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.085676756 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104032094 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082311299 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101598931 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086517742 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102003461 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102681129 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084041508 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.101142904 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087705164 seconds)
  done (took 3.138122088 seconds)
done (took 22.576947954 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149379618 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081739452 seconds)
  done (took 0.95384786 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098254634 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11675213 seconds)
  done (took 0.947703152 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105342582 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094644213 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.133478784 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096960202 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.096667174 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080128839 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12816143 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096487982 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080269262 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09596243 seconds)
  done (took 1.741479514 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084549357 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099535416 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088673654 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116406974 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.091752117 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098767322 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.084546064 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099706483 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086107089 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094664887 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08811268 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113531767 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102674962 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.099214868 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.101939546 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101725326 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089038264 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100726757 seconds)
  done (took 2.474684243 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07882037 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081060211 seconds)
  done (took 0.894623681 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082549553 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093575957 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082588658 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097739818 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078365898 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094074745 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079664535 seconds)
  done (took 1.348865256 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.482694243 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.140462353 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.269124805 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082574185 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120481006 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.317466533 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095152956 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082865183 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101501188 seconds)
  done (took 2.483920109 seconds)
done (took 11.578841019 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.090345635 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115252585 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11288338 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.472833574 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.115894975 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076861153 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.157667117 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256421705 seconds)
done (took 2.136588759 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.148668222 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339477503 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122107928 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085254763 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078942003 seconds)
  done (took 1.367730139 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.077610249 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080157726 seconds)
  done (took 0.899121414 seconds)
done (took 3.164704766 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078506976 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.128427056 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077245283 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092680082 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076260844 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077022396 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.093717846 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074453956 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.094994256 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07825915 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.076865962 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093749262 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076900579 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091133843 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07535885 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093738837 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075259348 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074313434 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09204887 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.074896846 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092975404 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075478587 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0747904 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093635401 seconds)
  done (took 2.806593675 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107384169 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.095011777 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084418856 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.099650599 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082805979 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100761288 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.083877681 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094364285 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.084452764 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.096054125 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097708711 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082782294 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095063578 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08317606 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09614219 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082879809 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100220017 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078904372 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096235182 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.082522333 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099469932 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078324284 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098416232 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083991474 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.098732929 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082593705 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097543243 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.078603347 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100353475 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.098796027 seconds)
  done (took 3.488493359 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.083260687 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.075186745 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.093369638 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.082873818 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09171204 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.080518132 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091479362 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076441376 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.076019734 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092259928 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.076783222 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09116243 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07567186 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.092904529 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07737178 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078098194 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106313662 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.075349856 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.091966286 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.075595685 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.094804176 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.075166254 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078324688 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092900366 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.075044282 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.091360571 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.0758222 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09107974 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.076307876 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07549719 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.094666932 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.079388204 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092137779 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082117967 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094917379 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.187228314 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.078747685 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09153619 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.076091197 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090842501 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.075146105 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07489594 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092164832 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08188259 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094796439 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.077231749 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.092023948 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.076714494 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.075047669 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095578369 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.074756466 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091345096 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.077222985 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093400444 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.079616902 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091162041 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07665887 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074828053 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093284512 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075208866 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09085633 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075540064 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094131738 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077191182 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.091702021 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098843622 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.07608772 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.094300477 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.080623164 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095104199 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.077785011 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106577157 seconds)
  done (took 6.947432316 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080816355 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102360129 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078107145 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07767923 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092355007 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07677876 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097103011 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077180198 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095036781 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094078529 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093145884 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077695941 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094957904 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080337601 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092947977 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078705291 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102794798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073991472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.092468297 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080998548 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093076035 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081709337 seconds)
  done (took 2.67453529 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213142468 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102990032 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14022627 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093687864 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114648002 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110465662 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.083785948 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.1026673 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083176191 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102806791 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086458488 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099050709 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112072059 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085896538 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10334277 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087646546 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099211159 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103850968 seconds)
  done (took 2.686635375 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091767532 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095829327 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101991687 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096646589 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079557163 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099187588 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085801853 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113137507 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082313024 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095454229 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089329746 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098872875 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080699198 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095661539 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081221131 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095389706 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.081592592 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095223523 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089675597 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10245729 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102225624 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089734565 seconds)
  done (took 2.800192924 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.094269636 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096972578 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100789463 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099592149 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077361267 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096970737 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086527418 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095349546 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088650984 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09722706 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079827199 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097029474 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087086029 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096024026 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.085356539 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096200712 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081370048 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09563474 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081464451 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094967484 seconds)
  done (took 2.584572912 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119476143 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110264623 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093870767 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121308323 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094177395 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.111087176 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121669678 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094112788 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110416618 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.108453716 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111068544 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110674748 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105160844 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116470235 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094325866 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121019641 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121204781 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104353038 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111156188 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094280851 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12550048 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110917162 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104310593 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.11122224 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094164552 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11091242 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093383791 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117957328 seconds)
  done (took 3.79493456 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078693019 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078262742 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093037032 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076163196 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092943004 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076856141 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075873407 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093321136 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079361524 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092498971 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.078143238 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.094745754 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079485169 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078435862 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095279858 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.078367483 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095296651 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.07612714 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078671896 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093971037 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.078200987 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095490261 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.078619326 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.092732981 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077323952 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.078350851 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093334468 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076528286 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095279829 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07674907 seconds)
  done (took 3.286583902 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090559091 seconds)
    (2/2) benchmarking "in"...
    done (took 0.10371611 seconds)
  done (took 0.957412338 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07720019 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112618774 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076074192 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082533742 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103156987 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.079747916 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10636299 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100911796 seconds)
  done (took 1.495722467 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09828319 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114797228 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084389823 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.108087619 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098235775 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.114041122 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156048539 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085861117 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085034122 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.094577477 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.096248855 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.09527237 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084258406 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096915293 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.085385647 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102524532 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080546503 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106679668 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087426462 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098873981 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085674063 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108253157 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082123528 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.093603178 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081999059 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107828949 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.089705728 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.098385609 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083165063 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106141112 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08614996 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073331418 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101327493 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084421921 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097426449 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.09726028 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10996823 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082865092 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10527088 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085002589 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106547673 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.078339005 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.103151845 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.086117046 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108253561 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085809645 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103440099 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077921674 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094223769 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.082116147 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094634237 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08171114 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.073758261 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104973854 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084168623 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111110598 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08171318 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.098115034 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082950774 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103561056 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085892011 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.09911349 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081714844 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100127138 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087527067 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.101421102 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087928689 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.095516976 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.074180493 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080349958 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10603009 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119712669 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089211804 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102493125 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086241734 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.098044388 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083614641 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103107036 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08868937 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105885782 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084670993 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10407111 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088492771 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096695603 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.083261555 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087048514 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100081002 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083359206 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095240865 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095946554 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100071767 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080549263 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094397185 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.089913184 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.10055707 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084759205 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.093748168 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088349701 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073687262 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102533984 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08610996 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098569237 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.089553979 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10287839 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086041989 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104978883 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090567373 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097854042 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.0828209 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093637678 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085806796 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099456735 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.0878369 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090525678 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084180561 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081348865 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103421272 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.105229286 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082977804 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085260728 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10544778 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087437331 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100090302 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076060647 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.101122818 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084483545 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106468341 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.087898714 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100260616 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078211406 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095903504 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084701474 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102058122 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084975039 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102623475 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083555652 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073608391 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099587809 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084916268 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106228224 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080179417 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.097811388 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.085474774 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.098729318 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083503763 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10412331 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.082164225 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.096016908 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.085392496 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.099326246 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07931154 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106177943 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.083208015 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082419607 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101577925 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089392338 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.100342675 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085681573 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100258101 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084910308 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103347674 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080062769 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0973852 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082968259 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107688095 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.082233348 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078198491 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095120345 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087865086 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095083042 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083855121 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.096830381 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08291205 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103144952 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081846586 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101485249 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082499085 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114265186 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093498332 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103700964 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086197892 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107966594 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084084177 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099414977 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084518242 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086141539 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103668199 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088263824 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103998565 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085890833 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101021145 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076508477 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104641326 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08838335 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097649493 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.08115245 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096750244 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.085355172 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105717435 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086289241 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103079607 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083389618 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08068984 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107717426 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082737928 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101446093 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.079197824 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103197783 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.079913525 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.104497376 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087289325 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.108919882 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083729164 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095995154 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089395594 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100076991 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086656184 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097257119 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.078946036 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078523617 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104025757 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084018265 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101138729 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074936729 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105718789 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089103854 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097899853 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.080369391 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102606151 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090156048 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.09938128 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084676786 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.084073325 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104161564 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111503349 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080396055 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083273811 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.108626999 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085445337 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09257754 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086742638 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101172432 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080268878 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100962555 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082268734 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101469445 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088596532 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.103777438 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.074426597 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100578619 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.083542897 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.078816111 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097017941 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087490173 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102845237 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082677519 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107489637 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086333704 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103900023 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084928584 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103546758 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086798216 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.104254939 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084086003 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103502878 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083585447 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.097639465 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.083330066 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.079711412 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099960884 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082298705 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103347116 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08122369 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104209775 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084799631 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099020905 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086803532 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103899663 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081517718 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.099153386 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.080837289 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084737308 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10039475 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081305766 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.101560059 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079244453 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106678672 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085922393 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107659601 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080609521 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095791912 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086806174 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.101064214 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087793377 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.085980094 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.1060437 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082484141 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102772616 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.084628263 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108815101 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078048247 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109230199 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087540111 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.100546435 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084132489 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09894231 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083082838 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.097867297 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083251972 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104209785 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.081731232 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085274296 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104273443 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083341863 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.0998512 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082584364 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104811956 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081794462 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105291529 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075885249 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09778568 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080915365 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085085136 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106958099 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085841914 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102242838 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083911583 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105313268 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084665863 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096059235 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090418536 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106246915 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087023655 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10816121 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.080738995 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.099998247 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.091594338 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093120653 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084096948 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082446139 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.097677237 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089183254 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.105183983 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.098383122 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.0990824 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081337586 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096312781 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08741201 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101746623 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076084366 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.082136623 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102840579 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083509302 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102177866 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086652247 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102319704 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087161331 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10794251 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085177631 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102312634 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086568982 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095820174 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079999007 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.079313008 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102670909 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087099382 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.097371366 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078708141 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.10419047 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083346644 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.099844067 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085806247 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082598973 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107925069 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08533073 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.102482703 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.090537988 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094930273 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.085120878 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102771382 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085255201 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.09836517 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086074274 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103014314 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087425106 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107974399 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.086278691 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099779483 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086083566 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.10084849 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.086372272 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084987422 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104974705 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.080987313 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.106166196 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090253381 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100962097 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.083389556 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099858477 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082578508 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.104793822 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087433984 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.101962199 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089615628 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102717518 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084086426 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.08810859 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104851615 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085784584 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106581705 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083426938 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106620339 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081146375 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109402905 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08240965 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106952977 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083587767 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.097917933 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087303869 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103708022 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085835916 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.086759538 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.106428961 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081280545 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.09955542 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083074278 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102404801 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09100705 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109526228 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085329675 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104157086 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080899453 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097183409 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087839428 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079337356 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103015015 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085542594 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10718677 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084968844 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101512379 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.086218898 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109377414 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088420383 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106081363 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079945764 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105759494 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088290314 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103171644 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.08438617 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100599508 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089692694 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.105712553 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085035256 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.081313083 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109115366 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08732346 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107559256 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083983007 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.101625964 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083451844 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099482024 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08843961 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103417662 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089417776 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103114017 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086944092 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111721325 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082445734 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.100814192 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09251096 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104014656 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090534568 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080670245 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102534789 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088450693 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107680476 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081153833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.100197685 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081100526 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10418254 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081918252 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098732152 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094017893 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109323071 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085065138 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102989233 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085921342 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080753056 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099514064 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08193768 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107114332 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08464597 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.112189212 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081943649 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.099834476 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081156766 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105167741 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086886379 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.086443408 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098477869 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.082310812 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100277334 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085133377 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108772889 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085610633 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105468987 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086918168 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.102955936 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084222207 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110382193 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.079915946 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087347401 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113079606 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.087482037 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102495843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088174478 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111523215 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.0880834 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099728416 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08821682 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103995541 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.083134761 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.107031253 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08869942 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116389551 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086802743 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100360985 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086027416 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103724774 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082383171 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.10907421 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08959433 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.106978017 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.08893754 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103636343 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090236803 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085011004 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108341568 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085175925 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.104448356 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085801606 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102132718 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085863217 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099983502 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.089354236 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.108793408 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086881033 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10803193 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082908439 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112483785 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091499252 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106585676 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080276295 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081618798 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101666007 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08185616 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107184723 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082345071 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103779157 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085113067 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.085486713 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102804269 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08925935 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104166594 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.088673455 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10565165 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.076654082 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102833403 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.086679397 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102492863 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080035835 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087134186 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10801048 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089232346 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111077446 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08350627 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.106208371 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084752149 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102788866 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082074512 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108070837 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087151339 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.104639346 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083268352 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087451632 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108534209 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086792113 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107402857 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089756532 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104851208 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092221721 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108799554 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080889999 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099681599 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089324336 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103609198 seconds)
  done (took 56.415783985 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149522104 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087869023 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078424999 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097144203 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123969208 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083667814 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097031902 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082946464 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101287003 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093352809 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097167878 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078819935 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119765293 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128113639 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122101885 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.094700584 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097171874 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082641775 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096835869 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083872903 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119600675 seconds)
  done (took 2.928605675 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105105354 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115181671 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113333984 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101311051 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109576543 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115706521 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096837532 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11665287 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.120384896 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091353239 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120560783 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116333675 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091679442 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111523472 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091178749 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113393934 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120681778 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089276897 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116797557 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115524252 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094615457 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114516129 seconds)
  done (took 3.189525358 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092689978 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086813137 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.10648866 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.07787035 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.105440507 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078459642 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.111260177 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081092045 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109913802 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.082470795 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081590648 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100832971 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087495257 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.097921154 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.082655671 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.09922496 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.156819785 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.091716172 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106085051 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088954482 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.100777265 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086302561 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.080739876 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.101159737 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.08176229 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.115903435 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.088574755 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.106449241 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.088177909 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.100724157 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087582333 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080337411 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104133629 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.083109969 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.101533594 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.082731792 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.105362458 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087004176 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.08077184 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103746923 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083876315 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102020767 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088285311 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104414928 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08413081 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.100292789 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084968884 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.086230965 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097783737 seconds)
  done (took 5.436010344 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.116459667 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133399817 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103363802 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143821749 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118982634 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093188372 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104713281 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142190417 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.077968192 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102372497 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.099883999 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117753186 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105168704 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090098722 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.1069714 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085928653 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108818789 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083343417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113317575 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104437779 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.093058775 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.111428247 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101144653 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118799853 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11238475 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086245931 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103458125 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.09368805 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118277714 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111773172 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090837812 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110459098 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119068033 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087051949 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.098663391 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086628653 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121016389 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084326927 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106176542 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.078616232 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106535763 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108738988 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088479471 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121160465 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084930269 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106937866 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106949812 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.081303778 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119469045 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090372474 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117963624 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120950988 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091635421 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108318221 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093530462 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123620233 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107367936 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084611444 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109608326 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098300073 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101847822 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092208566 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120677557 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109824361 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.097175887 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121949918 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109498936 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092889803 seconds)
  done (took 8.064533569 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116667273 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112574884 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102694404 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124193152 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114535749 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092241129 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113960176 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091840877 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114296408 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119670856 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092839804 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1612314 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.109330592 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098497403 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112936607 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091842632 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112653951 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092679118 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113286675 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092613391 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113946086 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123425115 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093461914 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124696552 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126706304 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089593566 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113605003 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.0929978 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12393658 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113614407 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126353809 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093206063 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113042935 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104068195 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.126304304 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113933379 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086553582 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11352594 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09290861 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113885233 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08980299 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12421851 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113975739 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090786521 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113823168 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093567654 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125575287 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127325284 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098734276 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120202657 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113407628 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10344836 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113454331 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113099751 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105321074 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.131440274 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125124761 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124027052 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093880679 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124234619 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125291697 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.112114317 seconds)
  done (took 7.693321773 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115350098 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115662191 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121959714 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.076647536 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.098903426 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09073065 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098665858 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.078843021 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114516966 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095520718 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117778128 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109406635 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093341857 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11787979 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109504744 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093147828 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10865459 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109445838 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095296183 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10983517 seconds)
  done (took 2.901890503 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093388947 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.121531372 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082031763 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109295752 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.085507619 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111853086 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085682527 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109013455 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085577897 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109472307 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098875594 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119342146 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106304952 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092683726 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116415099 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091608336 seconds)
  done (took 2.445911633 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095767279 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123269342 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120913219 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083259171 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.100898072 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080344852 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.084650465 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.09947018 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.078966772 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12179183 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085337616 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112394992 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087946796 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.105462228 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.081001075 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.112578623 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.081196168 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.104398604 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087442006 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.124846867 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095923455 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108122002 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.087601296 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107996794 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102788573 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088658419 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.101208918 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.079702047 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.1009231 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086099765 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103441685 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.0910944 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.097351964 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.082295116 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10404413 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082753549 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.087608744 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110036543 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111300261 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089105615 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08264088 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105832317 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087964085 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107690861 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080396865 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10993893 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080840935 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113071204 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.083695805 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106491865 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087332207 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109735061 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085909715 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118872282 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088499841 seconds)
  done (took 6.172193554 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100159785 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105375225 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076443489 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078380667 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105413615 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083690287 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105979117 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.083688455 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104218543 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078744897 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105077661 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086149173 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104269402 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.084753935 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103903801 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08494314 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096623047 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.082915665 seconds)
  done (took 2.508141234 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090028784 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081707625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.112349556 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081339121 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102610281 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084337208 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100457493 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082392463 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103043238 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085309663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105066194 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08788597 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104437822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089037633 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084940698 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107625616 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.087597936 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10550861 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0856028 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102911106 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087704255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104392725 seconds)
  done (took 2.91660737 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120642778 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126799081 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093920854 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.21862945 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.126933713 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.111268071 seconds)
  done (took 1.633074399 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109189789 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138677871 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082194093 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106100456 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094319715 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107370079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086095213 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106214113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11737921 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120851577 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087279142 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120928371 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101021794 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119825343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11630543 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096797124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107791791 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106371319 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082991174 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12766764 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086069147 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118586626 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106340074 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08664117 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107475369 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097405474 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117596062 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120426891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08621272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118834949 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114378809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085808813 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118927632 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120034158 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084783806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11899634 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105649898 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108323026 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1151449 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117198786 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084104006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114342474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100414315 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118397301 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12306627 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090148459 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119950568 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111806372 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0909761 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14029665 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120769128 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10122855 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120415822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123571778 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10207609 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1394009 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125595395 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123259824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119900857 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106420379 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122574494 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120221618 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101980153 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124991825 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11985013 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123157789 seconds)
  done (took 8.106580498 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121235873 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104126969 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086573108 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121281091 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117972598 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086318363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107029609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10697372 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086750291 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103537641 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152685624 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087524783 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117597611 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118245265 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087847507 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107067623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08631562 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117160148 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083594526 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134506692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107329021 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117364315 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097798385 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118285001 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120328226 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114163391 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086972915 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10646963 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086734142 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107927204 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093793928 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107329762 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11925173 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08286557 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116741306 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086996501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107252299 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114253744 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087465598 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115502723 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117540075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107415217 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107728493 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086615941 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122157242 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107434294 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087151183 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104747611 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086777463 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104620962 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120437523 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101319714 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120314858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118247464 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106972472 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087029934 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108320246 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087510304 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107128845 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094844776 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117910322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10773095 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135158862 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087843469 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107392998 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098517732 seconds)
  done (took 7.814552938 seconds)
done (took 152.493895806 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099464766 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136059602 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095577189 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.164317348 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.081734289 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135679319 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.114935191 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.118040727 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.082249709 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081177395 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.103492329 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.083786421 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.16736669 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082007889 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10207446 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.084455755 seconds)
  done (took 2.568544723 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18297402 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.29106647 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101278288 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.102431681 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.086396353 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10378919 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.08022504 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089755749 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.104025882 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081086403 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.102635357 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.082600115 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.101705903 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083100516 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10425444 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082553456 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.081263047 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103296639 seconds)
  done (took 2.814707386 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113513382 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15264458 seconds)
  done (took 1.114608664 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119468192 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173597147 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.271693001 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.150286347 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.132559475 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096373247 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.151932585 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123757305 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200536782 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126990202 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.126331891 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.089350174 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137055703 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091518193 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112155116 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.089409518 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.137489803 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110314204 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091337987 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.110953349 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.114475768 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103148446 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092194339 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.110016963 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.184999547 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12573114 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.082051511 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08104548 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.111806186 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111864679 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.088540773 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116663406 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.103293598 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.165959729 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095417314 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.148134137 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.110475219 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.087938739 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112220377 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088016318 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11398308 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113798287 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.097443804 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109771048 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.081384688 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.109717476 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084418238 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08196655 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111062995 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.091238513 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.110888859 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109212272 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148244954 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091198226 seconds)
  done (took 7.17652676 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.818443885 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.149267886 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086643579 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.921307886 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.134850494 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100921159 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.810251771 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133604368 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229655806 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.798977093 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125029649 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.11896331 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206131545 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247735427 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.900178365 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311001697 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.699414701 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.348519156 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142706419 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.152554757 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097052641 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134762127 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.127882025 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.404272825 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112335888 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086888316 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114100628 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11656665 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159405342 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.090239771 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111083719 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178960997 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247750488 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205719829 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092394408 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110559307 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089010346 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.160547552 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.276279061 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217033431 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.156880465 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110402329 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088575983 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11835404 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128012518 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.083260583 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158894065 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172293208 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195623557 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094859626 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122284879 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098241939 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122438016 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165996002 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.090004617 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321747743 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.327242736 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114490023 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100028055 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128987991 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.248218969 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113993562 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.232134941 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117155527 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.22201565 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0915586 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.788997594 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169300977 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.1146515 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096886832 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120588187 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096170527 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122120987 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168456735 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393152103 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1029545 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114496153 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091098013 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229397149 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09181668 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112440926 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16655138 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093776163 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121272601 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102696493 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122308033 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170510149 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.227020383 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126428103 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1207772 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095436498 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125568804 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.092130293 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212291151 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223484423 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162489409 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213506925 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122834563 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164393586 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169372772 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122685413 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171496959 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120958924 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105412969 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125370055 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224885472 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144506573 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.09107459 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11810137 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.098531921 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147689421 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.094483134 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120962292 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170596849 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.48581138 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167711443 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.087594826 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117485826 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097595079 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161153725 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120654169 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245160599 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122825976 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168613037 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120336835 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.08799989 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121554325 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167103223 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124990506 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0985624 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125945749 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098014386 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.251846241 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.20303681 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127026438 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22497218 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182388244 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121227243 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175063378 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121707258 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169814926 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099458679 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124236893 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092008899 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.785754224 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121368392 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097962205 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117674742 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187651823 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09075279 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09118373 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.114547208 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087781215 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792875826 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.093582719 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.111604726 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.091727192 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119871095 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098361174 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120087333 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094082469 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188532631 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214192025 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.124702561 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120908569 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.091787754 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163873225 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11651 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092114101 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.11514161 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.093105043 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121503342 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094939815 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.114989502 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173028141 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.169908165 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227552843 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.583733248 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.115317474 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091798351 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238252466 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090466194 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298932533 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121662214 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.208748979 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192070587 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.089089315 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321515917 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170317446 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190150334 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.094997362 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.169865046 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108109112 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.094782856 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.183124072 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090552992 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117487335 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160805269 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103288622 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120061014 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926463345 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086250423 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224564724 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109861597 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171097675 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.093284072 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123442479 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30126774 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090503528 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127665285 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164731576 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117935077 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.092856846 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.715254725 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111725614 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101050625 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1168819 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228531823 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170191249 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121870152 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098578955 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123142608 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166912791 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.214401881 seconds)
  done (took 43.664957788 seconds)
done (took 58.187466564 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285163943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218732217 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267846292 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.163079144 seconds)
  done (took 1.901536204 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.18080653 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.125960884 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.142584551 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.102217025 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.12718807 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.102174723 seconds)
  done (took 1.661468697 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.373553671 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280285102 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242452248 seconds)
  done (took 1.78388445 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.252201943 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.273763887 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.33089227 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.426581541 seconds)
  done (took 2.272832714 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205075253 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126003035 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.101173038 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.138370311 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.150080983 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.213276162 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143351217 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.155216382 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.110918892 seconds)
  done (took 2.279016725 seconds)
done (took 10.790802555 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.248217905 seconds)
    (2/286) benchmarking ("sort", Int8, false)...
    done (took 0.249209531 seconds)
    (3/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.275291175 seconds)
    (4/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.10164936 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.27124224 seconds)
    (6/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.117161953 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101779831 seconds)
    (8/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.12415235 seconds)
    (9/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.167674275 seconds)
    (10/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.25537855 seconds)
    (11/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.10019215 seconds)
    (12/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.230656896 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098119549 seconds)
    (14/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.116072248 seconds)
    (15/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.17569309 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113746164 seconds)
    (17/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09325696 seconds)
    (18/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135205605 seconds)
    (19/286) benchmarking ("sort", BigInt, false)...
    done (took 0.22494891 seconds)
    (20/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.11854861 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.126697739 seconds)
    (22/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137552513 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.090185107 seconds)
    (24/286) benchmarking ("sort", BigInt, true)...
    done (took 0.241053047 seconds)
    (25/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.229662347 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.246378696 seconds)
    (27/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.268219707 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.101846103 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.236138505 seconds)
    (30/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.074272515 seconds)
    (31/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.179870276 seconds)
    (32/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.195912425 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0960694 seconds)
    (34/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.103405592 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099594699 seconds)
    (36/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.184003524 seconds)
    (37/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092263723 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186914233 seconds)
    (39/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.114731645 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09914237 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.114658966 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.10938475 seconds)
    (43/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.107143609 seconds)
    (44/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080195939 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.089864062 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128217559 seconds)
    (47/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.179085547 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.193771007 seconds)
    (49/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.14362803 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.131686101 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.080025784 seconds)
    (52/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.137070608 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.219613781 seconds)
    (54/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084053289 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.19328765 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.112755361 seconds)
    (57/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095876949 seconds)
    (58/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089991721 seconds)
    (59/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120114623 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.13366031 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093233169 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.133964389 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08720362 seconds)
    (64/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089216118 seconds)
    (65/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.164672735 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.132434441 seconds)
    (67/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.211961776 seconds)
    (68/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.169631542 seconds)
    (69/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.168059069 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.084271762 seconds)
    (71/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.166363511 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107553341 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.152986397 seconds)
    (74/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.09894172 seconds)
    (75/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155468875 seconds)
    (76/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.109970254 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.081603666 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.197851348 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.148831422 seconds)
    (80/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.179780934 seconds)
    (81/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099729305 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.115494709 seconds)
    (83/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.071921617 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.091798198 seconds)
    (85/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.189187871 seconds)
    (86/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12789845 seconds)
    (87/286) benchmarking ("sort", Float32, false)...
    done (took 0.177651272 seconds)
    (88/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09352889 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.112947989 seconds)
    (90/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.123657004 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.111581823 seconds)
    (92/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070612883 seconds)
    (93/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.211376512 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.087330176 seconds)
    (95/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.1698301 seconds)
    (96/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.100608917 seconds)
    (97/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.099469835 seconds)
    (98/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.131719131 seconds)
    (99/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.112309136 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.077498102 seconds)
    (101/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.239791314 seconds)
    (102/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089216877 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.124965167 seconds)
    (104/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.195243599 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.170509214 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.151506939 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.114444448 seconds)
    (108/286) benchmarking ("sort", Int8, true)...
    done (took 0.227699786 seconds)
    (109/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095970514 seconds)
    (110/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182059532 seconds)
    (111/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.089816253 seconds)
    (112/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.16793971 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.095595775 seconds)
    (114/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.102069822 seconds)
    (115/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.075136391 seconds)
    (116/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.088178888 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.23302372 seconds)
    (118/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11523906 seconds)
    (119/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.211109492 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.091799619 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.073908545 seconds)
    (122/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186686937 seconds)
    (123/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.116500592 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 0.185889079 seconds)
    (125/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.070056698 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116456687 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.090874406 seconds)
    (128/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.083280338 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.102500739 seconds)
    (130/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.109660125 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104673324 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.088414089 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106326515 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.191932273 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091241368 seconds)
    (136/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.080919733 seconds)
    (137/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185976755 seconds)
    (138/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.157909769 seconds)
    (139/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092672774 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.095694079 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.072821416 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.113918884 seconds)
    (143/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083186677 seconds)
    (144/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.179717321 seconds)
    (145/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.135405236 seconds)
    (146/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.095415013 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089563538 seconds)
    (148/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.106550205 seconds)
    (149/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.0723493 seconds)
    (150/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.081342855 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10672283 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.089630315 seconds)
    (153/286) benchmarking ("sort", Float64, false)...
    done (took 0.176691219 seconds)
    (154/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.070086474 seconds)
    (155/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.169589239 seconds)
    (156/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.134759528 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.092376767 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.096709473 seconds)
    (159/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.070293013 seconds)
    (160/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.089654757 seconds)
    (161/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.161607233 seconds)
    (162/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.072957343 seconds)
    (163/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135663846 seconds)
    (164/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.085881971 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107507586 seconds)
    (166/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.070529578 seconds)
    (167/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.107604327 seconds)
    (168/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073021118 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.121215777 seconds)
    (170/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.083195629 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18503374 seconds)
    (172/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070302346 seconds)
    (173/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.070049047 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.105715602 seconds)
    (175/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173120584 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083655891 seconds)
    (177/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13386427 seconds)
    (178/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.070139181 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08188623 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.123972123 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.137277749 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099933619 seconds)
    (183/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.170049006 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09438325 seconds)
    (185/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119134758 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.087657351 seconds)
    (187/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.074095402 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110921874 seconds)
    (189/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.127329298 seconds)
    (190/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.204491305 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118434472 seconds)
    (192/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.07033364 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.1316528 seconds)
    (194/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.070506894 seconds)
    (195/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.093452267 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107314448 seconds)
    (197/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.093273012 seconds)
    (198/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.09428823 seconds)
    (199/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.114274231 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.106162541 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 0.228269212 seconds)
    (202/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.092635048 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.105215053 seconds)
    (204/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.084609319 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.082004585 seconds)
    (206/286) benchmarking ("sort", Float64, true)...
    done (took 0.238800995 seconds)
    (207/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.110383772 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096860359 seconds)
    (209/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.113809357 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.163443962 seconds)
    (211/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.241871405 seconds)
    (212/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.097627556 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.089133103 seconds)
    (214/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116220319 seconds)
    (215/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.091425237 seconds)
    (216/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079852752 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.107515974 seconds)
    (218/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.072793776 seconds)
    (219/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.10763245 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073598169 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.081049942 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.10447807 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073066535 seconds)
    (224/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.175491719 seconds)
    (225/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.174391709 seconds)
    (226/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.070844305 seconds)
    (227/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.07649405 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.109349349 seconds)
    (229/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.095467101 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.095788055 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081316473 seconds)
    (232/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.072868579 seconds)
    (233/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.10967206 seconds)
    (234/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.071403114 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.109748088 seconds)
    (236/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080392676 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110000246 seconds)
    (238/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090301673 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.073535714 seconds)
    (240/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.094655675 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084848086 seconds)
    (242/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126275077 seconds)
    (243/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086005247 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.191815687 seconds)
    (245/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.131308792 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137724598 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094779389 seconds)
    (248/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.110363701 seconds)
    (249/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.084234148 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121569269 seconds)
    (251/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078153406 seconds)
    (252/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089443702 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.101006367 seconds)
    (254/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.10755097 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.09475302 seconds)
    (256/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.070706227 seconds)
    (257/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.108406027 seconds)
    (258/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.071272015 seconds)
    (259/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.08064568 seconds)
    (260/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.107986617 seconds)
    (261/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075886476 seconds)
    (262/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.095442537 seconds)
    (263/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.084446983 seconds)
    (264/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.072941303 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.113784441 seconds)
    (266/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.072953827 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.105141184 seconds)
    (268/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082591005 seconds)
    (269/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.070426822 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.10577868 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.091171436 seconds)
    (272/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.10816197 seconds)
    (273/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.08179385 seconds)
    (274/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165475742 seconds)
    (275/286) benchmarking ("sort", Float32, true)...
    done (took 0.240236089 seconds)
    (276/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101434092 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.109385282 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076401365 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087667769 seconds)
    (280/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.099888454 seconds)
    (281/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.085866115 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.106599971 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081804973 seconds)
    (284/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.079114142 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107687743 seconds)
    (286/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070822975 seconds)
  done (took 36.036221104 seconds)
done (took 36.937708528 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100889774 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151858574 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098618425 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.140829425 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.100447188 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121636352 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.092804948 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119545118 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096633078 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.122442462 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096786734 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.096996375 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.094850668 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117756849 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096477415 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138299429 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100337403 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092914962 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.114579147 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081562744 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.110237642 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.082351963 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.108617469 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074437155 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094768371 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114600257 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089304934 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.118148821 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08291541 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.106982544 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083229794 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115172395 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.083734038 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096575541 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.11386887 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.086912387 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119341381 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093305323 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.108942689 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.083310436 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115044447 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086017568 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.090043723 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.115923585 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.084357969 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.106368961 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.088668388 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.120526788 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114435146 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11173934 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.091242141 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.117513049 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093480717 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.113071453 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.082162019 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.086547072 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.106595773 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115333465 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.110852163 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088307676 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115226422 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.090736882 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.105456661 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.088019579 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110825423 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094941778 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.117059838 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.084423817 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.092850274 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11199176 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083480859 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111977835 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.082470274 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.106872357 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.093465309 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093897656 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106335626 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.084408959 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114184679 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.088592366 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105905661 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086184016 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.08473795 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.108518437 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085169096 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096847727 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08186607 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.090205538 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.10636895 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086705445 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113903391 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090896002 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.109968756 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099564373 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082635868 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.109574493 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083724286 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107018822 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.085950531 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.106453134 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.084725775 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086340976 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115350758 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.084449441 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.10842112 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098001919 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.106843969 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.090199306 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082628204 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.1066805 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.098516597 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117417205 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.083117776 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112819066 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086889818 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.08801898 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109411316 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083412857 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109085101 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08558289 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.109267746 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087175849 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085746391 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.109558936 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.098487441 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107347276 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.082524016 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086798345 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110749805 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.089047093 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.107950293 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.083057221 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.109735533 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087252037 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089093655 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110569086 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.09058716 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115649132 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.092432915 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115277429 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.092926256 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094026252 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116222807 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.085470065 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.107895285 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078324456 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088387832 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113810846 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084348841 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.107106952 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.085928939 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.107105593 seconds)
done (took 16.094873132 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089193663 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184715687 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.143007965 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.119264947 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12996925 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.084042694 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119647348 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.141736035 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.089298928 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.141355161 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.106883061 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.128948311 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.146883665 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.083203439 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.0838332 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113357574 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.084623292 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.125170818 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145193571 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.110635532 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142262969 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.082105744 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.138952478 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.132275056 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093499768 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134526791 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.086924363 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087906091 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112260703 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100239178 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129740555 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087371959 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108698603 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105490689 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.126195762 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.09197792 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.107884224 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090520487 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.1076113 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.084390523 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130885306 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105665479 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.112606835 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.089898993 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112396973 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093003124 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.109056172 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.092793252 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119419615 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.088151394 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123362796 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.113025286 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111357002 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.100280221 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.106151175 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094768858 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124800337 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091674312 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109370595 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091701275 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107802463 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.087662935 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124168642 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.108129002 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112249509 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.099562258 seconds)
  done (took 8.223783494 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106753163 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138817592 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.101642001 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12726537 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.083556117 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108632217 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.084717025 seconds)
  done (took 1.709585674 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089632774 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.12739614 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135372636 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135262303 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.107145083 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.135842517 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089442345 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108892075 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.104047126 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.110091637 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109748411 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149828109 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088561561 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117384667 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.112704231 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.108980691 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112665868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109229818 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088049317 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137662455 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087382915 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.128251715 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.086794484 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.10894551 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103677242 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.085897331 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157792822 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114290543 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083030532 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.088033734 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107586654 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150349658 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102886449 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118137645 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084496312 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128654327 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.103782237 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106359994 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.102127619 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.114490757 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.104038639 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.085800777 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.11084744 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083401898 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.114152899 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098662031 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113559796 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.086122471 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.087921635 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133949588 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.085984479 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127365515 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087088186 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.113801121 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.086420683 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113042844 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.094943457 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.110323386 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110551546 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083625156 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12980958 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129272204 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103140138 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129107449 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087448751 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127069932 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102641032 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.08768595 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112330655 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.088451293 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129828979 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.082428328 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112348259 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.09883584 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111310733 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112448103 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137086567 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.086912269 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120894978 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.085842474 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.086472037 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111378854 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112833685 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113403574 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085420606 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11523873 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087763195 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108244267 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.085145699 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088941203 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.108288126 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.086756121 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.113049904 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.086520307 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112509223 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106355343 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.110969654 seconds)
  done (took 11.329423979 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091638448 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086777451 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.114108715 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.086325587 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111173274 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.08725024 seconds)
  done (took 1.54083607 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119159731 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111254501 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100022096 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.114545492 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.127201777 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.136476911 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110634205 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.118936002 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.128065781 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.098013244 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.137984179 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.111682038 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142746196 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.090266608 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136677454 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.08949961 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137057717 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.091345777 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.120962155 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091494104 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.126829817 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.090343721 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115609341 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105325199 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119775373 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.091244418 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.116276923 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.097639052 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.12093843 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.095238032 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.115789181 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.09543235 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.116294658 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119498941 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111183293 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.115265064 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.090934385 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121395915 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092964983 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12004239 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113503778 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115745924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.097562304 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121787268 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095087775 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.116409516 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097225603 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116288035 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.109885266 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122275737 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096723192 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.115506581 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094977102 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122770296 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.091514694 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120465603 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096998608 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135120286 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.091246553 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.116749458 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.087746095 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12102216 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095158207 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.119996073 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.09623651 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121383051 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.116034298 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.091984701 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09298179 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115243907 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.097509155 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.112947848 seconds)
  done (took 8.917180211 seconds)
done (took 32.667802457 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.689946327 seconds)
  done (took 1.651305951 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.821214565 seconds)
  done (took 1.789046785 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.102463858 seconds)
  done (took 18.100844211 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.474775314 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.53809176 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.969333217 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.162114597 seconds)
  done (took 3.112147689 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.964218182 seconds)
  done (took 1.947985418 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283285842 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230589577 seconds)
  done (took 1.483326231 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774053142 seconds)
  done (took 1.752346797 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.433681707 seconds)
  done (took 2.41480782 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.327505605 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.156931756 seconds)
  done (took 1.474119498 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.571007613 seconds)
  done (took 1.556437099 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.835577647 seconds)
  done (took 11.825162713 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.246822901 seconds)
  done (took 1.241177391 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.293901931 seconds)
  done (took 1.277651693 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.55044122 seconds)
  done (took 4.531306591 seconds)
done (took 55.123045477 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100857609 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098798391 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.123441029 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.096142008 seconds)
  done (took 1.396394197 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10729112 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117222305 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101808257 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.116197171 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102427159 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117411462 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.094445619 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.128379715 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092065192 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.118995921 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.092219768 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.091454805 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.120410191 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119624951 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.089907225 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095561695 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126073371 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091741268 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122628322 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.093057357 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114465931 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094544769 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122519797 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.090358105 seconds)
  done (took 3.555928932 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101754765 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.09085595 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118537518 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.08999514 seconds)
  done (took 1.396054517 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101887624 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127409855 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.103353722 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12140299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.103673365 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.127145397 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088664773 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.08762873 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.116662215 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095359864 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112564289 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110348513 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127926383 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.095739082 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.123669725 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.085102513 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.113380071 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.103596875 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122226981 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.097426577 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.114073442 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.096794225 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.086879903 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129171995 seconds)
  done (took 3.588674522 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174692449 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124545607 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.109401073 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116964625 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.13187615 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138005863 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.084129953 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.137490178 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084549846 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125941867 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088598661 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.156554594 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124051027 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.085098903 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.084320811 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.110585849 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097184052 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.123231416 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.087599429 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.124212371 seconds)
  done (took 3.304106102 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100485668 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088966468 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110195513 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088716204 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121357088 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092802124 seconds)
  done (took 1.59496983 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099704385 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.086300808 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.115688265 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.087334506 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.116968924 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.084663614 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110594405 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.08659862 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08599721 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110349456 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087537091 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110395402 seconds)
  done (took 2.183226612 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.517968081 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114655643 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088460227 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110204387 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096349101 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.111492864 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101839276 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.113237874 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114515739 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.111335281 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086788498 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087972716 seconds)
  done (took 2.646367068 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204290802 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096360701 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257046222 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.347442975 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161538428 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160813563 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.274953824 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164979218 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.175282297 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138809932 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192044067 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153503068 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125236401 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171645623 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135926917 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.150885723 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168297932 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185591929 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119548236 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221441689 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131460515 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162819677 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17655251 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148014649 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135631966 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155529708 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.092779153 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126007471 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166452536 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163374491 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169496 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119054482 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13681161 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.459712745 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211734488 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175474965 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279323572 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132186427 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.173851548 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.143923497 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24255385 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111268377 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209320537 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124261954 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12894575 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174260891 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.319156841 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178962407 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.129646834 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138893158 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174397878 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174248165 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174109832 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109155193 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320659589 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128230256 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144167643 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180296315 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175834734 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184928439 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160319067 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115243982 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181737886 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178623896 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172946726 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114189548 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159474015 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121525087 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166438191 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189686326 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169708229 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159294505 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.178325526 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135208723 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158838547 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167000536 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150362865 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144809992 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155019235 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118975366 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12083602 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134946134 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128117477 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16610686 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122425253 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194029652 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131077081 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.142153622 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224159615 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129484744 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156874999 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158272136 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158159409 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143239167 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.0880897 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143526332 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.14851633 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126716005 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128666902 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154106091 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112759551 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125394481 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14906825 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.093679657 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154077762 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.125336935 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33271277 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165040933 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.122421225 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133072481 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144227191 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.146555746 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164710117 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180718481 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104629462 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131475577 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189808966 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155093897 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104387751 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170781246 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176650703 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.150253292 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134985782 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161686124 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18404335 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11128276 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209357799 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113168672 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131106583 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138124861 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129074313 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153873841 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155945436 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130769472 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122051694 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214825742 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.095121005 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135767173 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166671476 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09933583 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127130858 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112086707 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133676263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.13193396 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111043964 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133639154 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151764244 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127887543 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152391121 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147586345 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138848935 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183802104 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104552837 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.146623022 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143892438 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.089962937 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168584164 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180034664 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127711531 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190793422 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160369473 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194867364 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158468382 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128545295 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174274623 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100261464 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116907183 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15854101 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127510923 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157608719 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176844586 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216290566 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.158494608 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119764876 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146087186 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161250746 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162483487 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145887929 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107422508 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158991684 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154111327 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09330773 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123153557 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097759237 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1374419 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127667314 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105624368 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172955248 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160619004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18460949 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156602477 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138884727 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179860366 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.123123087 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131248388 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.39829349 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137699129 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177536198 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177727043 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161299047 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111211653 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165246218 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117801462 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094347934 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132731806 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160250415 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10576588 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133491731 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13891348 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178299301 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.329822324 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15120264 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198322496 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161213973 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187731409 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119145297 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167348857 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164741994 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12733573 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.17239356 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10567851 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.144787003 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176545267 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141019783 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178392862 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158765766 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163027243 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184549857 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145177306 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102728587 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145014081 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160253033 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109053248 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163378537 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143828934 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133997223 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314314878 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.101997158 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124480139 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169328284 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141748385 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167803167 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116978624 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159482233 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124675366 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138755646 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128215618 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144049706 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112512606 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332556098 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183389308 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14294421 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31556728 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174873072 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128428467 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307246419 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19047473 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.362220119 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114297589 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139269517 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157347011 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129727492 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.346224486 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181828784 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142861183 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17315961 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127685773 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133635759 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106324726 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144768025 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148796942 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138067643 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.102932479 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.14951655 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.13206587 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171103079 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111119164 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155055087 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159142427 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.147813338 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.114009494 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142648905 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195060427 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15557904 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172263598 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.117178224 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.159829097 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191208662 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123658207 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098242665 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125630023 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175420005 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102793122 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154281762 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.181872681 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220400663 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156117177 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159158923 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109212052 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.115501365 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128265341 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145063645 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193743637 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137841939 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133101506 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182800262 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112324263 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12980563 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157174436 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282239201 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147206394 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16957275 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.084248778 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.277289399 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129215473 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104216759 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158050517 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167026462 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.133174481 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.143263374 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16019873 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141206757 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131343792 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134798099 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186134079 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200518789 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162470433 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167754908 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.130992039 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156350729 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319965643 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17776998 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143034083 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105259418 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160372322 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17837967 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180684346 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131361099 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15869257 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131542756 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15685306 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160656128 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134205665 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192748563 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100532713 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161334851 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138203411 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122212799 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127016142 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.208246036 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103691476 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168556216 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156372623 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129005667 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09767418 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147441467 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154560172 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113718965 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124186278 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170909159 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094169009 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159754511 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174312529 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102222874 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152025571 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14401811 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134256312 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112086264 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142019906 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133482358 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.133656742 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176613855 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128419988 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172373511 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168342141 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132398908 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.343696088 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144725031 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636303885 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126412036 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178685707 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116307378 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175750229 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14695598 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16286167 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159278619 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146478935 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133249803 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148042609 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229851479 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161678984 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15328937 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101822857 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141996251 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140127302 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101342718 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14927477 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159374809 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109879644 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133354699 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.152882287 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140056746 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103421572 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136704658 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17918771 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11780319 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169728216 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175785914 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136243991 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162646522 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163224063 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099573477 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.156938566 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168142676 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140297055 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145142272 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.103084934 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132590456 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175362845 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094058853 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157075966 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15690529 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130286545 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157424055 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131722731 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157094887 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109905949 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160304526 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129429739 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149073524 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12610668 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131280513 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.123821578 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12489818 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150552537 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147019837 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095238718 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161982653 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178352295 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093189228 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130910978 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280425217 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161974314 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18306755 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.11283271 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133852061 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113609337 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143070334 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.149974203 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15639068 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099116524 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130616191 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099878006 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16312974 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.145936838 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153188549 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156048702 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.348056633 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199421001 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137757036 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252514665 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13753986 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152916947 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092208431 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127272381 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111875101 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131043179 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140934412 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187687602 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176786942 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.115364028 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131268833 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123615016 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095644805 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129175153 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13243771 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149087602 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155260962 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13787363 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084672655 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140305855 seconds)
  done (took 75.773917638 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163747438 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.15119336 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.156339413 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.329899144 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187827743 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.29364781 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.230949722 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265032582 seconds)
  done (took 2.862199449 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098655162 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.142248684 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.125719459 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.131945267 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.113787433 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.11405212 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.300205119 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132699371 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.11223728 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117742612 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.131745072 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.114192853 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.530119593 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.124014615 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09372822 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109248027 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113659634 seconds)
  done (took 3.687974987 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.197053122 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.475826504 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.087906352 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191571621 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.176358642 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.091734033 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.7117525 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092927502 seconds)
  done (took 12.110546546 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.125112077 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147288521 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137793135 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.167977274 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.122639584 seconds)
  done (took 1.798862465 seconds)
done (took 116.903102931 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102047874 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.133354313 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.103307339 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.135143166 seconds)
  done (took 1.549684762 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.108115588 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08071389 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.117040301 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084550701 seconds)
  done (took 1.476769513 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.200036277 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.177433499 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.426603359 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.083231283 seconds)
  done (took 1.629615464 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119748674 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135969948 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.107671887 seconds)
  done (took 1.464800972 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.110139204 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.098220676 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.127791145 seconds)
  done (took 1.431316033 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108451214 seconds)
  done (took 1.19902082 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115095062 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.147412981 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117227919 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.146483402 seconds)
  done (took 1.622922163 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.102157259 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097585007 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.138125473 seconds)
  done (took 1.435297557 seconds)
done (took 13.281676783 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111047252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.432373002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.396304097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146504701 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.702463893 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.416090656 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.020104714 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154482157 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177654562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096221368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14381638 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671309973 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.022862078 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.344493458 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.010413141 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.344705398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699718984 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.08874403 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115702889 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089132022 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011450794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089125138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088658462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116890397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.6694916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421344466 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089288362 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368736885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08845552 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124860215 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.380541455 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115903092 seconds)
  done (took 16.8311745 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102990637 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187152473 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.108746001 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129272433 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103542235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128734278 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100802419 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092275059 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181041933 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118621611 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107185696 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117444502 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093497285 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118584013 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109709043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.116951881 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090088367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116918154 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090183056 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089086173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137629927 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088378627 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118138021 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088237822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117366205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101840006 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117897288 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.08981277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116217195 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09890746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090782133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117736433 seconds)
  done (took 4.680583731 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.15118687 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.196523873 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135678286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130092337 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172059592 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091865504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19749856 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144634628 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183788207 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.08997566 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13478913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.089786739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152385616 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.089236507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138614902 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.08971021 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117374496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089298409 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117231018 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090319066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1092207 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117094932 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089190739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11857353 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089384257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132008605 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089994757 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117638361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089078216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124803304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092789157 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117057224 seconds)
  done (took 4.989080771 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.100253123 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.09459666 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.134393749 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.106045696 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123717854 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.093228034 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.122197871 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.090836714 seconds)
  done (took 1.96081133 seconds)
done (took 29.558321237 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116593905 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.10267936 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.14303926 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.110797748 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.138953941 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.109889477 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.126880824 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.109888646 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.140975254 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.106486094 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.144592472 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.095887116 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097977076 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.121237291 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.103179605 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123433495 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.102494777 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.128971856 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.103413317 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132716605 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.091212897 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129739942 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099961522 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132958744 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.113622937 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.142282398 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.114268146 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.135271117 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.099136255 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098011231 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.140537294 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.119789589 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.130135943 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.111939923 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.132844779 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.101911512 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.127400362 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.097662747 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132626584 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.1016223 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124041038 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102275787 seconds)
  done (took 6.029631729 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.122812679 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.158573346 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119288091 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.123130467 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097399559 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.112766991 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116392535 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.090842737 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.120688669 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.114860891 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.113659213 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080845055 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.11125042 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076386887 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079919086 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.108452297 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083000978 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.106423144 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080852665 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080502473 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.11237947 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076407314 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082599686 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110879189 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078405983 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.113001708 seconds)
  done (took 3.783133422 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104538947 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.112830748 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.147249703 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172970297 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123858859 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127120274 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097971853 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136727092 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106452929 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117087779 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092588136 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.14755316 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108694817 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12539133 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092302031 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104596262 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13203947 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.091062917 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124874858 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109298829 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135049894 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099232553 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131357129 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100120701 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118148508 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09183544 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122293985 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.101403321 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098712724 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.12646368 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095393839 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.122416106 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091086999 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.129955967 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.095591175 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119456442 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109820253 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128581137 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.099656657 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118590999 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097530965 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094054783 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140176223 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161758564 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096392963 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.096570244 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121393916 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099206316 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120074176 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108003758 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129024753 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.08979391 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.121479981 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091460903 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090887619 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134565156 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090978181 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120320122 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102414951 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124224408 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101843017 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12303632 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.104979721 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11905991 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.096617576 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090096076 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.118838596 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088236357 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14309136 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096014274 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160905007 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097892482 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125774816 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097690624 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125917219 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09613993 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118552055 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104551168 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128030082 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093731051 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100398397 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12061316 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092396845 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137084832 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091690887 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.120793469 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090963168 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125093812 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.09288723 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090455171 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133825247 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.088793354 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122319971 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103465913 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118768612 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090602466 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125602147 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094683633 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117355213 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104652877 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124203778 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.090828641 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129061705 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.091244732 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09217045 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.129058026 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094421829 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118907158 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.095038936 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125246586 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.09063003 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122435091 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093924734 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.092150354 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129519274 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097010221 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123044114 seconds)
  done (took 14.183850271 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.239254985 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214463534 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188280272 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.298116156 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.101800706 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.146059064 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212793689 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125859717 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12048877 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159609692 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169699569 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.152915435 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169640533 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180924065 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170939352 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.119007596 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11146377 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.16684286 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215605464 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260818041 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.140550777 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.097843306 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161402982 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159164474 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133548887 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.099354945 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138169504 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102348222 seconds)
  done (took 5.677459741 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114668941 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156509104 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096045717 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14160839 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.116259237 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120012203 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093938059 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.122031054 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103119363 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134782254 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089421992 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.125801887 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097140929 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.128943951 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.090703982 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129478572 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.099936232 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.120904505 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.092969779 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.094478463 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129616777 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137235292 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.09427421 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089199111 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.128716978 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.088446614 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.121303397 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140479907 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.089339368 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.141322698 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.088379341 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097869817 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132657819 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090956354 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120026959 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092122989 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.121041198 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092420238 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092160605 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.116716159 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087984446 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111661357 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.089577928 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134728578 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096662412 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.11363766 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096290172 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.124922207 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091271941 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087134099 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122259767 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093331818 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123007515 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098354346 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.122117157 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091384198 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.092543827 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119861629 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.097199648 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12290319 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087822382 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.088195535 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12425967 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.122521499 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099140603 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094356949 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117388841 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091782098 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.124967284 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097236321 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.120692015 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096733678 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087205713 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.121097935 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.092708871 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125816162 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.093467663 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.117850408 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.089862755 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090086567 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.108088882 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.089717388 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107439198 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093503229 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088734113 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.117716516 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092290046 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126845048 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106515376 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.122001373 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.099463068 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.120882237 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.088978641 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121006088 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088036319 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093374617 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136861914 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140397867 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090427242 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116199333 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105747114 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.092789723 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118584228 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079961188 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129434316 seconds)
  done (took 12.481099953 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.13768894 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15863755 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091447186 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139070442 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123826148 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156432768 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096834782 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127360648 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091296226 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139681582 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090558345 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129702671 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.090474053 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134257925 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125022807 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131178921 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092209057 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134873342 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.094725314 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167216426 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.108359899 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.138969663 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10893794 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.120827396 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096047296 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.137822395 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128587272 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134319794 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103474911 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140133217 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104648086 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159182633 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140293347 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.095405967 seconds)
  done (took 5.302020362 seconds)
done (took 48.560117427 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.224063615 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.422965827 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194981062 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.068354396 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.266355624 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.223442714 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.206893385 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195888931 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.268460058 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.194298664 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.437419468 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.816877149 seconds)
done (took 58.643900774 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.21342898 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.363518792 seconds)
    (2/2) benchmarking "String"...
    done (took 1.490658284 seconds)
  done (took 3.989111853 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.799737322 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.155984912 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.453540608 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194380487 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194765927 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.491894054 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.937500306 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.579556284 seconds)
  done (took 28.128776672 seconds)
done (took 42.252965744 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.21736184 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.237849957 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.238905596 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.175814694 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.302124008 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.217307567 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.564472487 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.355693969 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.213704718 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.183025751 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.211289416 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.206560468 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.217347078 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.489154073 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.200988415 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.189708432 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.27006111 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.869278472 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.617068971 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.212357827 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.204652538 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.215758986 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.212589382 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.214287684 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.252123882 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.192224325 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.19205516 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.198273447 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.76306283 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.194615381 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.222164366 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.575217841 seconds)
  done (took 190.748944418 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.196863325 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.189631674 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.293589453 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.231495469 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.768150031 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408368329 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.354877022 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.829498926 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.214988397 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.224311552 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.457443667 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.198661465 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.525101471 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.233533286 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.239057785 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.224680698 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.399303864 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.559093067 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.243923826 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.359766661 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.202087745 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.329439155 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.231629985 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.449024063 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.237463341 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.2377425 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.215461827 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.212469864 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.400379261 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.35203277 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.206023086 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.230843278 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.82883789 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.05584646 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.21979422 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.21201998 seconds)
  done (took 149.900097971 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.200632255 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198231529 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.198670025 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.202010551 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.233306137 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200897598 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789917453 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790999519 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.769145728 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.595150991 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.672326621 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.544977832 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.201061899 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.2947769 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.208715532 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.203171118 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.216125419 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.227578244 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201065054 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202904305 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794740421 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.214391415 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.207999426 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.37889501 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.208942686 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236521452 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.600132449 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.194545997 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20177907 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23597972 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537717907 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246016232 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195342275 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.619120012 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.483724751 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311896205 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.198331791 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.23717959 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.203841065 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48667578 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.19566761 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.203874504 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206086583 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916090871 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201153886 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.796465682 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.202495714 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.199515803 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.203107293 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204240418 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.485743782 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.940825154 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.219093128 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.202760076 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.205495813 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.204183985 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.20489739 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.236654494 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.646068691 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.322016386 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.206576234 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208774464 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.236990827 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.20473842 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.682162226 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.205073493 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.870411899 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.275378305 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.312612954 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797028226 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203348587 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305950698 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321584175 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197950852 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.204455273 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203885569 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.204893633 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.316550918 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.199033445 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.638778722 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.198366173 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.382863332 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216985124 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.705498712 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.303833185 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201011294 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201458048 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643896193 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20765546 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.204587259 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.997297436 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296322408 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.198442503 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20684609 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204775107 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.643270683 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793926321 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.538103984 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.205958093 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.12636153 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.206848388 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.652910904 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.794813772 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.924811668 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.207023391 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321438214 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.381451689 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.219184133 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.205261845 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.726906172 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.207415168 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.264579747 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.205760168 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.606644965 seconds)
  done (took 368.272989331 seconds)
done (took 710.043560305 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.812631017 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.800652761 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.916123061 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.794536895 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.756315678 seconds)
  done (took 10.209159212 seconds)
done (took 11.340167271 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.407276692 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407738365 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270112824 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.410443343 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240190968 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.425488783 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.383802612 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226412172 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.317057127 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290565633 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.309470408 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262220416 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238381282 seconds)
  done (took 18.320012362 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536131432 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520222889 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269687373 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.531929239 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246982967 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518301318 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415375532 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.424360995 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422800813 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224602991 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221745264 seconds)
  done (took 16.465560845 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536625928 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527123961 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274541185 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.56713758 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248481221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.526545134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417046919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.432967231 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.427304337 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224433546 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221947518 seconds)
  done (took 16.535977568 seconds)
done (took 52.454702383 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.216251324 seconds)
  done (took 2.348983787 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.257418518 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.421141529 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.238123083 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.224190508 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216758449 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.225850157 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222372265 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.221827571 seconds)
  done (took 11.162120085 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.214441662 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218320374 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.212656992 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.216332874 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.21562207 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214127216 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.215059444 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.216497837 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.217121606 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.218121109 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.21836283 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.216896544 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.219477101 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.220507953 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215848658 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.217644544 seconds)
  done (took 20.601610641 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216638497 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.21350192 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.215124482 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21726825 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.215354978 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214862786 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.217300969 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215789641 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.213942277 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.215322152 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.215653179 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.216364447 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216216404 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214580345 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21512422 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216709535 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.217847413 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.217294314 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.218620149 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215642407 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.216180775 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.217480705 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217615076 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.216935499 seconds)
  done (took 30.324098235 seconds)
done (took 65.571192232 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.869481865 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.869547033 seconds)
  done (took 6.871245109 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.277542498 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.279206928 seconds)
  done (took 3.696736085 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219199991 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.220717291 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220257963 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.221165185 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.219035307 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.219618765 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.220142411 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219127431 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.218187565 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.217438842 seconds)
  done (took 13.332147869 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.219507022 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.217590127 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.217053102 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.218139357 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219308922 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.217584547 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.221043054 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.221243725 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.222246715 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216780566 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220485295 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216877845 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219761439 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.218878488 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220876083 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.219499799 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217754668 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.216107996 seconds)
  done (took 23.079529548 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.231432636 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241983742 seconds)
  done (took 3.610197623 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.348713765 seconds)
    (2/7) benchmarking "second"...
    done (took 1.258902219 seconds)
    (3/7) benchmarking "month"...
    done (took 1.328527016 seconds)
    (4/7) benchmarking "year"...
    done (took 1.316053272 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.260874021 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.240051813 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.259891554 seconds)
  done (took 10.150808338 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.221170141 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.417355567 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.53213511 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.803602297 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.221944182 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.226253664 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.100053396 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224954885 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.228158701 seconds)
  done (took 14.115465493 seconds)
done (took 75.99327972 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.229966332 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.208097365 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.550748871 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.222360025 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231772433 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.557517197 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.253221435 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.357379786 seconds)
done (took 37.74932356 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.215263647 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205495948 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.048142384 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.228770549 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.306591996 seconds)
  done (took 18.927657876 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.293563769 seconds)
    (2/2) benchmarking "read"...
    done (took 1.553442925 seconds)
  done (took 4.987666785 seconds)
done (took 31.269489985 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223570477 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222088092 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.221850241 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.217422126 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.220882552 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222326405 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.217496853 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219335793 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.22185767 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222323239 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.222904194 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.223201594 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223768153 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220754357 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221144318 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22359781 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220536476 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220550851 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220933605 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219993198 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.22623447 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219790783 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.22041039 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22443381 seconds)
  done (took 30.457328112 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224345446 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.220319393 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.22569519 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.224761522 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220787598 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.226825699 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.225150597 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.222256036 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223453691 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22580134 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220810579 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.223270967 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.227848341 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222847891 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.225838755 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.2219739 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224628437 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222360528 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223876588 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.223038898 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.226592594 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221188854 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.221126307 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227270554 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.225066064 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223471786 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.226043079 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.223346099 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229210371 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.224447855 seconds)
  done (took 37.867307507 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232277998 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236091205 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.227722203 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.226700337 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225293519 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.226590132 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.226524324 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.226786754 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.22762681 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.227114161 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.226816085 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.226475977 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225365226 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.224344192 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226597403 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.226962759 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224578216 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.227278752 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.229680542 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226602027 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225819207 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226561172 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.228102288 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.225029099 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.22825381 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22968915 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227131583 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.226026711 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.227154824 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226158628 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.230053017 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.22758985 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.228444534 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226353939 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.226791014 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228262273 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.23260737 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.237682456 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.227722656 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.227284074 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227105144 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.228446242 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227033834 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226881995 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226394656 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.229898668 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.229332748 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.228259323 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.228439067 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228416711 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.228995221 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.229453514 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226970957 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227229584 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23101604 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.229228571 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.229042056 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230180726 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.229052059 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228826928 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.227606557 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.228723495 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228805226 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23053797 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229299549 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229048413 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.229450347 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228995223 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228519801 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.2293417 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228896736 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.231239151 seconds)
  done (took 89.576318862 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230215017 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229370409 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226330265 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2264236 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229383237 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.231274648 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.229028729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232513763 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228013312 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.230856978 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23012426 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2272864 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227437173 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230790777 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230979392 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.230911206 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.231355233 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228151045 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232011401 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231739195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232223217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22883013 seconds)
  done (took 28.202650448 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232209685 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233322141 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229998654 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232983812 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232086257 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233248106 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230808776 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242269401 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231214824 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228644269 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227076091 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230901461 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230607149 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229692284 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231260305 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.230468081 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233490535 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231690684 seconds)
  done (took 23.321982564 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.231726186 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.229416426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.23248785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231112667 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.229935521 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235387261 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230871581 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232456475 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.234254019 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.232433717 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232958671 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232726351 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.23140709 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230021941 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233838981 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228904002 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.234359495 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230777775 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234382852 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231903022 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230929125 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233666122 seconds)
  done (took 28.25356064 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230437894 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233454461 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229723551 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233180967 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230731012 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23255304 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233910944 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230751308 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235562578 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.234855106 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231891393 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.238082929 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.23403754 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235343885 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235250657 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232550904 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.237317556 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.234238533 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234939 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.235959927 seconds)
  done (took 25.823626406 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.237696004 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235729474 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239277183 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2372011 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235997817 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235616896 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235713271 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234261252 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237307993 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.236263049 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.237709401 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23331423 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235128737 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23700288 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237887136 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239537889 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239068598 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236186138 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.236670181 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239512924 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236732515 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234206118 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.237786329 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236030775 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238338784 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.237926982 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23697749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.236062047 seconds)
  done (took 35.78472956 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239877735 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237328441 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234603087 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.23719061 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.236151761 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.234012358 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.236264613 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.707265989 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.238035411 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237544467 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.238894841 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.241545623 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237437321 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.237515707 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236883256 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.241561953 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23874272 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.23474428 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232161629 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234240835 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.236640697 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233890818 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237120425 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234384803 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232477458 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237184578 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23445219 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.232175314 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238272438 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.229829971 seconds)
  done (took 38.713894806 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.255437761 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255274956 seconds)
  done (took 3.667774314 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.232478811 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238249291 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.237726253 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235693862 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.236709168 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238230059 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238964934 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234196202 seconds)
  done (took 11.048638152 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.24015058 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243503607 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.241274577 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.238570611 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.241985542 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.240646742 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244531434 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258001855 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.24083141 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.243326775 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250513661 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247822779 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.241332198 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235407476 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.238936098 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241531773 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235714365 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.241782071 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.240831305 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.240663563 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240569445 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24086102 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242315811 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.238077922 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.237777297 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.252401029 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.240651786 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.23830974 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.237448628 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.240330267 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.240803079 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.235972271 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.240006946 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.239174513 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.241509993 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.242670786 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249234216 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262776231 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.25149564 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242548166 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242025089 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.240233985 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.242472142 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.240266658 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.245427273 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.242632342 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239693235 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.240472969 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241478201 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.247457906 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.248005175 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242556282 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.242074449 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.242543627 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.245570783 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253698115 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.264405849 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.248835552 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.256704131 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257196838 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.258730781 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.267579033 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24640223 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.248177124 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254206685 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.272757652 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251460788 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.260181904 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24321967 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.244457534 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.253951256 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256027915 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.270451099 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247369468 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.244693179 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.245213668 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24421959 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245496186 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25146309 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.26507359 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.244203141 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247711358 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257003468 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265508488 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.247013689 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.248540785 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.246061064 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.24868596 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.246723852 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25817457 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.264791239 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.248682301 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.245984175 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.245276088 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.24643053 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.248013363 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.246612279 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.247283887 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.242589254 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245375533 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24572042 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249961013 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24895555 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248734 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249518654 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.254548171 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246812184 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246410762 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.254442045 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.25161276 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248729036 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.245248465 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.253092255 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.244951842 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250069444 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255516165 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.248589796 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.248952648 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.248947668 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.248266818 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.258416379 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.274385493 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247348612 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.249733786 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.253844575 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.258577794 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248487312 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.250249199 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.250212736 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.24584734 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.245785338 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249558177 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248632016 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.247128079 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249257794 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248582674 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.245371056 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.247853906 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.248711335 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.248615961 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.250453976 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.24899119 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.247680122 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.251659147 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247368749 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.250721747 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.252907171 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.247926374 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.247711304 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.249401162 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.245715395 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250060371 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.246212252 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.252557855 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.24872595 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249706201 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248295972 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247437243 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251259801 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.248892573 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.252201828 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254799449 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.250413856 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.253718424 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252537927 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.24683954 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.250671466 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.249673943 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.249690238 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25034397 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.250085862 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.255368242 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.261898577 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.250845187 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.25114173 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.250093604 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251682421 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253584966 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251763368 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.252908447 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259768785 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252264156 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.259263394 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.253230289 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.252966137 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249668566 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.25382696 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250856978 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251845109 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255180805 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.262940994 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262594193 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274528631 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.254444436 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257771681 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25290884 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258505019 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.254993714 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.253716806 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253056848 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251539775 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25272659 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254198525 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.255063014 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.253998462 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.251191788 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.25109073 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249587962 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.25256342 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252266585 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.255488884 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248580455 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245711147 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253576436 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253165121 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.249035064 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245978693 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.251156424 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.25134424 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249928045 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.255436121 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.261062971 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.247797163 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25440927 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257376337 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251120761 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.249711128 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.250341189 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256391513 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.252799782 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263420199 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.272495615 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.25458637 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258533544 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.273403946 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.254185304 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.254375462 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.250324127 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.247892221 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.25454854 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.260622472 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.254144197 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.255529597 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.255127598 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.252565211 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249422902 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.257280886 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.25008346 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.254228018 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253106496 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25416849 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.248495538 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257294347 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253761015 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.253107445 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.2548645 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255146364 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254661818 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253950401 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.255641991 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.25371486 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.255703693 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.260147725 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.261243505 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.255612175 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.254230539 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253217792 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.255004068 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254423119 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.255498446 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253445071 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.255768094 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270696665 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.279453975 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25960892 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.254966451 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257623177 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263276814 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.258500746 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.257867991 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.252942515 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254217911 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253063823 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.253736298 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.250745851 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.254466158 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.255137405 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261559206 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25613741 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.259626161 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254277409 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252887258 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.257786962 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.257835298 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.255381058 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255830426 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.254751967 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.256316426 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25826511 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254449467 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.255809008 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263604995 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273662221 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.25695146 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.255738623 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.257227356 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.254724185 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.25599719 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.256407118 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.259253913 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.265083038 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.261448308 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.265485565 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.258453103 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265552426 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.260412564 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.262923099 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.267635197 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.25685152 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.255775222 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257917243 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.256944038 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264746926 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.276836371 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.257562821 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263315275 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255162021 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.261311876 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.259256213 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.261619615 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25560838 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.260052769 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.264444235 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.279771964 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.258681589 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.25821354 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25669106 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.261572442 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261197055 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.256803703 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260988679 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260507411 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.261415272 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.261200331 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.260394507 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262059968 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258058744 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.260535666 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.257711287 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.257887872 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26658293 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.277138636 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.263670002 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.256524185 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266757398 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259349026 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266238747 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.279105124 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.256968515 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.261187868 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.259104668 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262455239 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.258892843 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260443194 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.262151482 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.263509798 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.265344354 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.263264691 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.263539894 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.258376994 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.26386593 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261024479 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.27209516 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28870735 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264676386 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266442277 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257042773 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259448882 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.26944404 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261072714 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257068112 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263473563 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271906322 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267422741 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262942117 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.25973852 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262935154 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262091661 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26352918 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.261979139 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264009247 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.260782153 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.262928085 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262460285 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26419548 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.261797596 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.261311166 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266239964 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263703956 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.274353013 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.263443291 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265330186 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268293323 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263763594 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.261844954 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263519097 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.26329161 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.262838841 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265358371 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.263603667 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.26905968 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.269349142 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.268406742 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.264165585 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.265757767 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.2643958 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266264462 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263354916 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.265399323 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264006831 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.263435728 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.263113498 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.267601003 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.264921275 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.263169214 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.262783706 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266624269 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.268987997 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.26906129 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264658108 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.263457035 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.265359578 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264921636 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.264755825 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.264862179 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269713606 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266981515 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.277150477 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.273304948 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.272834954 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.265539892 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.26865778 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.272450438 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.263253467 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.267810639 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.264013846 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265270559 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265879079 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.266416621 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.263311369 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.266826298 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267129738 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.264817611 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273310659 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.287007623 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268539613 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.264981693 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272135467 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.266219385 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.263418701 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.265993224 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.265435237 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276374853 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.290004339 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.269290912 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268135353 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.267114131 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270471636 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274236474 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266221677 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267966962 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.265743378 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.267744306 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268702649 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270156104 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.262987824 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.2687481 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.267294962 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271799048 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.27809998 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.263540533 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269131665 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269814374 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268702509 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269962342 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268941747 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.267728628 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266119227 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.269113172 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269827575 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.271874005 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.272431036 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.268448773 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.270100924 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.274332278 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270940754 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274607283 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.283369597 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.278186628 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.267408522 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.273748023 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.272817882 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274727321 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271503998 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270254539 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.271797857 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271722725 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.269426964 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273160142 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.268342184 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.277749121 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284500725 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293365805 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27216286 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.270405934 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275087818 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273741067 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.266678775 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.268109699 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.276224342 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276520605 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.281700356 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.275441883 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27949468 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292113443 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274485771 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.278361229 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274867111 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.278732788 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.274613892 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276942974 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.272874377 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.277277101 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290716368 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274563669 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284015802 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306541874 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.291887704 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273664181 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.276980844 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273196852 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.271627805 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.273158453 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.27192577 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.271388373 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272811542 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.273397174 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.27106804 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280590362 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.27235628 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275125568 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273116945 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.274417777 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.27372465 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.269189057 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.276392617 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274752005 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.277154941 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27244425 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.273204473 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.27752955 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286521106 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.30330493 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.271963422 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.276688179 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275309304 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.280900689 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.276995303 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.285361332 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.284878345 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278594134 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27526547 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273311724 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276274295 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27454658 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.272674455 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274800429 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.273311671 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273282796 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.286054641 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.30424148 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.277442481 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.275479598 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276764209 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277299344 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278426231 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.273492026 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.273782476 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.277993079 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.278538021 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279341058 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.275717639 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275817123 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.280339412 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.28601709 seconds)
  done (took 752.16899212 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273674212 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275127276 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273665121 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277203845 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275333924 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273020572 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.272466878 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.271576956 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277177123 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272467459 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.274786179 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27472339 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.272560847 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.271983717 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273433191 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276323147 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27963121 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.276607758 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274461579 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273490155 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.271734149 seconds)
  done (took 27.955681557 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.277389402 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.274159666 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.275404264 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281745733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272865088 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276442391 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275684355 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279716937 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275818457 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275352024 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278831993 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281860509 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.274869944 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.27525361 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275400872 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280586658 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.276340481 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.275819214 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.28268202 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.272461227 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282647431 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27649693 seconds)
  done (took 29.292220092 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.280085743 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.27889584 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279421246 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.276389477 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278680385 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.278610529 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281330076 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.277433034 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282495196 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.283024851 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.278632062 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.280550858 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287380558 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.287185122 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.282435558 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.285020604 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.425365986 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.279569026 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.279531623 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.280307405 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.275399857 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.286710322 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.281064995 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.275801347 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.281203636 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282022863 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.278440219 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.288132538 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285011228 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281968276 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.28810407 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.279787657 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.279756448 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28176408 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.279253047 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.28051818 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286888365 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282016483 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280842076 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.281377596 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.289466238 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.306282338 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283037981 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.284013863 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.285659962 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.281746927 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.285158161 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288625458 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.280214325 seconds)
  done (took 64.177674849 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282024494 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.286230872 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.2801141 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.283265914 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.284268516 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284350226 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283190568 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281480954 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.285297055 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280690665 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.28233529 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.280057249 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281009799 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.287039244 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.286422742 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285170986 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.279736773 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285587845 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287290326 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.285581399 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.280734426 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.286293964 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.286011625 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.28458249 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.282430257 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280915243 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281099727 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285532107 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.280878394 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.28174628 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.287644224 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287054228 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.283922755 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.285752924 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.283587988 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.281765365 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.287627764 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28543839 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284802532 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.279750749 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.287910052 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287413922 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.285076374 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.285150946 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286177203 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.286682823 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284471263 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.285769193 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.288701652 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.286933961 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.284447109 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.285580016 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287648178 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.285229961 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291707293 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.28819233 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.28640379 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288241594 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.28979533 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.288947986 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.28891363 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289705831 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.287762793 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292212952 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.288322727 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.287890368 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.289408552 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.289417009 seconds)
  done (took 88.602355893 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29243799 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.288512821 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289182915 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291344254 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291267212 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.28928741 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.291259668 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292034237 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.287656433 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292284026 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291160389 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294146342 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.290326985 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292389099 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292341726 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292918219 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.29143808 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291132289 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290060673 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291938785 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.293548432 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.291369455 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291847358 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291944118 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290981033 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291642861 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292268807 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292151447 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292490134 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291630045 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29185806 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292518339 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292352103 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291031224 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.29496195 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.295249405 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292277219 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295711332 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.291491633 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.2923004 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292696067 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292905857 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.292384903 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.295719999 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294999991 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.295325891 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292984327 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.293800401 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292744 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293311281 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.29266029 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294252559 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291952773 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295746275 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292893262 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293571583 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.295174653 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293763044 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295206829 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.296157201 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292416607 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.292358753 seconds)
  done (took 81.340758641 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295079957 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293169918 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.292089678 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.290807249 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29364976 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.289275609 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291025296 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.292962278 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.294088006 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.294239072 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294217977 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29242515 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292433139 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295283047 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295283387 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296191035 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292114436 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293662128 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297387799 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294360078 seconds)
  done (took 27.077979056 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.294310742 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298515432 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.289355352 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292238091 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.295498334 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296670252 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.296252682 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29464048 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294901098 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296346518 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297300654 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296452229 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294356091 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292448695 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295683798 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29517762 seconds)
  done (took 21.927707998 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.293094909 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.296053044 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295179469 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.297741549 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293609801 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.2939998 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.296803895 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.292183482 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.295648006 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.29694801 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295761166 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.299085092 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.299428479 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296297355 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.294138612 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297665725 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.294641705 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.293093942 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.298402386 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296122001 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.29337473 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292590151 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.2976448 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296572995 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295817204 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296253805 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292362945 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.29573548 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.296107369 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296994327 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295019116 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296523607 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.293676725 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295566923 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299014608 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.292107268 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.296585287 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.298054394 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.301533302 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.294963166 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.295310904 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295540919 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.29575406 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297310693 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.293140471 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297307459 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.292611318 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.291472264 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295474233 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.297000681 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.299475902 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.298019446 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296613867 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.3011383 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296281964 seconds)
  done (took 72.485354257 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.29717747 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29331943 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294393531 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29703478 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.300003621 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294262856 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.299856996 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295992526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293288302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.293366928 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.294952942 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298135688 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29336273 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29864146 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29406109 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297956872 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.294145236 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.29245782 seconds)
  done (took 24.532772431 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295672095 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292847437 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.297581258 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297171128 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.290198769 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298936539 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298907985 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297613626 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.296976816 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294506431 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293546175 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299895368 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303112908 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.295874839 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.298338199 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297150377 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.3017251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300303279 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29644157 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292353025 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300188013 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299814708 seconds)
  done (took 29.749136305 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.297328137 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.29650913 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.301323758 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.315376085 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.31591546 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.325032761 seconds)
  done (took 9.061822071 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311011641 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300427104 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299051553 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3017419 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296459336 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296041454 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297620936 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297830088 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29935909 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295892437 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297872588 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301119869 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299050269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297803286 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300659886 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296754888 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299806821 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294079945 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293297442 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300139665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296834347 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299654139 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296797774 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292962143 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3002195 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298311124 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302200001 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296362566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296673155 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296244878 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298435703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294072486 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302872336 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299202431 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298062008 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295693818 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296429114 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300541301 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296346393 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299418418 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301089411 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303194815 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301246607 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29688431 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298079732 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295276021 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295638658 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300942625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29968841 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304633763 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297650327 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302016965 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303104793 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303389095 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3037925 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301207958 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30040805 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298805233 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297102441 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298487833 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297523326 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301425299 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300641455 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298472787 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304338697 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29458914 seconds)
  done (took 86.97651955 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30040253 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300464755 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299369277 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298160385 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301186081 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298530553 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296938704 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300519057 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29956952 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301277609 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30113894 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299443624 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300246757 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303500468 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302679798 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302394983 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300515122 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300722519 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302991404 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304809489 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297773014 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301578322 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301496593 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295830913 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304405136 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308715234 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303572403 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302715143 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303654191 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300744484 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300837997 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300465858 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300384187 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.299870873 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30479824 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296302025 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300058586 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302621462 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304092573 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307333486 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298872939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305227974 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301332595 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299755931 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304957278 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301971112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304510635 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303924822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307287647 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302199512 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302132092 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304915947 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303511658 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304454681 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30331419 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302165746 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30495083 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298279799 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303147457 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303548184 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304606177 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305561407 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305318974 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307109058 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305801881 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305924677 seconds)
  done (took 87.165094194 seconds)
done (took 1756.371014152 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.466469753 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.41889786 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.307896101 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.316491378 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.302497871 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.301758174 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.303661017 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.299694343 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.304898148 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.305932655 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.304243472 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.503902553 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.295375548 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30041937 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.305586256 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.399474019 seconds)
  done (took 42.656007895 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.331753935 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.312497746 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.435954741 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.329124475 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.335620997 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.507906582 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.366165933 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.313580136 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.499879966 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.356145921 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.006360468 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.332898592 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.306063065 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.587007266 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33313971 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.507121715 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.581395699 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.019039086 seconds)
  done (took 30.679251594 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.814392362 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.344289749 seconds)
  done (took 9.381005806 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.331895917 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308134226 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305522016 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.305569742 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.298208711 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.298733726 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307401715 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.305658008 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.359648195 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.446871261 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.312663984 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.323828933 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.328253113 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310861207 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.30189023 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.346803536 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.463709357 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.309338562 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.303165804 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318657867 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.306847779 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.416161748 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.356111267 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.309192731 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.445766507 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.391332028 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.315144279 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315829392 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442747273 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.311431616 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.308782831 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305733208 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.30901613 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.232190749 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.826637448 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.300381664 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.351276688 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.320277707 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.309874316 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.465323818 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.31485345 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314746012 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.305461483 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.816539753 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.447975187 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.438521421 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.652558037 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.308526199 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.314043512 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.375539587 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.312764824 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.312078717 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.357342778 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.159148979 seconds)
  done (took 111.588763813 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.345029225 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.695281784 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.471698217 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326461502 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.049663229 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.949355782 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.320155773 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.622592396 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.33315451 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304149464 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.592672026 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.834332644 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323729945 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.347014674 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.50685352 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.330804478 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.303773327 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.094824315 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.321115427 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.304851666 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.835972395 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310863261 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304162569 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.466006809 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.346487711 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816083884 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.886305928 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.709680718 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.327124545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30658255 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.809746432 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.32913502 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.383675944 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.307163234 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.59079372 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69733542 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.669094259 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.309615574 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346301647 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.308393801 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.34123603 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785159071 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672765591 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.32548815 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.313891028 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.788749139 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.305646312 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.301298163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.309400592 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51388947 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.918923791 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.314625389 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.875246333 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309982777 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.59452318 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.387918315 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368415984 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814147828 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307297496 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.402426624 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375676109 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304613636 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.305566756 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307562588 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309243325 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.682902525 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.548244783 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.306227697 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679827499 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.791864292 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.326248713 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.86114362 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.125846729 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.331547438 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.363459375 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.309455912 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.935135699 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.82526098 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.34796353 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.309733105 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.668094232 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.309903017 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.611119213 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.33165457 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323151179 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853175257 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.320438386 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.321492004 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.309519507 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.311067611 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.973667127 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31370879 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.619241023 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.335454354 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.308672055 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.307412986 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.317946412 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307595151 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.317528744 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.316656436 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866896816 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.333505824 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.453446156 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.326012255 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314223862 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.315663361 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.308800336 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.313529902 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532923628 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.901547485 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.334036662 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.312927973 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.309271563 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.312530433 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.478472822 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.31120536 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.665860499 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.320913738 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308720973 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.312877276 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.023611515 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345803059 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310417096 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.313670985 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.245361585 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.513467992 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.329115619 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.312561793 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331044082 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.313524894 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.665322578 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331819767 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.368807878 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.313480038 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047679562 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.366414465 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.326024245 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.571645289 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310695925 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.292963544 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331549585 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315809749 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.60841464 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.591131405 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.395356345 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.314155655 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.319896018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.012206358 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.328913182 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463699993 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.33062957 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.354805608 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.511171194 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.440435445 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.31499934 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.906352198 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.312491032 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525683906 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.314826149 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.646354816 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.843635905 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.332496936 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.316047871 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.059910375 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.065833646 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.990853474 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.317453729 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602746747 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.29513677 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.787692938 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.313525005 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.315319984 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.786021556 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.317880968 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321634243 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.319910285 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.313052634 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.481751754 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488670726 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.475887428 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322288948 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792288535 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326055723 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318200239 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.324897841 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.316292935 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.664368637 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.357792578 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.316791434 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.318873943 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.319506943 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.318141503 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.810355786 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.151031679 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.317237822 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.4695737 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.980958945 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.340225667 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.333081339 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.068123578 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.006839023 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.853728838 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.358887265 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.649584934 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.318925343 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356847466 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.04143511 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.346715423 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.813857967 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314059881 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.318843176 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.950661809 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.336906433 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.392193494 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.314295774 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319187416 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89304819 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.338260623 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.319212622 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.666622279 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.335885127 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.572222446 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.314640831 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.333326058 seconds)
  done (took 1107.130033132 seconds)
done (took 1302.650768296 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.324710136 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.322889202 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.309963596 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.322437726 seconds)
  done (took 26.514216433 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.326703601 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.322724234 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.324386817 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.323064388 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.327516675 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.321676731 seconds)
  done (took 9.18684729 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.608364868 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.324759713 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.324853654 seconds)
  done (took 19.498932811 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.551278262 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.689759284 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.681555872 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.684187011 seconds)
  done (took 10.847125609 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.323663969 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.325705692 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.321739436 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.328072196 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.329850246 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.332545588 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.331495446 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.329423856 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.328640758 seconds)
  done (took 13.187009896 seconds)
done (took 80.470995944 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.362926838 seconds)
    (2/286) benchmarking ("sort", Int8, false)...
    done (took 4.387317288 seconds)
    (3/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.311892001 seconds)
    (4/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.349265518 seconds)
    (5/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.478381293 seconds)
    (6/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.409331265 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.589902324 seconds)
    (8/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.163764636 seconds)
    (9/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.968170475 seconds)
    (10/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.327118992 seconds)
    (11/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.464392632 seconds)
    (12/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.427529717 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.357085097 seconds)
    (14/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.404045708 seconds)
    (15/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.304456811 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.353124054 seconds)
    (17/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.40827979 seconds)
    (18/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.1960441 seconds)
    (19/286) benchmarking ("sort", BigInt, false)...
    done (took 6.341613676 seconds)
    (20/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.326048339 seconds)
    (21/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.449788388 seconds)
    (22/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.357588884 seconds)
    (23/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.348515718 seconds)
    (24/286) benchmarking ("sort", BigInt, true)...
    done (took 6.316771013 seconds)
    (25/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.319046564 seconds)
    (26/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.316931007 seconds)
    (27/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.858977331 seconds)
    (28/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.312968099 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.317174014 seconds)
    (30/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.851488757 seconds)
    (31/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.305679793 seconds)
    (32/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.331053079 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.473673731 seconds)
    (34/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.600541635 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.762045958 seconds)
    (36/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.307091455 seconds)
    (37/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.428671858 seconds)
    (38/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.43045127 seconds)
    (39/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.319288696 seconds)
    (40/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.336793207 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.431677364 seconds)
    (42/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.312113911 seconds)
    (43/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.42945166 seconds)
    (44/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.592211763 seconds)
    (45/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.436712877 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.569987726 seconds)
    (47/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.310970733 seconds)
    (48/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.770587236 seconds)
    (49/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.305404455 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.035639268 seconds)
    (51/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.383142799 seconds)
    (52/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.33191255 seconds)
    (53/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.307649022 seconds)
    (54/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.147770665 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.30661006 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.443441244 seconds)
    (57/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.351668131 seconds)
    (58/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.387148088 seconds)
    (59/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.345635261 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.339905005 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.342654046 seconds)
    (62/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.88398702 seconds)
    (63/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.329608807 seconds)
    (64/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.447485013 seconds)
    (65/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.309088535 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.697257742 seconds)
    (67/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.327498381 seconds)
    (68/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.341547844 seconds)
    (69/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.77769921 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.746845665 seconds)
    (71/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.018687023 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.313131642 seconds)
    (73/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.442023215 seconds)
    (74/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.307074967 seconds)
    (75/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.312194699 seconds)
    (76/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.345617555 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.610999679 seconds)
    (78/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.028391212 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.129090274 seconds)
    (80/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.309834382 seconds)
    (81/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.332297602 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.333449243 seconds)
    (83/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.322014361 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.690642835 seconds)
    (85/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.357964307 seconds)
    (86/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.015578038 seconds)
    (87/286) benchmarking ("sort", Float32, false)...
    done (took 5.381189671 seconds)
    (88/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.340541995 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.434733555 seconds)
    (90/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.201204984 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.617201508 seconds)
    (92/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.507776294 seconds)
    (93/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.316025944 seconds)
    (94/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.285427368 seconds)
    (95/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.742044024 seconds)
    (96/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.441655375 seconds)
    (97/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.64807439 seconds)
    (98/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.025140863 seconds)
    (99/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.316722703 seconds)
    (100/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.615364417 seconds)
    (101/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.885638375 seconds)
    (102/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.329681301 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.177289109 seconds)
    (104/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.330780581 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.36119821 seconds)
    (106/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.236697645 seconds)
    (107/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.326044582 seconds)
    (108/286) benchmarking ("sort", Int8, true)...
    done (took 6.33295164 seconds)
    (109/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371313052 seconds)
    (110/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.315150899 seconds)
    (111/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.414995073 seconds)
    (112/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.159557773 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.548099788 seconds)
    (114/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.328838898 seconds)
    (115/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.11473242 seconds)
    (116/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.356741602 seconds)
    (117/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.579426996 seconds)
    (118/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.248918026 seconds)
    (119/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.311223872 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.289743021 seconds)
    (121/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.311957753 seconds)
    (122/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.31317652 seconds)
    (123/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.363247608 seconds)
    (124/286) benchmarking ("sort", Bool, false)...
    done (took 1.855993832 seconds)
    (125/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.56038606 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.357721135 seconds)
    (127/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.588198538 seconds)
    (128/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.457705899 seconds)
    (129/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.915839116 seconds)
    (130/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.35420763 seconds)
    (131/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.255442109 seconds)
    (132/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.156287727 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.971203463 seconds)
    (134/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.31351521 seconds)
    (135/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.615903213 seconds)
    (136/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.354687715 seconds)
    (137/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.362069741 seconds)
    (138/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.7359175 seconds)
    (139/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.332988009 seconds)
    (140/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.349965807 seconds)
    (141/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.316305641 seconds)
    (142/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.440902064 seconds)
    (143/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.328689457 seconds)
    (144/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.620393543 seconds)
    (145/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.035382142 seconds)
    (146/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.548153954 seconds)
    (147/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.348999084 seconds)
    (148/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.337738764 seconds)
    (149/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.318877148 seconds)
    (150/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.443199788 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.170216831 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.354174342 seconds)
    (153/286) benchmarking ("sort", Float64, false)...
    done (took 5.665077607 seconds)
    (154/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.253399594 seconds)
    (155/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.347027961 seconds)
    (156/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.974979093 seconds)
    (157/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.358527144 seconds)
    (158/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.318288978 seconds)
    (159/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.215049744 seconds)
    (160/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.352051566 seconds)
    (161/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.532573654 seconds)
    (162/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.319912583 seconds)
    (163/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.415586272 seconds)
    (164/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.395464294 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.774128499 seconds)
    (166/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.974862488 seconds)
    (167/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.415415358 seconds)
    (168/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.314528014 seconds)
    (169/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.889747187 seconds)
    (170/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.573087212 seconds)
    (171/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.338815535 seconds)
    (172/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.040021841 seconds)
    (173/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.597762181 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.177359339 seconds)
    (175/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.126994219 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.27449474 seconds)
    (177/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.387524278 seconds)
    (178/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.742916909 seconds)
    (179/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.756641827 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.990338134 seconds)
    (181/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.336127923 seconds)
    (182/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.082551023 seconds)
    (183/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.380165306 seconds)
    (184/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.362305937 seconds)
    (185/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.831922628 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.07874384 seconds)
    (187/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.044030955 seconds)
    (188/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.33589904 seconds)
    (189/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.034528244 seconds)
    (190/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.132658687 seconds)
    (191/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.379325312 seconds)
    (192/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.86485847 seconds)
    (193/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.354814236 seconds)
    (194/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.16199622 seconds)
    (195/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.405259281 seconds)
    (196/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.324057166 seconds)
    (197/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.391858299 seconds)
    (198/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.808684825 seconds)
    (199/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.135967299 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.761772899 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 5.410032864 seconds)
    (202/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374393957 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.392247867 seconds)
    (204/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.435719924 seconds)
    (205/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.857547049 seconds)
    (206/286) benchmarking ("sort", Float64, true)...
    done (took 6.331971523 seconds)
    (207/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.35822797 seconds)
    (208/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.914014079 seconds)
    (209/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.894803846 seconds)
    (210/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.354539411 seconds)
    (211/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.337812951 seconds)
    (212/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.915928399 seconds)
    (213/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.363599275 seconds)
    (214/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.384462843 seconds)
    (215/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.546861456 seconds)
    (216/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.221159007 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.014060591 seconds)
    (218/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.316434215 seconds)
    (219/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.445163186 seconds)
    (220/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.326498914 seconds)
    (221/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.375708459 seconds)
    (222/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.374843312 seconds)
    (223/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.323760184 seconds)
    (224/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.355536128 seconds)
    (225/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.337721203 seconds)
    (226/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.442784975 seconds)
    (227/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.327842086 seconds)
    (228/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.376538976 seconds)
    (229/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.491254844 seconds)
    (230/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.286905164 seconds)
    (231/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.423616947 seconds)
    (232/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.870215189 seconds)
    (233/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.404201715 seconds)
    (234/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.328368796 seconds)
    (235/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.492903477 seconds)
    (236/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.826510857 seconds)
    (237/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.333815613 seconds)
    (238/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.362724682 seconds)
    (239/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.328622196 seconds)
    (240/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.488215162 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.576964575 seconds)
    (242/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.826713124 seconds)
    (243/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455258619 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.438131923 seconds)
    (245/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.540632856 seconds)
    (246/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.069342479 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.36066711 seconds)
    (248/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.778964994 seconds)
    (249/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.71746644 seconds)
    (250/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.726262204 seconds)
    (251/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.341057739 seconds)
    (252/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.347688029 seconds)
    (253/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.095573768 seconds)
    (254/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.04552789 seconds)
    (255/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.323989272 seconds)
    (256/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.613594196 seconds)
    (257/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.467867024 seconds)
    (258/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.677819406 seconds)
    (259/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.301930323 seconds)
    (260/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.361798524 seconds)
    (261/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.349946514 seconds)
    (262/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.309710434 seconds)
    (263/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.351001891 seconds)
    (264/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.4294097 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.446965787 seconds)
    (266/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.534971945 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.443097507 seconds)
    (268/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.34331127 seconds)
    (269/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.662582418 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.460940608 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.189003487 seconds)
    (272/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.435173464 seconds)
    (273/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.784575933 seconds)
    (274/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.333185453 seconds)
    (275/286) benchmarking ("sort", Float32, true)...
    done (took 6.340432295 seconds)
    (276/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.08918959 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.404925077 seconds)
    (278/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.925770363 seconds)
    (279/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.929654784 seconds)
    (280/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.324886485 seconds)
    (281/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.403834246 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.167308164 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.360169046 seconds)
    (284/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.740338411 seconds)
    (285/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.349453714 seconds)
    (286/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.083547856 seconds)
  done (took 951.969186125 seconds)
done (took 953.208017463 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.375815898 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.370947892 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.356026416 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.37414874 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.468683812 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.527720558 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.364142711 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.359631368 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402721399 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.404929964 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.354554363 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.529633783 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.353274273 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.355278022 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.359936001 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373910425 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.578164317 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.361904808 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.373044526 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.3653496 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.373537521 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.356964479 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.408322715 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.533924907 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.361505553 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.362771649 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.364004636 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.380015277 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.466975982 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.362468671 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.360199568 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.372458586 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.576316888 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355502384 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.353945879 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.376029331 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.37113539 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.37198131 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.365177308 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.391253052 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.957225593 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.355678849 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.361490774 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.360310157 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.361644409 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.367016543 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.362212971 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.368069779 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374180717 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.374935378 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.945343389 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.37053721 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.364083493 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358607359 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.369270223 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.360477284 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.364174094 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380514135 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.379480991 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.377442984 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.565097805 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.363785358 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.363428598 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.380033475 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369018962 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.084704286 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.35960197 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.367015567 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.964723351 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.361053945 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.991064298 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.364786992 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36457073 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.377049279 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.394683133 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.510924163 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.351907784 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.36311712 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.370172886 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.360476118 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374297532 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.37691427 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.369729461 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.366889773 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380311916 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.538513509 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372951922 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.363912827 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.372581399 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.385153913 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.374182901 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.377096439 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.366130383 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.360124968 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.375534035 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372175428 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36761226 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.367477388 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.371366845 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.377472107 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.96396846 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380581949 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.363776938 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.361286211 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.366349323 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.382653016 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.963911624 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.359779751 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.387675174 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.411876298 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.367969676 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.507136441 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.362756757 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384263273 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.374203715 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.368853244 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.361731003 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.50610749 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.948398387 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376280057 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.367758144 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.364158956 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384938106 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.370215741 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.363223477 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.521884661 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.362437389 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.382935967 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.488568287 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.377105149 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.398658478 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.364284327 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.367706281 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.395213901 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.3849749 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.398586881 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.369622788 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384698026 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.382814476 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.363505857 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.380777727 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.377731483 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.368960951 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.374933309 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.361864895 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.394834955 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380189852 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383762248 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.388101688 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.488686346 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.367609614 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.504077016 seconds)
done (took 232.956560737 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.431410331 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.364632324 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.454048216 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.365038156 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.473473151 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466948715 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.362191537 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.361674758 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.363393138 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.741043004 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364467035 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.36456368 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.362507453 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.362973011 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.451171818 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.366067284 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.366524556 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.704077265 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.368630871 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.437387863 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.362896393 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.363324281 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.363954006 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.748042469 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.365315264 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.365807641 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.437724829 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.367689304 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.714439289 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.361745373 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.361435764 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.717290461 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.458242726 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.384877573 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.376358256 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.375429385 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.474714207 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.384290104 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.455925858 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.452363924 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.46019675 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.395515702 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.35990058 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.364438967 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.370153042 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.37188311 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364632719 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.392594195 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.369177147 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.368127157 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.705738281 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.379695924 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.374758668 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.365935236 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.365758603 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.390830516 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.366424004 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.369355678 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.458377679 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.369383153 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.434745941 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.754147522 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.74590531 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.368037882 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.367540319 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.367878069 seconds)
  done (took 150.697551465 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.437291755 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.442371995 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.493108677 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.37432721 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421722674 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.498516621 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.37175842 seconds)
  done (took 11.315392549 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.379685434 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.372796169 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.426168503 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.423077167 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.373083051 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.551338675 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372777894 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383012674 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.370974002 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.425805954 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.375505941 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372832219 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380219491 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.36941888 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.423283533 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.383539296 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486301943 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.376962613 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.371090275 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.522132433 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.371316041 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.380304724 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.422833357 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.384046136 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.380975258 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379903086 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.193467214 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372934502 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.366932518 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.372876079 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370221249 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.4507835 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.372668794 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.366577291 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.373643988 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.501952844 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.375944197 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372697621 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.373887141 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.370526983 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374735176 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375315962 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374350288 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.37022889 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.37424923 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.39516031 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374472603 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.375502086 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.377262686 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.375570491 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.426331966 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375425954 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.374036794 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.373222459 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.431652314 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381942782 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.378686146 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.375319355 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.378322849 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373496835 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527481457 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.42431735 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.375563345 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.42124979 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.373364271 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.374459957 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.377085851 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.375024869 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43083621 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.375483039 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.420965202 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.375283138 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.570928984 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397869432 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.379112441 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.378784721 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.379508235 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.378491262 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.372054102 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.38407541 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.374956721 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378649745 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382856521 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376365561 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.374673458 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.544845734 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486673969 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.376774656 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.388718505 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381767283 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.374329914 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.429890745 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.376255853 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.375611827 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.42949111 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.493819668 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.430578387 seconds)
  done (took 157.680076087 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.380093433 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384650219 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379215353 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.400921755 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.376114805 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.375053743 seconds)
  done (took 9.574961918 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379983194 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.382135684 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.381696371 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.379994482 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380321077 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382887868 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379419266 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382029811 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.386077779 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.37934652 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383842397 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.384565728 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.380863284 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.381806506 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380245951 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.379837221 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.379163019 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376367524 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.377947364 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.37864993 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.474873143 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380247464 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382288159 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.379964443 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.387606993 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.382009385 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386794282 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.381623576 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.382695477 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.391811776 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.398602821 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.382424589 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382482644 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.386991734 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385760895 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.378597188 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.386522785 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.383959047 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379265149 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.384444746 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.383203645 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383125196 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382774044 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.383656281 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.382622749 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.385176919 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.388454366 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.388830702 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382670225 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383156098 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.384884667 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.379935405 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383395955 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.384617085 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.384109543 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402285996 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.388828213 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.384181815 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.383883081 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383146579 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.385629289 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.384295695 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.385983649 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.387897624 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.392609006 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.3832687 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.385953512 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.387932677 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384410093 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384014321 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.385918923 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379721975 seconds)
  done (took 102.009910135 seconds)
done (took 432.546057612 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.644329191 seconds)
  done (took 7.92834462 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.776308368 seconds)
  done (took 8.065970526 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.052683005 seconds)
  done (took 24.351145337 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.385290907 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.478933369 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.396612436 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.385700396 seconds)
  done (took 26.934264154 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.666608686 seconds)
  done (took 7.955784028 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.385142219 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.368138766 seconds)
  done (took 14.040683414 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.850962577 seconds)
  done (took 8.137468088 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.517398796 seconds)
  done (took 7.812289947 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.395313152 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.395381318 seconds)
  done (took 14.095066485 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.364272499 seconds)
  done (took 7.652588501 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.932224057 seconds)
  done (took 13.222353133 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.388365878 seconds)
  done (took 7.678412689 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.400823163 seconds)
  done (took 7.690262066 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.267133245 seconds)
  done (took 10.556123237 seconds)
done (took 167.406474773 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.380571145 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.372544767 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.369088394 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.371619562 seconds)
  done (took 26.782394991 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417566319 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.420197959 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419464299 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.429039559 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.421237383 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.419001792 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.412503249 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.415216786 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.430799919 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.422304192 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.4252438 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.422595535 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.420119705 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.412115921 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.423806106 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.422399854 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.43255555 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.422487197 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.413380083 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.423295254 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.388706949 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.43162267 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.42137181 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.386713933 seconds)
  done (took 35.343975204 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.908697487 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.457086071 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.541274977 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.43758436 seconds)
  done (took 7.63411869 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438607407 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440063337 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.458233062 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.492946985 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.521024818 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.450042089 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.415528246 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.41144989 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.39891645 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.442982202 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.515362019 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.459943801 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.5327501 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.389459586 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572558554 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.388343189 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.388138552 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.439463973 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.490164313 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.514043438 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.388808225 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.43944601 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.451966618 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.458131105 seconds)
  done (took 36.187176569 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.385897031 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.404465708 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.388118869 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.385155772 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.39259539 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.386868213 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.387538173 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.388451207 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.38663822 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393014673 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.387190553 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.398575691 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385836669 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386720776 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.396350509 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.390316766 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.396285152 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.388483823 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.388975441 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.397430568 seconds)
  done (took 29.108192195 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.383847614 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.290208988 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.735305125 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.641031513 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.384891255 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.376252856 seconds)
  done (took 29.105887701 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.471902907 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.619185718 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.383229561 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.798350536 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.867905019 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.384493947 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.393347891 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.66150006 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.017241251 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.015890581 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.455529346 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.458716131 seconds)
  done (took 20.824136611 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.386494341 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.385841095 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.392515706 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.401940711 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.454622406 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.394024202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.400041236 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.38377356 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.459042564 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.459762956 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.396035303 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.457914243 seconds)
  done (took 38.26492718 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473863896 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433427007 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.515502198 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451066366 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.132898172 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58953318 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.4042869 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.193051887 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.411096956 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658487065 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40291689 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47533891 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646283593 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385747948 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388800724 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.500695068 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612293563 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94197504 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384755269 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.955561549 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413772555 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406475767 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.017645585 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656349337 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600887049 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.365019211 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.648332177 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.164444513 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713146428 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401876871 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399885871 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387086914 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660063374 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.593366605 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485064687 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635665201 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39196156 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.949381926 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.407135381 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.946504303 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408288491 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393338484 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398636669 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388654816 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.325540482 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40311866 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.752063886 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392306783 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.099418563 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386620526 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688233013 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485581993 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.390984061 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.379947493 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456617303 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396538619 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.390803207 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486313858 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961002414 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.201572245 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397377998 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.322176869 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.411613082 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.955366608 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095339701 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.395090552 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.393119831 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390850545 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324165016 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.933903817 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40596211 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536735845 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.405750437 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.037593075 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172261153 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400418609 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323908656 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006791201 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403544506 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.325860141 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615998535 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.169592648 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3270521 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.340872675 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327421486 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187304281 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404377105 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.946323244 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414323655 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.204176477 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.667558821 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41413815 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417058167 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.615843806 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.2862158 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392733231 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.407215195 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523259901 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407836633 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207602585 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349569007 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.390033713 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648959601 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.602981267 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396724759 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.515204294 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.528094412 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392869224 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.409888022 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40712624 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647793487 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.047048912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.414056288 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.248860182 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410221506 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.172344561 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23400297 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411462593 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402225403 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.397213094 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702914504 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.275703651 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.28171252 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462038212 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405774745 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39763399 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.13527694 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.246101602 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.290476273 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.638992169 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433574772 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.411322403 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.39841286 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357910338 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.383529044 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404789655 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.178197353 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618520557 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396294862 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673905321 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329837109 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544291254 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398134189 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.611188179 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.77737661 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.403839715 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656986668 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404444952 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40114959 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.408383641 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415530912 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498815779 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422091368 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.397813299 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654981421 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.401041903 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.401256698 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.134880918 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.178987504 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401385366 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.403360027 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404870293 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054515887 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378458446 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395149146 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2914914 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.414189599 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468933352 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406591569 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653392507 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.937732093 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406847878 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.406597226 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.413962705 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624675372 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41041771 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.976590012 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481598913 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.960484498 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.07144812 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416291135 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.335982033 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.11423296 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.09668395 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402160702 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.593122573 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401244353 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657592108 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.41667549 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.406057729 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047589771 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407626907 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.982859885 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.410573529 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415320969 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.740917126 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4045157 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.933937714 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.238555473 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412772338 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.413191264 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548140312 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.41376848 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338379097 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920495693 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409203971 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403608279 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.18010457 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439656271 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.997293357 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.960311378 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691933909 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424608628 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707206201 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.07759635 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.434953162 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.402792618 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41424466 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411576835 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.402745304 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402591066 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.413962425 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.989767171 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.843916124 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964880536 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224665175 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995601048 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.863518771 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.411837334 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288343629 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.221301067 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3607662 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.061152215 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672052876 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.225871785 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.383808643 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.5321566 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.787534573 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280671958 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705069634 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.635382329 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.87247194 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.412208143 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709134661 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62011487 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440675483 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419071173 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337244429 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.686551036 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7155021 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.423805593 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486265851 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842064125 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418071769 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.190904182 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.429050837 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.294353591 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.330301062 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.951424423 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.799799659 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.402582308 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.406267791 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.907956712 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438934236 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.933641825 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088053281 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40058734 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.969958943 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364937065 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.665319644 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.420573847 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.411215338 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.192150691 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.394940227 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.65962828 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713407897 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339130286 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404484752 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995134717 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.255460038 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.411046569 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407222241 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244786013 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420351431 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735944893 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.408563915 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.94439845 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410007123 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.341741969 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341988899 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.099447361 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413250459 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382908322 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954496615 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.40593073 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438514196 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408023002 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255922682 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66331494 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.421037269 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.044352342 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624851929 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42050136 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42335514 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.413577246 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415718986 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.38689354 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.305313019 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644700128 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.466023054 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636479607 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.554756017 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.320851126 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.439376453 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624196188 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309156652 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.416331536 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668135568 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.121755666 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.42251356 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181040598 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425729176 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.420206101 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.41387818 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402114271 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420480679 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48209731 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666728565 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.423397879 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.421338311 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.314082968 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427531789 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404845404 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.422966343 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504452095 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374483098 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.955896233 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.182935034 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055109351 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181029879 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04778794 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.703950565 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.404463872 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416084388 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345610355 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55039183 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.939138124 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688179846 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.54248771 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.399894241 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425222064 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41038849 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424263625 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623677855 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68315042 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.284157928 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414141415 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06991057 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.293231848 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426725207 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.623337755 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953067478 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008185996 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523202042 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419481879 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236242043 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.706725225 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.504914953 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416795086 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.003338047 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.436175467 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.278487673 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.424833633 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418789821 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551357288 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.725018453 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.607787453 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.424122775 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.574023518 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.189219499 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.855350723 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663168851 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.01177693 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.674916071 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065078146 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.211305127 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681017687 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48384951 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669619103 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.528621243 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56137932 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.426680433 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.30480712 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41392454 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257891958 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.123173476 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421622006 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080199334 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678728529 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.416946341 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.428692352 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428878221 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.424323082 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.639376712 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22506074 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638716371 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.424324703 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421302475 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.987733795 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087589857 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.723671726 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352462815 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.410619223 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.679454235 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.655132372 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438628044 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.872421179 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.126716593 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064690521 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.391131743 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438735319 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420061044 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.221687927 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086027561 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.910430937 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982153275 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.07396577 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.422199192 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691046715 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.419752753 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427406894 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694711293 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.421082721 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.415814549 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678973309 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.081089725 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.285240984 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.415914954 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.091000176 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.357641076 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.643576765 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434499403 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357356318 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415522019 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.919243603 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438336265 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551817868 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418934584 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.433090637 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418718992 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.171985554 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.704995501 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.416227716 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.426782159 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.409550032 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447327792 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515182261 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706641563 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42193977 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.095946267 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.772777535 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676274259 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.428279061 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.409046714 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.422204927 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419797554 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147056349 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388155237 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412359928 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052572798 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.425895845 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.429091885 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.425363387 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.637020289 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630600314 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.426343236 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679736823 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43007471 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437209075 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.333887584 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.187585472 seconds)
  done (took 1728.545717098 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45239837 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.44676884 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.437383312 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.526446971 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.44809173 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.449615729 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.519279237 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.444705709 seconds)
  done (took 53.048739563 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.433528882 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.581704946 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.451761828 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.433752395 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.420716586 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.428346957 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.951516277 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.420122616 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.433467014 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.430496373 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.433453273 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.415880321 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.123097889 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.429483931 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.417970455 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.419021017 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.42118603 seconds)
  done (took 66.978965846 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.20995431 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.538323064 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.117777671 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.463138535 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.435356243 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.444280198 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.063551456 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.438317847 seconds)
  done (took 56.038361388 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.442223127 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.438315338 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.439891321 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.436828208 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.438204154 seconds)
  done (took 8.522448819 seconds)
done (took 2137.675300122 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.424895061 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.432353271 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.428155696 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.431662832 seconds)
  done (took 7.040886864 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.408549186 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.145022185 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.413189336 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.424358961 seconds)
  done (took 18.718771287 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.431632454 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.435698317 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.237343845 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.139292512 seconds)
  done (took 5.707031923 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.176590734 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.188301641 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.171211652 seconds)
  done (took 7.865759852 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.425080671 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.423600552 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.426740869 seconds)
  done (took 20.601935141 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.737116703 seconds)
  done (took 3.066265725 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.571481754 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.622245307 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.802866035 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.787385912 seconds)
  done (took 8.11007921 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.812599379 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.817060912 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.622293748 seconds)
  done (took 6.581520297 seconds)
done (took 91.883472691 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.726782831 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.445690786 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.632206246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.694358553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.647303658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.633524666 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.720127642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.659152115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.201860443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.184291058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.692566291 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.645066053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.673410123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.450494094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.670478516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.450774398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.657327467 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.780886746 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.374105556 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.423026103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.71684889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.338570296 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.518212396 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.365311332 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.647728297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.579830393 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.920541825 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.442115921 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.424616304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.957934714 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.57247025 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424732747 seconds)
  done (took 199.599724828 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.427284554 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.416756801 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41548246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.418773294 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.416880954 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.418530727 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.420066318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.415350537 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.436052443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.430807541 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.416358056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.434152994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.419466526 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416708168 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.437575835 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.415353475 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435267273 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.417928846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.415710941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.431892587 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.419995903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.429985684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417981507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433083691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.417589109 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.419379855 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.436652537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.445678119 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.418503653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.417193686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.43750676 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.442490524 seconds)
  done (took 206.922541882 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.434365822 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.418737147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.441846079 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.435549198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.436454504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.422184153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.436923396 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.424245891 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418912994 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.418640723 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.4377223 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.419080747 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.440047703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.418244508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.420441743 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419652992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.419880633 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.427443411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.420264135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.420091814 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.420578712 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.422134388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.422251878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.418024803 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.420522018 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.444564734 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.421169462 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.422394824 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.451125757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.425099858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.431658847 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.41979509 seconds)
  done (took 206.983699351 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.636514534 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.435966008 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.440534036 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.372959833 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.439110854 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.437649585 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.434343197 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.629526148 seconds)
  done (took 15.15813649 seconds)
done (took 629.989400694 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.987178274 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.669400227 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.649907782 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.45733568 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.387858343 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.472677589 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.458060736 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.656351918 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.434747194 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.663416021 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.84002689 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.446668851 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.983102595 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.446944524 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.756882141 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.566062138 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.402114002 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.48202517 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.808969966 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.150941949 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.743959253 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.049179981 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.653227401 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.438245836 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.997433044 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.095642648 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.306306707 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.402687277 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.473908034 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.828498254 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.277848936 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.58864484 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509650163 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511557381 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.570636592 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.569863959 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.569327969 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.523635183 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.656479181 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.812733371 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.091165669 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.229702811 seconds)
  done (took 98.955103693 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.426679117 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.427565391 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.427960743 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.430399509 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.431541566 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.428580855 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.427256675 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.425972337 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.42612029 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.428488824 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.426272388 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.429794973 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.427676612 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.429767996 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.425011012 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.427512571 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.428432918 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.428927089 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.427261769 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.425201493 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.427760955 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.430935336 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.428244913 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.430364222 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.428178693 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.431573374 seconds)
  done (took 38.469713981 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.44173096 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.712576267 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.905038436 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.446747504 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.439602779 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.44653497 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.533778192 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.4435161 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.444764433 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.444803249 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.627548476 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.444286076 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.481030323 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.933673305 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.446071302 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.444051268 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.442109836 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.438729011 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.719287633 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447027449 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.55306807 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.443512852 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.53598778 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.454127695 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.465700754 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.444644336 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.447781144 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.023507811 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.444593788 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.627863696 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.366834825 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.532179067 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.973369978 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.915003253 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.369320789 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.445883806 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.444469982 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.631988034 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.443034644 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.441540804 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.538559381 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.443473544 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.91514263 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.145007869 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.461588652 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.447553749 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.048110204 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.631540058 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.732085757 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445335383 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946662262 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446767845 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.445709156 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.447118506 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.738347257 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.452807716 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.445708151 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.056694047 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.468062054 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.537530789 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.445433029 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.444649078 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.721829591 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.438425905 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.711919102 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438944689 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.454872739 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.466358359 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.917937237 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.44855651 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.166298433 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.464228731 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.451467635 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.627869355 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.707184863 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.080691164 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.448156016 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.734639977 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.985698021 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.536293015 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.450725567 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.016249162 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.540777172 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.451084331 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.450881912 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.446305269 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.446496182 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.492591251 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.536193407 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.09318479 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.154905113 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.086150362 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.55640135 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.454839112 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.447820709 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.063195769 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.466496943 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.447395328 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.913203809 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.168394667 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.464720069 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.457728702 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.168880797 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.470165841 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.543210976 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.453618138 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.929103739 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.447979907 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.498877115 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.454096735 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.454318815 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.473713655 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.540657472 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.45350982 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.450877898 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.141307165 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.657843326 seconds)
  done (took 191.258719167 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.452647189 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.433564202 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.458431418 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.430715938 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.443602033 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.454218542 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.440869967 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.44375866 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.448460859 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.442189955 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.445718072 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.446166762 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.448792149 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.449590307 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.447604212 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.450732848 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.057675956 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.446895749 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.453385593 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.436552892 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.274984918 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.449517269 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.45594105 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.437201314 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.446085637 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.444993421 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.453514014 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.437374899 seconds)
  done (took 155.280572114 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452851751 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.14036347 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.451493541 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.609235742 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.477157913 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.451010138 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.606542537 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.520471128 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.452050165 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.452158701 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.447633154 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.824009399 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.455686653 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.084771811 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.675669869 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.608631795 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.08432751 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.469131438 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447034727 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.44741241 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.6120593 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.460301434 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.822782422 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.146963826 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.456083541 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.149628081 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.443234048 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.45249419 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.452553422 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.147946803 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.451282921 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.826069478 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.545048136 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.521440793 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.15160365 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.08694021 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.103339112 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.627507619 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.452552421 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.453285535 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.45092286 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.443385068 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.153992398 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.454937916 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.452847823 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.144297405 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.470643947 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.454100912 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.460023194 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.451232127 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.522081595 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.512851432 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.823560852 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.155213527 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.546996944 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468010981 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.61074996 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.886276036 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.457980914 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.089230463 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.444981695 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.157832774 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.476667643 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.445794796 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.452378127 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.461687893 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.632430578 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.610389372 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.093182489 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.472286241 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.090894813 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.649371218 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.453988878 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.452686716 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.456621151 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.114878297 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.084439088 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.650320493 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.614260779 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.687849015 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.4460879 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.453329609 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.44898553 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.548165274 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.453839651 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.115026732 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.100985927 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.477059135 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.458656968 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.459253982 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.456996252 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.664406415 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.115378442 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.540408879 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.089111518 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.823890195 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.79732568 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.450451516 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.526268696 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.462859813 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.808216095 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.450887003 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.52442152 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.953821468 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.809278476 seconds)
  done (took 175.819910027 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.737119045 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.834656142 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.561538938 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.61456768 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.103030656 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.040528175 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.844131415 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.602589719 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.578887379 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.738529907 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.804513473 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.551731243 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.699437775 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.546402202 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.257003856 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.533140057 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.55180109 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.604555126 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.601802222 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.592475926 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.182951043 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.773169458 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.678242833 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.529657897 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.563990222 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.290002542 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.045588954 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.025773635 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.651878968 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.96051266 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.021615125 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.673292177 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.511464529 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.194825956 seconds)
  done (took 70.855896704 seconds)
done (took 731.972839936 seconds)
SAVING RESULT...
DONE!
