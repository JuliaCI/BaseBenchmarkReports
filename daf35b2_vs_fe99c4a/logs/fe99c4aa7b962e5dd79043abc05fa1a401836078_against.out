cset: moving following pidspec: 26946
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.402303544 seconds)
loading group "string"... done (took 0.500822053 seconds)
loading group "linalg"... done (took 8.75484931 seconds)
loading group "parallel"... done (took 0.176830448 seconds)
loading group "find"... done (took 1.264056727 seconds)
loading group "tuple"... done (took 1.848646274 seconds)
loading group "dates"... done (took 1.333815752 seconds)
loading group "micro"... done (took 0.19321503 seconds)
loading group "io"... done (took 0.503002329 seconds)
loading group "scalar"... done (took 51.360989556 seconds)
loading group "sparse"... done (took 13.813117997 seconds)
loading group "broadcast"... done (took 1.289070641 seconds)
loading group "union"... done (took 10.261850074 seconds)
loading group "simd"... done (took 3.137794605 seconds)
loading group "random"... done (took 11.600129073 seconds)
loading group "problem"... done (took 2.198702425 seconds)
loading group "array"... done (took 23.91678184 seconds)
loading group "misc"... done (took 1.103000588 seconds)
loading group "sort"... done (took 3.711363304 seconds)
loading group "collection"... done (took 19.198666366 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.604233458 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.188433223 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201529968 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.27683067 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.235631511 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166091256 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142456522 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.240043017 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.725481025 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.204444834 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.13525987 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.500953811 seconds)
done (took 6.440340367 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251083832 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.178526861 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166761766 seconds)
  done (took 1.111007287 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076063811 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157155772 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.106852164 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.093081272 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090621917 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10837319 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090951204 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108021536 seconds)
  done (took 1.522305714 seconds)
done (took 3.724201483 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.494088797 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.864957957 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.508380152 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.143166595 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.311027604 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.313297278 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.313651633 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.20201754 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.106847429 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089120691 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174147095 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.394357439 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.413943886 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.938776329 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.087401516 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093162518 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.132923262 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.761512481 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077802458 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111285675 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.492204056 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.183516894 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097317596 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.12144808 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185031347 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132768793 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.156535004 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100890464 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.661935781 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.131282393 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180623612 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097364278 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.155702241 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.182842821 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190678613 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.109352692 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678759582 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.198475698 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.086832294 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.097647311 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.662112149 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.115923518 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.185510963 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.102024497 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087138354 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177655219 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091089752 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076175391 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.109530311 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084425047 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.163335736 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.449584803 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106117721 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171735398 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092205201 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.682156795 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.0961622 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272165404 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128750817 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092947693 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090783154 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085877435 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.153352759 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092453715 seconds)
  done (took 19.946224774 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143524655 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.163445019 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076009669 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154526061 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120655877 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078824221 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100857663 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077430441 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107223993 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.193194613 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136193457 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.15072238 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090493712 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09023382 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128777579 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24838082 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108698067 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123938041 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.09013852 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089713085 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.142739328 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096722143 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105310929 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091050449 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16797023 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203162774 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108702391 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122881982 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.08904649 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.092600862 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140440126 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143704949 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091392321 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087533848 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169457909 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121630129 seconds)
  done (took 5.230406832 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198808595 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12060299 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.207479427 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.158211023 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14623409 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164920417 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126285378 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.270160143 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.212947024 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.187805473 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162354531 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128404412 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084084748 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.121028577 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079696937 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078221751 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.092783969 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.425886805 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150454928 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.160884886 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.128778639 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101984743 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081768176 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379541026 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083894379 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095286904 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081998527 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06376274 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.193072267 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0808286 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.110220261 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08263833 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103996096 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112967319 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.2111031 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12583434 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118500298 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098836299 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07660217 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221337331 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086323916 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076857765 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132130137 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131113327 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113336502 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093574295 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.084728965 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219957777 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079334998 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115061982 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.070939325 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196956399 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.123438622 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.076086377 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.289615261 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117158738 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080147333 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076791781 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.819887283 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.114825125 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.080835878 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097374608 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081794018 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077884396 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.442968637 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101729429 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.280814245 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080398957 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.153025106 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.079195593 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097890689 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086198614 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083753765 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117155035 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078422745 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07866477 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.076417617 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096842007 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081678815 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078812503 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.130824284 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084815522 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095402455 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146593821 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097704068 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114494193 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108560475 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097268994 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077502209 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12680078 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081845464 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078497403 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.164240521 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07904781 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129603455 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080946581 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14282394 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079693831 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.260843169 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083203667 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122243242 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099613718 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124914413 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.100004947 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078843392 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099900691 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077920184 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078976682 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161377088 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082324652 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083985918 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080375801 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.10146655 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091412749 seconds)
  done (took 27.849012579 seconds)
done (took 53.790300526 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.435763494 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083050439 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080131295 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.09981315 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080353203 seconds)
  done (took 1.625212384 seconds)
done (took 2.447713924 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.317115893 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.187953461 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101994225 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.184893062 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084344645 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192005082 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177193068 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093969382 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201339008 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084287126 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185281896 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083274429 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102892019 seconds)
  done (took 2.841986611 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101900505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109587178 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100459147 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.119362293 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082801683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099563124 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118853845 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.110815836 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09834523 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112985349 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085260284 seconds)
  done (took 1.959025738 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100917975 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105663172 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097306431 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11570434 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085016868 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096247884 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115537493 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107597381 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096217701 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111148829 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084506422 seconds)
  done (took 1.938270492 seconds)
done (took 7.556411373 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.08378713 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.431617485 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.169588716 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.21159486 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34952343 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236868229 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.572115837 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.153637729 seconds)
  done (took 14.175136332 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.166066641 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.111586197 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.093974703 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089811249 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.09274585 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.113123362 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092021687 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094163184 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.111372657 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08976374 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089367611 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.106540773 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093247478 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090597175 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09255313 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.109997714 seconds)
  done (took 2.519228292 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14145321 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139632526 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097767797 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097157268 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112159939 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098898132 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.098892451 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.11526156 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093952628 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.092820694 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099034567 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116946185 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.095124625 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091468581 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.114383903 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.11574033 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092165648 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115406053 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115315992 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.114786495 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098697023 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094692193 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112948471 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098455333 seconds)
  done (took 3.468983867 seconds)
done (took 20.985169202 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144928957 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100990384 seconds)
  done (took 1.071473989 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.140591496 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.158649211 seconds)
  done (took 1.128677893 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111041602 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088354962 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136331022 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.100704956 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088858322 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10742758 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115075903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106858072 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090022903 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089298235 seconds)
  done (took 1.867394764 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094690034 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094050423 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122067865 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.136433437 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.115387139 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092415601 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093009496 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091334108 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11377461 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089400637 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093492082 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126165814 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095149532 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125683684 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094661277 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094015112 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115591801 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09365606 seconds)
  done (took 2.715358286 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089385936 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091250603 seconds)
  done (took 1.015666031 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093566548 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089401655 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091480176 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108998674 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089001239 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088820114 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.107189094 seconds)
  done (took 1.503253316 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.485876835 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.262391344 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.356442209 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.106393436 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.144998857 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.467330629 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.14603473 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102755539 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102131412 seconds)
  done (took 3.045138288 seconds)
done (took 13.178270628 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090737864 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218939652 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.629393605 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112377388 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088346519 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162158552 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.285142485 seconds)
done (took 2.428862063 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339300978 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141029761 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08221339 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090440234 seconds)
  done (took 1.487881916 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08171107 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097083421 seconds)
  done (took 1.020190951 seconds)
done (took 3.350242543 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08864391 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088274268 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086559859 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.105698291 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.119187134 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.085959966 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.1067545 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087363606 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.087270787 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.086232992 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108092542 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.088001562 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.086749067 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106706264 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087128567 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088551401 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087133533 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.104830958 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087506226 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086809994 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103921788 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087498016 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086405681 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085541074 seconds)
  done (took 3.112623644 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.105419641 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090629166 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108547552 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092858346 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092186755 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10956185 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09202166 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090755056 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108208333 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0903771 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091772705 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108597054 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.090532667 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.092095603 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087587064 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110400109 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091736099 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088195528 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107593314 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093400273 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092010001 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108022032 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093257858 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091336966 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109806776 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092398807 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089206829 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108244018 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091790643 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091363069 seconds)
  done (took 3.753189728 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.096633505 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084922415 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087303551 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114960125 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.084427347 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087569315 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103079501 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085433057 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.08894204 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086834365 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109222285 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087585463 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085323583 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.108313877 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091037248 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090146367 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097053032 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.104775489 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085570692 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087851338 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109690962 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086030855 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087378024 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086958279 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.105745915 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085992002 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088154164 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106341822 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090075077 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087923655 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.091911813 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109112203 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089033909 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097547626 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109781078 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087565917 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093235269 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.103594388 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090350507 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084506847 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084164865 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.106465222 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086010395 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093734322 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.106071844 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089406639 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085407389 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088568089 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107726501 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092267435 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084652776 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.103220049 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090698034 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089222088 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089599291 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.102845003 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.088467627 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08538101 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.107496243 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088249971 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084609433 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083946464 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111205789 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088983643 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10230731 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.113160821 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086282009 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089305609 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.107241851 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094705154 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.090152488 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115865973 seconds)
  done (took 7.643687066 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101653525 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096722061 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089072412 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.108126712 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089246054 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088487224 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111573464 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089278788 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090533567 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114015761 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089148281 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089347167 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089151295 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108416058 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089759358 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089733753 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112559578 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090687057 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.089179445 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10923566 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089952009 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093282945 seconds)
  done (took 2.969324097 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.232194777 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096200213 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135199751 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120717956 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106050645 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.11961228 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093943755 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094607585 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110701393 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099274589 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096021712 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112085039 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106440201 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097088756 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116422042 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098379272 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113588074 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100764075 seconds)
  done (took 2.90297384 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102104136 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.089952565 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.127482752 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09120784 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090642976 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089878535 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114651345 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109710793 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109682078 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091984363 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098171208 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093449637 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.110388989 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09202724 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089645499 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109438202 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092345576 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090850464 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114846032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097210923 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095706505 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116316037 seconds)
  done (took 3.073644728 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105825058 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091549958 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126656736 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094276192 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090811339 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088971697 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115473913 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091833324 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096634548 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.108965858 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09241357 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089411815 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.123075962 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090536297 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095078445 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11001401 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091808859 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090872058 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108256741 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092189444 seconds)
  done (took 2.850836838 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171552019 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124428666 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106231715 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113079349 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125228111 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106881447 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112294555 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124983313 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105652024 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135409652 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106445007 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106244437 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132990282 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110955251 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105302013 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133654934 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113119921 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131752419 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106450506 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105596248 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137144029 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105388008 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132898381 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106817765 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105584093 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125174783 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105984266 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110162783 seconds)
  done (took 4.167868928 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090605114 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089023543 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088817461 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108470577 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089069684 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08831011 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087787024 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.108675294 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090272242 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089759559 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107597872 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090944105 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08968839 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.08817977 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109316096 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089598488 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089459284 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108721972 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090193582 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089623166 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089243121 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108150322 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090188366 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089719325 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088324427 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.108396044 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089986543 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088837924 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108610206 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089605444 seconds)
  done (took 3.697809156 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103141391 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099379314 seconds)
  done (took 1.066074952 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097890031 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103541296 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089371418 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109892418 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096123309 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089405234 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117578841 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096340142 seconds)
  done (took 1.665099093 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.142333213 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.1632008 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.093434489 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.099854986 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.16336179 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.154320716 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131471615 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09306093 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.108030448 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083597137 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.155715332 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083256124 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090842427 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106430763 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.09268622 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09723348 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.109506481 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099890256 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096210251 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091786927 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113871115 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095780358 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092155472 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.121009271 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086646481 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092101702 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113090605 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101089691 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085795838 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.113021873 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088700441 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090153787 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.11336338 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095048858 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090110612 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163768118 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097838078 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107059586 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091495127 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095196718 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142864727 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091350539 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092258691 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107634286 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095401463 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094259948 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112976475 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09205823 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083267494 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084937499 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.111045481 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086013625 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089566116 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110850963 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.091702423 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097556075 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.111585758 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088623073 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086637886 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105889749 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089930862 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086097029 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112235475 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094529049 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091213502 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110868138 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090318242 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090964007 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111335574 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093010992 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091067938 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123344643 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09299128 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.094880077 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094878603 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.111841895 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089160862 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095054774 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11004303 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092361235 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09486846 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13890694 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093737487 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085862539 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.105931042 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09892528 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09204874 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.112484968 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085029696 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098861396 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112396814 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094399794 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084682411 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107891054 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089162243 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094716856 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083233559 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111314025 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.089546446 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095016804 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115364898 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091444281 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092328444 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114898506 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.096628187 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089800468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157148689 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089173316 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086695537 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.113641219 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09647105 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084346428 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111046426 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090146973 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088260997 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.10586832 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095700043 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090095028 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.111823369 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096349258 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094144276 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.111529248 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093728393 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090657554 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086195399 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.114448556 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099461207 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09214087 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.112123246 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092312312 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091248456 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110366889 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095125452 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088157006 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.115580184 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089042907 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.090559704 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091859288 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.116766412 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092303948 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085676438 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110156464 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092389001 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090704976 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.113853055 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.092714497 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087485373 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104000353 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09352851 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.086843216 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.112187898 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099988298 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087442693 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.112839494 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089535312 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099012999 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107891954 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096589487 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093972982 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.095504272 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115282039 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084390958 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089056258 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.113984794 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094721553 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088530823 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112520654 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091744991 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098000736 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103153799 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095206882 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084926313 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.08882702 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116462808 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092706054 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.093580624 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107757737 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130225775 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102770627 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116252172 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090869046 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08993409 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.114845026 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.095143472 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.09502114 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116991003 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097441621 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088552405 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109123028 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098486093 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087227233 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.093197676 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110911468 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093207132 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084300756 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.112915736 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08425548 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095708292 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.113179956 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096185157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.09543508 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111858806 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092825435 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099993422 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106869664 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09767385 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084737828 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.094447956 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.121411869 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098599712 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096477331 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.113393957 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090195786 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.092683576 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11833915 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095311778 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091166382 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112049965 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.086604565 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085474611 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.095654861 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114550759 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088282886 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091208741 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112536904 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094920112 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08906634 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104278964 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096466433 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095028533 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107940522 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093632693 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087248989 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110009037 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101465968 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084354568 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107429242 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094814839 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.095893242 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.110551512 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093448629 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.09429162 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.0969004 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.114969665 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09479559 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088998776 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119592109 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091171735 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090431589 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10735477 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.09507675 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086239974 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.092097991 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.11231173 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089278041 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.087613411 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116184522 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097660847 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096054631 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110715298 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097788857 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.096435706 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.116751062 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090422497 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097147863 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106766403 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.086565038 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08838687 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084017587 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.11388123 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089228263 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096111556 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110175611 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091416877 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094757081 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114831758 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09046246 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096439814 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122660927 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086702439 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084939749 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111013784 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103332812 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.087999291 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.10801631 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094223039 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093556093 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.114598561 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096404323 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088502248 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.111904216 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100265416 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088292617 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.098136577 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.117387251 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.099680873 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08764347 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.116474458 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090463213 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095292517 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.106331722 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092801707 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091528348 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111611935 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090045187 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091211174 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.108151752 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086275874 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088619186 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.115902969 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092201258 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097048961 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100014548 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.111125585 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090163657 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088245042 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.117885725 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.091150716 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.097865916 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.112759117 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087298351 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086612976 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116612041 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092615154 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098076473 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087944121 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.116222919 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099336166 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.09597997 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.114362401 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101364567 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100318615 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118140772 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098503206 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08521904 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110141994 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098181481 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092713892 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.113486402 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.095248933 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08733028 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095247267 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118463783 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094418216 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091167947 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.106767958 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093394054 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099488328 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.115454614 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097708144 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095071995 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112784782 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08854644 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096622573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.09738652 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113214917 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099611743 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091657373 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.11666277 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090925052 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097934716 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.114045335 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088646036 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086257299 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109272162 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09971709 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087041516 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097340152 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.118399707 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090588012 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091669955 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.116983263 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090230709 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09482601 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117353332 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091497986 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.101314784 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.113598061 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092442491 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.09799367 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097567936 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.107518503 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093013416 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091441719 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.119531278 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093061678 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096825953 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113036895 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098242585 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095476763 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.116855412 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100430092 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099036288 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086576196 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.120390413 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097284942 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.093991044 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.11162432 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091905359 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087230716 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.112072816 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101512638 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089788325 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121219642 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100101562 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090964124 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110337306 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.099732776 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092127634 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098173241 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111735698 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095334398 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086469616 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115684246 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093807521 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.098617681 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.110296148 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088672567 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097788215 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.117741661 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097605997 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.094631338 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.118123178 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088303314 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.086596808 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09506652 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110804593 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102572046 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094897458 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.111811772 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091816728 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.094731471 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.11381698 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100458756 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087188411 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109251735 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095881353 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.094406006 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.110320375 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089359501 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097894157 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091885848 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115841858 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092011179 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087507677 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112597926 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.09949855 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.091286269 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.110140665 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.09241434 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099020979 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111936534 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091608019 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087180921 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.119078903 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096582586 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09997131 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110086018 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09504899 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091511871 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.115080462 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102341233 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091620753 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092896836 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.113407148 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098462125 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09796308 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110485451 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091890963 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102398227 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118897846 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096054302 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095712152 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.113041243 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100949647 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101133448 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.115253465 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088945087 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089053936 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092068076 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109522589 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097821105 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0978663 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.11349245 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092401654 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097632001 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118079107 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098322581 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096512375 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.107995691 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102728465 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091873555 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096126569 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.108804748 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088455776 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.09537573 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119278209 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094030084 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093367695 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.114717993 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097747917 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089419714 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.090831022 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11839459 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097929844 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.098500126 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114182405 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092292362 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.096828187 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125066517 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.095780396 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092012749 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122664569 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100544912 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094138037 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113354742 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099514716 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100199393 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.115301538 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10065518 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091132116 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112999398 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101973858 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100999522 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122775611 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094820935 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087850103 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.097403914 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112735456 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088944872 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.096979645 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123990176 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.101638638 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.092818402 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111174276 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104503063 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099173807 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115963599 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092723123 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092232798 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11814444 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092546251 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.09721218 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110831836 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10250447 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102130522 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098735368 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124152373 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088554718 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099000098 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118203449 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102776888 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.094718269 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109508418 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090540947 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.096564025 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.1216748 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.10221416 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098980126 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.097915324 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119962777 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096140362 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094721019 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112969301 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104076408 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.098921171 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.114439875 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097692719 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092616857 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.115924296 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096959449 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100906055 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100253854 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.11626468 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103716443 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100881542 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.115341334 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093072535 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094899474 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.117514181 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095741987 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099042303 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.111244979 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090916193 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099952761 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101062645 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115925961 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102989932 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101116876 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.115054087 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098519617 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100612598 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.121269433 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097734297 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095529391 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.116982941 seconds)
  done (took 60.913943057 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143984319 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10275265 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118022384 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097683323 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114419717 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119586929 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097449568 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098199832 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119158065 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107332329 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.096053835 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116270172 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113527201 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116699572 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134557923 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105940203 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116472935 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099288067 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096766797 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097495505 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132660949 seconds)
  done (took 3.256311278 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114724764 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109697644 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130449127 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111528699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102665438 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129337142 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108392311 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128904896 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111946103 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103476206 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.130833102 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108425051 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124795063 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107325275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105300381 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.127790326 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110919376 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103273604 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.129910646 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108656538 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126777703 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109896491 seconds)
  done (took 3.457925038 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127848466 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100465163 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095658246 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117731996 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100548846 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096335829 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120322535 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.097861395 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.104352784 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091112946 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109654257 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093231223 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094555836 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117686483 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092266817 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096564363 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.125162426 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101341706 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10140781 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096619756 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109199002 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098429418 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097430112 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108056266 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102705073 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.100928572 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.096718349 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.121284893 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089397745 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098793689 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118282615 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092443002 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089110884 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088013182 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110467986 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100722997 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.099292678 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.117125933 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099364962 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088590792 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.096901317 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121680807 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089419951 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097985928 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.117728401 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.091870209 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101121795 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.096737634 seconds)
  done (took 5.83909862 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127699953 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163201703 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.100900997 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136645535 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134354843 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108106828 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099822567 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136741245 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098653278 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123137996 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113258944 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110843077 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125614445 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106883627 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.099660454 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.124691923 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104454197 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100609947 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.126415098 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101706014 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105180432 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123968747 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.34869101 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131283562 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105024046 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101317071 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122657756 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105904012 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109599288 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128670753 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104948306 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105152304 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133391108 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101044649 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10029872 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.12395324 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112553068 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.121720554 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104547873 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.099526495 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.100956052 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125709854 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102092149 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132217217 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1030272 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102042394 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.121407632 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099063058 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.10928454 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.122964507 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.107682801 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.111072321 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123754249 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102231451 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.103137938 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.133060162 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101751221 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100058626 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123477672 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.10862519 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118991595 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107722864 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110188355 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.121508481 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.107013058 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110602842 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.123740315 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.103933133 seconds)
  done (took 9.031195843 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132726347 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.103938476 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133604166 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112768573 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103386538 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126015448 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10453547 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104058506 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.126835357 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108366522 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124255133 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.199092016 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124347956 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110371434 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.104172871 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12561856 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106158266 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103888562 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126529263 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104741259 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104828507 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133711918 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10463921 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133430222 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116489147 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101144184 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125183724 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105126441 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111571846 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127213599 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115396956 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.125958673 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106298669 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113559921 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137544199 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105430608 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100430099 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126658594 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105865649 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104850954 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.123777206 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115072346 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.125867849 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10308667 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105624 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12528917 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115379806 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.114728914 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130607821 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110345773 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.123571788 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114306564 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104432408 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125244243 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112821161 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.137994542 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113853301 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112725607 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125840516 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113183844 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132587909 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.119999691 seconds)
  done (took 8.227689482 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099115053 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09819457 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097471975 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.11966418 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09944797 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097879503 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098212515 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121402451 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098397951 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097762971 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119679158 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099783464 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098427052 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097475499 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120112311 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099865984 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098459591 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118227166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099727791 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098586092 seconds)
  done (took 3.011889639 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109250184 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116455535 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121549768 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107812032 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101318722 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126472117 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101733046 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101637905 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100967123 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123133812 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109281106 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12970505 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102039098 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105891569 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129031742 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107621799 seconds)
  done (took 2.729328903 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.118926996 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11593734 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190200692 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.10266461 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124087743 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108858452 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101599279 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.126038417 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101823449 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107171017 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.103309194 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126101932 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.100991513 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.101666601 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12328977 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105283886 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099757538 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126213215 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102340222 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.187418767 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105560151 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103009478 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.122487906 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105942315 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.101875732 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.126744734 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107372085 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100967109 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102216951 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123783113 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104083037 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107329788 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.122029386 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105920825 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.101010747 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.123514903 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101711478 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101229437 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.123698271 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102138814 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103102287 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.122264185 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102244903 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103495929 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098827743 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.123016204 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100559595 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.10643436 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.122836162 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103572822 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100470021 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.12842291 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106409937 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108309483 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131277616 seconds)
  done (took 7.1651581 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113377055 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10366964 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133195607 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101097343 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102586322 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102525934 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124141961 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.10344566 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101267522 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120848341 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103422802 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102850302 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123216047 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103742681 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102218691 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1227914 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100910078 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10264371 seconds)
  done (took 2.905657093 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106758373 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101106382 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104191265 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122834183 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100444148 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100436623 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122424993 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101454552 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100401991 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100013958 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123687002 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101400648 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099024808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123560547 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102555255 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100501718 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121677499 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102860236 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100681402 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099551545 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12393449 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101098388 seconds)
  done (took 3.303728976 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113197507 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182736577 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107628075 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18862274 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.09764957 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095572048 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127885406 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098024792 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.11231385 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.12016198 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096791247 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095685738 seconds)
  done (took 2.380379321 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128517127 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135436118 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123804943 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103427486 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109562859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129131238 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106365612 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10496506 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134600806 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116575757 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126695606 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114622579 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112417644 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134939296 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109263717 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130964506 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105701643 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10656372 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123476389 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122536434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10477917 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134032472 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106364859 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105646367 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127425943 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114295714 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133757523 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116656234 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104495073 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136220908 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109873691 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126571586 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115021524 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115525236 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124749924 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114797987 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104566904 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142250827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109983838 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137213925 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103523173 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110294429 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133997938 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111151069 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134313809 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107047131 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111225882 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128015843 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106625975 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146095663 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112586933 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112457406 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1319359 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113394426 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112780501 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.148363165 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117010336 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136108152 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110377792 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139431998 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115241519 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10971902 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137427475 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116323438 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132052624 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115452953 seconds)
  done (took 8.864710552 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141293331 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103359462 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127997241 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117047475 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134644513 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107780563 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108756823 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127699804 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108076511 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102694381 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168099967 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105937339 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114023323 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137584751 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105941658 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127589229 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107937441 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11348734 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125272071 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126422363 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1274651 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116205679 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114217512 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136308247 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11753352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13291858 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106986619 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107480508 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127856745 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108139817 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11146843 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129576675 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115892922 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103046324 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136834613 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106850319 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128480573 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112846738 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106987342 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133084257 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115570102 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120184929 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129127338 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106866368 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138786284 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108267261 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106244261 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126878175 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107530385 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102969274 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140055527 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118335633 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140118838 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116456364 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106754503 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129523407 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108002586 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106304622 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130134116 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111414137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135424015 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109692703 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126411027 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12966821 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107560337 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135798412 seconds)
  done (took 8.8589802 seconds)
done (took 167.689806255 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.149186087 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.186804502 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.14544351 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.178370604 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093659474 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127546148 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147610341 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.148886787 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091822364 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115314403 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093419412 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094325168 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182841515 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093831798 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092066208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.117125898 seconds)
  done (took 3.003948189 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.190105022 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307366847 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106241449 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119485921 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100042872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.096832484 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.118733467 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099802227 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097302274 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126238198 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098729099 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.09332147 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125012393 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.094571618 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098048553 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096781719 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.127529286 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097359762 seconds)
  done (took 3.146733316 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117856422 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142974741 seconds)
  done (took 1.220256696 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.127898696 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191971941 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278069343 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.166246179 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119139603 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138324198 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146882631 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131572624 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186458163 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131280814 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111212158 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.095980682 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144385114 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103736544 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112775787 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117965183 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12629341 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.111353211 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.134723479 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10011078 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119795324 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.123513288 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10235799 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133763927 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178745196 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.109546172 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.124954709 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100846288 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121693993 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113779825 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103610736 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.13733204 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110941267 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175196784 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101703339 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.172627755 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105124693 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.120172742 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.111969183 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098791759 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.123783169 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102745829 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110544295 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119768955 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102399667 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.103630612 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.123424901 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101643481 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104497403 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.127757404 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105054839 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.126126638 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.148654386 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128095852 seconds)
  done (took 7.827293142 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.853969312 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139195955 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098402227 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.003664699 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148725698 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113545038 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.849503707 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144772779 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25173027 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.880769932 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115225558 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109767799 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.254734174 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254624999 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.257677176 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.377485856 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.697384486 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.135428596 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128169125 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160845573 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107014877 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146298085 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120472377 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519669383 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100109304 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098482349 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129790493 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112622635 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174887765 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100544513 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.124812955 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173315822 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.290463693 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205909214 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12019703 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100387098 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098642332 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.182862686 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26763084 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214234145 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191618705 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096737111 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098972549 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130286244 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119495463 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095742762 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177174617 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18943669 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188503375 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103517459 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133284419 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110859439 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107173131 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176639906 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095606293 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376453958 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360696115 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09936227 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105875554 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137789054 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262007657 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10032137 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230005163 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149010893 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.20947566 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098937624 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.838949003 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.182342429 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099208166 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.128979201 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105927979 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105076482 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.129815019 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.165516009 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.501557235 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111015032 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126378806 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098604156 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229433516 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09875765 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121260689 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.155610826 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122462909 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107447341 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134606434 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112756731 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187512657 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267897448 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112260787 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108130959 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127555089 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111511908 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09970283 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232495858 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222688516 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173986181 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.227291669 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10762888 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1800553 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.183056848 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106779618 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18747168 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106045575 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.138908167 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108246017 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219424521 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155514782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10060248 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125904738 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108617356 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155114856 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104153057 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108504679 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188444662 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.555644804 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.180983 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0979365 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104037844 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13028026 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1544895 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128122071 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257633003 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109062724 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183772936 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107617088 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.096476756 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131070686 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178162352 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110427643 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107123444 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131304095 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108546049 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.278177109 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216280468 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133724771 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247368998 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.175398606 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.127687041 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168577005 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129787267 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163054489 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132619786 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107835694 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100111418 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.847803112 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115164561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106476884 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127807086 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182474804 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121641487 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103071331 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.099988211 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119024596 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813246538 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104695132 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.09796099 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101853699 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131091775 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107515808 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129537689 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106729149 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177729458 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240711655 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112554788 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129765955 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.10085989 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17867592 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101464771 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099328039 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124466188 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.10115846 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107998192 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128817863 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103332233 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189165111 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172682735 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227210358 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.632666595 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100226965 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099771689 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258080431 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102716501 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320987095 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107428325 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.252432565 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160636066 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.119694743 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359545715 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.182515239 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.189076127 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125437972 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.166924261 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118640704 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110293055 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.176499347 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101103362 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106516997 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.17435776 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136044345 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113488684 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273797751 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099448999 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249714381 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.119650852 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165466739 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123840428 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107642473 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.320300891 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099674972 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14031618 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.176162983 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104719886 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099854966 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.671288313 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.122391902 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113912698 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106631131 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25117025 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.158700067 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13148415 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108911853 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134958581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155317024 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228226267 seconds)
  done (took 47.4510888 seconds)
done (took 63.598011193 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.294026315 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.254608023 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.302699495 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.208175855 seconds)
  done (took 2.110901705 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.258186099 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161494119 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.231402175 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096563311 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.239961666 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.095986649 seconds)
  done (took 2.068261771 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.486939425 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.365011363 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.301482573 seconds)
  done (took 2.140683406 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251405132 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237580981 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.327613001 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.400345819 seconds)
  done (took 2.321101904 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.264323323 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122796137 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122342014 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.209470804 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.229658266 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.208926338 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126626305 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177044381 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127477247 seconds)
  done (took 2.624540517 seconds)
done (took 12.244740619 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.349838636 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.077049721 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.338882089 seconds)
    (4/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.312023729 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.138334027 seconds)
    (6/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.288893001 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.234073282 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110194497 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.219495279 seconds)
    (10/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.216231407 seconds)
    (11/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.217834687 seconds)
    (12/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107484909 seconds)
    (13/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.159590409 seconds)
    (14/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.199433513 seconds)
    (15/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.310695746 seconds)
    (16/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.243425505 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.156903427 seconds)
    (18/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107263629 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.156800213 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.323214578 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125611602 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.153083537 seconds)
    (23/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116125022 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.233424028 seconds)
    (25/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.12900493 seconds)
    (26/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.109035988 seconds)
    (27/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.14424515 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179993745 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.171199393 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.153182795 seconds)
    (31/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.16717438 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.146914279 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115052781 seconds)
    (34/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.210909252 seconds)
    (35/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.110555617 seconds)
    (36/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.189035807 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.211989453 seconds)
    (38/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193017085 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.134298741 seconds)
    (40/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.146932124 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.290542246 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.169626189 seconds)
    (43/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.200696238 seconds)
    (44/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.135818558 seconds)
    (45/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.167423614 seconds)
    (46/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.234759534 seconds)
    (47/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.130927235 seconds)
    (48/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.205348474 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130827185 seconds)
    (50/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104110701 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.21074603 seconds)
    (52/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.135555143 seconds)
    (53/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.075886211 seconds)
    (54/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.074495053 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.133863433 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101442982 seconds)
    (57/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074930949 seconds)
    (58/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.195859845 seconds)
    (59/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.139858044 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.16319709 seconds)
    (61/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126147373 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.17681281 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.160490075 seconds)
    (64/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.154926647 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.156713474 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.140181389 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120836734 seconds)
    (68/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.15101438 seconds)
    (69/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.094823854 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098496497 seconds)
    (71/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.12631311 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12634044 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.076822548 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10234284 seconds)
    (75/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077669946 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.125613228 seconds)
    (77/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.105825917 seconds)
    (78/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.181400975 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12132707 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.075956348 seconds)
    (81/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.182504518 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129872664 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.122269579 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.075331611 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.125321148 seconds)
    (86/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.079036409 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099245887 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.104514728 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.134785467 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102823537 seconds)
    (91/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.086006575 seconds)
    (92/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.107667636 seconds)
    (93/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.211584546 seconds)
    (94/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12375634 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.214864888 seconds)
    (96/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.109902786 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100281997 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.10873772 seconds)
    (99/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.087211621 seconds)
    (100/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.170367628 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.124339443 seconds)
    (102/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077879683 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.076567137 seconds)
    (104/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.170437342 seconds)
    (105/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.189642613 seconds)
    (106/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11159671 seconds)
    (107/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077640602 seconds)
    (108/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.164488978 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.101516525 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.077615301 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101505575 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.133008635 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.170994801 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.191142395 seconds)
    (115/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.07735779 seconds)
    (116/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.167881073 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.191001879 seconds)
    (118/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07873389 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.086600662 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.076461212 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.076045267 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.128920562 seconds)
    (123/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.102835952 seconds)
    (124/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.084277157 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.075811671 seconds)
    (126/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.075285814 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149813173 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.12537796 seconds)
    (129/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.142331914 seconds)
    (130/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132415508 seconds)
    (131/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.077214283 seconds)
    (132/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.083631361 seconds)
    (133/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11007909 seconds)
    (134/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.10118598 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111424901 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.100722608 seconds)
    (137/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.075753707 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12414654 seconds)
    (139/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.085338285 seconds)
    (140/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108616365 seconds)
    (141/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.076282176 seconds)
    (142/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.101675198 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106489226 seconds)
    (144/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080540555 seconds)
    (145/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.077398813 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.077713545 seconds)
    (147/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.101571108 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078856009 seconds)
    (149/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07680929 seconds)
    (150/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078521011 seconds)
    (151/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.077914459 seconds)
    (152/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122720684 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.077699658 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098787713 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098511394 seconds)
    (156/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.100988989 seconds)
    (157/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077387508 seconds)
    (158/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.170124506 seconds)
    (159/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077595333 seconds)
    (160/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.102603769 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11048679 seconds)
    (162/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084208169 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.076767791 seconds)
    (164/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.075196316 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.145731087 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.09926768 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.101296482 seconds)
    (168/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077867204 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127571316 seconds)
    (170/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.076747143 seconds)
    (171/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.084590282 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.076009133 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.125777589 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101923742 seconds)
    (175/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.078941385 seconds)
    (176/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.07865332 seconds)
    (177/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.100049761 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123098137 seconds)
    (179/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078169726 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.076801896 seconds)
    (181/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.140252577 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124418889 seconds)
    (183/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.079164024 seconds)
    (184/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108415114 seconds)
    (185/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.134095363 seconds)
    (186/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.078770778 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.108882932 seconds)
    (188/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.07872095 seconds)
    (189/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.076427503 seconds)
    (190/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.133044934 seconds)
    (191/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.110626522 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101368114 seconds)
  done (took 26.24302707 seconds)
done (took 27.241096856 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.212041658 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12776519 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.109161604 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107542059 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.204922181 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.11600093 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.148305771 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.110964076 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117777014 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132868253 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100166986 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120873358 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.10763729 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20565135 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110568775 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.127177021 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100617222 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.1176864 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149194901 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124921758 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204394934 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10309445 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118558269 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125876865 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177663383 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128148742 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108498908 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109532305 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.146595634 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11059949 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109749545 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124280137 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126693615 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.124683025 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123506942 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112427576 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100922192 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084688522 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134133757 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111810554 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122068491 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134530931 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110770467 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101133178 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.134529022 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110340943 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100912009 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13634017 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100820564 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110062837 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102325042 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.149893301 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108973166 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098507185 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.124680772 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102874024 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119313431 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126504038 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124098819 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10160998 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.125524729 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102545221 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112065554 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100158553 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.134815688 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100962957 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109255671 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.138139141 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110442751 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103272583 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125840511 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.11036326 seconds)
done (took 9.865382911 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107414231 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146012724 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.199153487 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.213157842 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.128637364 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114668383 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.142049291 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124379208 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112470623 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.14603079 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138093213 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.156142693 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.180295512 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.14107743 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116613844 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112871402 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.137380375 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110465898 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.209451568 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.124976368 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.124270266 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.141632651 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.127491061 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.140903629 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105346633 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.126321505 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.133915305 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114002636 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.10328185 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.147318054 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126228226 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105017485 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134774985 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125631729 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121209938 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.14047816 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117108867 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112707591 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131070585 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105562345 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.11282293 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145762401 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105803312 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.139130725 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115978819 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121269966 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.112016105 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.142781007 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106618436 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112047052 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.13232395 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130979359 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115834159 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.14717967 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.116897518 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.141065798 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120525594 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117816991 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132550695 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119035839 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106257313 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104604467 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132268732 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126452868 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.132000277 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119686048 seconds)
  done (took 9.582709656 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.124165238 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133400246 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140597878 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116673281 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109328035 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12399484 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099832557 seconds)
  done (took 1.89232917 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102278208 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185932703 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208623425 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208248943 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.181316993 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.216781287 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148998322 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101228832 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134855106 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136141953 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185843739 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.240619114 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109960971 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141500398 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184126648 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.125862275 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186131743 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129258261 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115185979 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210908891 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117510866 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156241263 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115162765 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100708252 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207953002 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.10215137 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260534995 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119196624 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136919386 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11549485 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114958108 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204935904 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.209910746 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.115178968 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108265697 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.209062266 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.207021015 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117134044 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.222972482 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10590123 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.208118729 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115545476 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115776712 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14272653 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117290231 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.194108204 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121032965 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11617453 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139458458 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.192358036 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.136602736 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186190659 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137139461 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116643103 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111684666 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142526803 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123739028 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.11605216 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.216874587 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118322591 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.208741546 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209167081 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.184572701 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210084105 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124802472 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.213728461 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205799541 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115529296 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109294453 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.142410128 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185020713 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140606891 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116158701 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.199574765 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119006851 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.211788921 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.184584207 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139046462 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115305312 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104376611 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.139641459 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103745599 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.199910511 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115734317 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112927991 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144084924 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115450738 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11554019 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.131830265 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127216863 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115407207 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.138492944 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121116874 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115042887 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143167726 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.188559002 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.13918684 seconds)
  done (took 15.724814273 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105443746 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103430255 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107092962 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129749429 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.103944984 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103189174 seconds)
  done (took 1.713168913 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140123587 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116653501 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150001282 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117580722 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.161183185 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.218563192 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.221158589 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110369425 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158026682 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12656619 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220294921 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.196209021 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.219958555 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118769884 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.22399605 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117708544 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.223686018 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115020076 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152558815 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114268072 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140870792 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121259304 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113616475 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.210887686 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11705375 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144267569 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111191555 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12428725 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150497421 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112135719 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118708884 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144721795 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110094186 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110109133 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.225127451 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108536401 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140198308 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120158259 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117098546 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.143922746 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.22271023 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115590172 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.121963616 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.144386795 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112787661 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.108782718 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145070148 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11098821 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.225356267 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120535201 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119381769 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144798607 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119563929 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119002026 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.1360463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111927051 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119377232 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.22524476 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145541508 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111475961 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117582335 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143417519 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112214377 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121268028 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144028116 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121107839 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10891403 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142867266 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115108033 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117835118 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.144886402 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118278363 seconds)
  done (took 11.260324489 seconds)
done (took 41.208755979 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.568080427 seconds)
  done (took 2.626416033 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.829451827 seconds)
  done (took 1.888050078 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.695649856 seconds)
  done (took 19.788466872 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.523934569 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.596131482 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.027090246 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150372495 seconds)
  done (took 3.35901967 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.089929212 seconds)
  done (took 2.168499631 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.294394799 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267954819 seconds)
  done (took 1.628685349 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.739224557 seconds)
  done (took 1.816000667 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.506817711 seconds)
  done (took 2.577099216 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.351863276 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.178337018 seconds)
  done (took 1.609743975 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.61081119 seconds)
  done (took 1.692765809 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.908293673 seconds)
  done (took 20.993112981 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.249015118 seconds)
  done (took 1.337540786 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284904774 seconds)
  done (took 1.374766851 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.750284994 seconds)
  done (took 4.838310222 seconds)
done (took 68.769573569 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113991839 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116017935 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114616149 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138813102 seconds)
  done (took 1.559608369 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122094821 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116400393 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119356302 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.163178743 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123090825 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115646721 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142454403 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118435447 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.115671253 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14586775 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117085592 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.114575536 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14509665 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116261334 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113615858 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145651818 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120246282 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117442983 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143482581 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118569549 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117521894 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144119673 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.12086305 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.11805245 seconds)
  done (took 4.122098322 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113956765 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.10739035 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108064989 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132355852 seconds)
  done (took 1.553684132 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125427762 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128241113 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151884191 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.123599046 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128551995 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153390673 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11567384 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112974084 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142519077 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126590061 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133314228 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156069708 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127959961 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116508819 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.153688754 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111987222 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.115899149 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155165074 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123382173 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124999277 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.144391495 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123372337 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120464775 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152321749 seconds)
  done (took 4.254864631 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189843147 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127908159 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173667977 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159911384 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.177426887 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115406651 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142741243 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149026936 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122028074 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117097384 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145689046 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.16096113 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.147760486 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119584074 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116761775 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148111897 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128400316 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121582093 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187954185 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12049357 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.14876127 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130473641 seconds)
  done (took 4.24091695 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119596901 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107985618 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103209216 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.13377619 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119029644 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108621373 seconds)
  done (took 1.78865991 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107335896 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101062647 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102046903 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127519724 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106579216 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101426726 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.100374989 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.129417364 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102584858 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102052023 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.127974808 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102854049 seconds)
  done (took 2.407646484 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.33373772 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.10705962 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.13424698 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.110525894 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111898382 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103409455 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145484976 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106357161 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.272223284 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.101049337 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.143859038 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196800565 seconds)
  done (took 2.964202398 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198264381 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144247856 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.289860176 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337851638 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185323419 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183910269 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267401256 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18948349 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173900332 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161188922 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212947924 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159159339 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178732204 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182431123 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16621704 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158577076 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193088232 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201990778 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166982818 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232812078 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154116008 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197452931 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187411103 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173475646 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135609157 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184679504 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.116458671 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124163981 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190106246 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185972575 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168502705 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174393348 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139072972 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213478991 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248686556 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16782402 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284662449 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159993423 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167931449 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.214189909 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255673925 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138515265 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210319088 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176155358 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128487696 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213219342 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150046632 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.207864477 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131826084 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168854982 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175902718 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202599861 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19799687 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134552249 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304947496 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131793391 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167673981 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163933273 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212185532 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222893018 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175408981 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12013972 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205250416 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215226975 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235735004 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139525628 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188477279 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122573346 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190110399 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201695046 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205810075 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184705625 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223340758 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130312619 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166019832 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195642309 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176457788 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199110607 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194572983 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119625286 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174906357 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132558272 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122591591 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21379313 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119576742 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239441521 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127752018 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341345772 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207687006 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151128124 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183445008 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182416408 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161122349 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143093538 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.128120713 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138789973 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.186658741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153179703 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151619406 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153042777 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135650562 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.14987017 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147150322 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.146232175 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164704347 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.157872427 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160432262 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191808082 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129371347 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201490965 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145952752 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.185084618 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163734311 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217057275 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126772109 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157502308 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214703684 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192851319 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.13297403 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20078936 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.222359662 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.148100362 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158653003 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160769086 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219784615 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139754235 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224587908 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133823842 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160456128 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136314674 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195399017 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155341908 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179413419 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125205489 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.188990328 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187074326 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152777464 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137386773 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205385654 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130672806 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149207281 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135553897 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132969129 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.169351339 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147132874 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.162975017 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152540999 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187709213 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164300997 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180002859 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132524839 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19368886 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12884636 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.190742126 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146616966 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116761015 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.19855242 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222095272 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128820382 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206435673 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160577912 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212134309 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196563413 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127826113 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207045426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127679033 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.117821336 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185612153 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165949101 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185918061 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211531264 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180869541 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18875943 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185391908 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145751906 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190954011 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.181583835 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179616236 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140581036 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197225576 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163226214 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146663383 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12155034 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123850907 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162398283 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126973374 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134062095 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199228117 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187841802 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20426987 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163971541 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161379677 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189171664 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122090019 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184838112 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199607226 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136700312 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214469389 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187045236 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204218086 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137795646 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185193815 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118174239 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150793188 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133731291 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.185286146 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135755265 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132793159 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166622284 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187366267 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196561146 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14300511 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220388923 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189046143 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225838779 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118883938 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157608745 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197112192 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16335472 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.210971444 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132789614 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.184010885 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188707896 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167456319 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187755081 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19416742 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202228449 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191425201 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.191388246 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128820793 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174061949 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159320762 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162743966 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163080434 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17229743 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130754954 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148937774 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163286365 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137470186 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205659429 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139600319 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201446863 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183959453 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166575663 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150630756 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139503645 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199011135 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142496756 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103621614 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193819399 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218464148 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146877688 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17891368 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172232835 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126605157 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341333441 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214611072 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172017031 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162515225 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135539765 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196024568 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160635048 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18782579 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181916791 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167186908 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228916776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167549812 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139680718 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158805762 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145473313 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177181668 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.135995732 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.175145323 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.158446238 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170668794 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179981721 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16380435 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167153287 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200456133 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14249048 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175511464 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136236722 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249126733 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189937387 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169951464 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.187461441 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164496657 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209272549 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121486787 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124658932 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.158767865 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18286276 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156298997 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172085268 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.200900404 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212140309 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198450703 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160503095 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137306482 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.15444633 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164276887 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174715448 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213529023 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133853651 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134568695 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215658144 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125923582 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157511793 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157948056 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302915269 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144916668 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199590046 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.105861203 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.295775871 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127001915 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1592766 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161270064 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193749041 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.13052565 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.181352694 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198647146 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136413392 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19009347 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132230505 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209050104 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21471202 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160237163 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197813305 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.139889644 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186320246 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18400526 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173061797 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169657336 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146507913 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154088134 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219646519 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.208338343 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131209632 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192388236 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166894817 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195270721 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167997758 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164992937 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181182784 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152579501 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161594087 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164651763 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124125162 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155323997 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.201645027 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156026431 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174641601 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194617793 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129129153 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124399771 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17278095 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161421638 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166265338 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127513953 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207641042 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126972761 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206540209 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227625781 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129789009 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163294906 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172153548 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127858015 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163156823 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141737481 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127929866 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.202398032 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178792393 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.157592616 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174910225 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188451633 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159357856 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182806218 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141004841 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.361488592 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12732598 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217147518 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148508739 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221715149 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147015992 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201507009 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165198506 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176145875 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158369856 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173631115 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.217792693 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189139363 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.163230571 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158759342 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139238961 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164448733 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131391186 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147711105 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194339506 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137469654 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162785769 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.164385802 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170960682 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.143242592 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167884054 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198812811 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178065724 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178985378 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212784394 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134730825 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200625328 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198675159 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127136421 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188170912 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16812496 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168082132 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148627657 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.131425369 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.164818379 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206140308 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.152982702 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155905547 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199277161 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16522702 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198287711 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131451776 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20285437 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138186922 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201996723 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125195682 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179386758 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171225662 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160558256 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126740232 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168764723 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18345929 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162339362 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17032148 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173100318 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223699292 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122893809 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158121202 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271457938 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187372565 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191043778 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.164645855 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133614472 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171088263 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155143489 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.188910517 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169407654 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.126995987 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156901727 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143632428 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.18389442 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143659814 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195851552 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168126444 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186150243 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182338344 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.162107642 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.254117189 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169134732 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167796163 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142500115 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129109098 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13720622 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160893816 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138998679 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209362002 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240187092 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162004874 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.171255599 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134104569 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12420279 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155816658 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164295362 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175621372 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166729754 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171772847 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104066079 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137690637 seconds)
  done (took 85.02033629 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161426364 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151918571 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167353327 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222254955 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192398858 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287600947 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227674198 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244338867 seconds)
  done (took 2.834150831 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.11760887 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158156501 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.139742162 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143422378 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108163476 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.44325365 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128679386 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.146128302 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157657176 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151131117 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.135027229 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.624172942 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11409706 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.1440276 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119656849 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.135431071 seconds)
  done (took 4.138017905 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.644494086 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.549801328 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.979215099 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.297153308 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.25144582 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20016385 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.76365761 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.188141777 seconds)
  done (took 13.056368284 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.144520549 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.134600672 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.332729824 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.257082858 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.147559263 seconds)
  done (took 2.206499985 seconds)
done (took 131.222291397 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121246365 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121496708 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120000238 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152314666 seconds)
  done (took 1.690468972 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.175237279 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090066418 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.093282433 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.11714948 seconds)
  done (took 1.661739673 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.408370225 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090426914 seconds)
  done (took 1.712564457 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149230283 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139530047 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164662991 seconds)
  done (took 1.652812775 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139579807 seconds)
  done (took 1.329151798 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.12645288 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119644669 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.236339888 seconds)
  done (took 1.677373762 seconds)
done (took 10.917775698 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118034407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.916833947 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431927929 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130506456 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.706076803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425457321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.418498028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172866632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171955241 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135731304 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130223683 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688201361 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.436349712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.87642125 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.391707846 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.905694465 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694500346 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108720829 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144200338 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110221305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.401563852 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135871334 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110848542 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109876278 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718738831 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419069998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106952734 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918183572 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108029265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11145681 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426147774 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10965121 seconds)
  done (took 20.972006665 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117658666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16313139 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144974357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110883416 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111513283 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138115015 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121304384 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120750707 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202905825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108329832 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1587904 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108524133 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113672272 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139010719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134710049 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107842358 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140296377 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11346637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115700106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137901049 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131071257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108175421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137542943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111848624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107658768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158252423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110586041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120189064 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137483776 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113761962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114357968 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108815172 seconds)
  done (took 5.269825424 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155868263 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173217192 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146460653 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145300902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184075311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110974518 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222789703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146812575 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202867883 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110023349 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129327372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.136513822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149347834 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.1096425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.16299986 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109295928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111242174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139764822 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117897999 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110042187 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.16097749 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108244417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109920334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.13999454 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109757856 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130734069 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138676366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121833974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107831875 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142834552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114863918 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108999055 seconds)
  done (took 5.572496959 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123163024 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124261755 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131195325 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161559349 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118712437 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121804034 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.152832748 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119576802 seconds)
  done (took 2.258726325 seconds)
done (took 35.265952883 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134658548 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128542212 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.12833122 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.153774115 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.190492 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148192064 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126726151 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115340126 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154892263 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130771446 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109645838 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116221092 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158676445 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119070931 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.2212336 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.12479032 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.226707937 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.192814727 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.14747798 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124530299 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.11800915 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.227281319 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120134061 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145879587 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197043341 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110384975 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.211652419 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11899098 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.149502609 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111656235 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.222011673 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121916837 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116212675 seconds)
  done (took 6.115920939 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.208509042 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118172706 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147945352 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.11819187 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117959735 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147939965 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.211007921 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147129309 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117915321 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118037801 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116621881 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.224597228 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.12310983 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143444921 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121315842 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107954674 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.2426571 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.118996686 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108392261 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122465473 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114631217 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117472764 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.2537312 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113138229 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116018726 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.148398437 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120857493 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122426565 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148935849 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120572705 seconds)
  done (took 5.471825513 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123869512 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130135984 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.134421402 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214211739 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146349473 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159548428 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137920949 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131653457 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.169252793 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111595842 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.125812972 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177036698 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127499872 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121237516 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145853767 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130395973 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132000253 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.141926025 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120063611 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128962042 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161738246 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129448355 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.133910362 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.148785101 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111666735 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11794873 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.149732943 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127294872 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119355373 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.124489051 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.14516768 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115018026 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.112701024 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.176711958 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.11344088 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.153375832 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137430235 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122981186 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.122683833 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.173700194 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114530124 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.111664451 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.167384695 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.163857985 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.112295111 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.154741484 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122544164 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.124501011 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.140158792 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.1292931 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152460895 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.141580192 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133682107 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.110180436 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140805186 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119705289 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111652545 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.145994604 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128072449 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113797771 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.163696986 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119894391 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122207847 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141985156 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.125438725 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111067157 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.110263665 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.145941003 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139431335 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.11888235 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.179312006 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113571155 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122886906 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.154702526 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124623354 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.124097292 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.140234037 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125225456 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122274303 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.116583462 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.156214853 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1159292 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.115080745 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.158231093 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132563802 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125271091 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.154227981 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125033373 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.114232382 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.143833474 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129142022 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112770213 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.146838604 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126343291 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111672912 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.14454839 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12576888 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123475946 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.109143559 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.167466864 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115750043 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.111543657 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.166797629 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115815792 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11674362 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.151153896 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.154628562 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111183802 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.153360676 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125593257 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111455858 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.148860163 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.116545475 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111506428 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.158061531 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129573678 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119313895 seconds)
  done (took 16.845122373 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.320216277 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.307925847 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.180813258 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309768396 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.155532346 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.206536485 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.305457123 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.306805718 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.111459568 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181924786 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162842262 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.276500772 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.144308805 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.14079006 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.308876689 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.363041379 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.173293451 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.149976503 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181590937 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.125998053 seconds)
  done (took 5.64123203 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.132692255 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146596339 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.166482153 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.140128219 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123077512 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160860193 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112410294 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135203866 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.154789681 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122307238 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114919155 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.159951997 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125554318 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.12804929 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158945073 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146606363 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119670531 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148484049 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136046805 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117343382 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.13157669 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.13836823 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.11996372 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165198506 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132194008 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123895851 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142209678 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119549176 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118815054 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.15125695 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118421061 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130804512 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.148907085 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105409368 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124770266 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126528169 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.149787424 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116286684 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117274016 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.145512782 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128197667 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125353637 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150533113 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099160041 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132153135 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109138485 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155118974 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126730877 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.106256728 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130812272 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.156036629 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.128178482 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118676037 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.165694088 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120447461 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128561077 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154445818 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12848873 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.116779933 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141262307 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113366246 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116732114 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.150561932 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129495858 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125950978 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162253891 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130291207 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112797832 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146593393 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118741157 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117792817 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.125656099 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164612231 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123470795 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119384156 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.155909049 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122097149 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.094210044 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.151818159 seconds)
  done (took 11.720571819 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138654044 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124003019 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131305607 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.17869783 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.1268636 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117616962 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15446372 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132580755 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129815526 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.162494828 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128640065 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126226487 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165462995 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125259893 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122848574 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160082247 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.12725197 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149667657 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162632335 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.13998725 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127896503 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151422761 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126181512 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12297077 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173610858 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124730896 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139028325 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.160748831 seconds)
  done (took 5.164808141 seconds)
done (took 52.163780001 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.396625528 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.576331902 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.339104298 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.333141553 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.35661988 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.345338315 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.359060184 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.332382376 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.837541813 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.308189175 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.334329313 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.332188541 seconds)
done (took 30.081225251 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.329113487 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.85386548 seconds)
    (2/2) benchmarking "String"...
    done (took 1.626248108 seconds)
  done (took 4.704166495 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.323827021 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.324213143 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.573461859 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.323539768 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.347207194 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.328735415 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.329595281 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.342372584 seconds)
  done (took 16.792639892 seconds)
done (took 27.372113964 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.387389205 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.508742271 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.57574129 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.324273085 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.329521175 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.343434822 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.327538136 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.356884955 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.340579032 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.331809913 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.754099837 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.594068251 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.33019055 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.700797566 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.325587744 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.329223571 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.356483326 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.561306463 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.331381061 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.358936347 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.303586567 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.315839513 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.34350306 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.326793056 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.335874983 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.332426362 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.368372911 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.326760885 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.51898195 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.330856367 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.357533725 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.329743348 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.359783329 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.337795072 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.333360672 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.340042972 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.522010366 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.338701245 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.306298773 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.349954278 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.517654352 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.345439255 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.333505729 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.330664761 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.336170328 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.392399514 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.332905948 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.44290472 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.356459111 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.329196456 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.342886044 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.699253151 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.33946292 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.343818465 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.331954107 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.553618313 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.352840693 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.392230677 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.356110565 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.343251243 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.334639617 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.328970106 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.390827736 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.333300584 seconds)
  done (took 151.932500921 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.328661414 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.334805694 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.333859528 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.337308467 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.333623013 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.334984749 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.32811924 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.328861827 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.334990159 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.35399244 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.330536177 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.329347314 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.337094933 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.276406876 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.338477202 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.353052012 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.336041287 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.33099577 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.338548986 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.330942536 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.332557732 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.336441291 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.349978767 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.330438923 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.333604363 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.418176022 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.367500269 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.339196399 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.346912395 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.331317779 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.377470534 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.341985922 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.974714782 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.204079951 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.334239889 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.36115551 seconds)
  done (took 84.959185598 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.331257067 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.330240066 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.332338675 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.367394569 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.332570913 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.932010281 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.937113145 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.318393686 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.066593821 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.331325635 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.765295353 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.608345427 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.336758396 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.332391651 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.42555235 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.343558216 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.338943797 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.347928475 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.359137491 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.339141269 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.331195714 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.933572645 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.349315757 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.5579944 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.513857651 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.350200294 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.368529377 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.724330345 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.333883116 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.36923108 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.672096772 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.3857299 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.332873951 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.70068887 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.504019539 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.446714288 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.334566027 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367952608 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.334149489 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.6182507 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.334416803 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.333951573 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.336500645 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.003875608 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.340042396 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.936561562 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.339362778 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.305336924 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.333688131 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.334581769 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.482153662 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.011123237 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.333873959 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.334593792 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.336866583 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.334194166 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.335560177 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.368357822 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.412957703 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.435156591 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.336479675 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.339117566 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369377408 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.336749274 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.548958473 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.335771146 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.799274469 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.389349144 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.442236924 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.939147691 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.341071897 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.431557928 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.455694669 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.336869908 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.336286947 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.335650296 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.33670829 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.447669194 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.336149301 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.335594346 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.036104124 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.518957565 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.354668975 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.780029391 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.441030656 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.336354484 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.695097762 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.34381175 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.338775823 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.061866581 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.433758146 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.336709056 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.339018722 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.337842565 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.038208614 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.942406281 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.624105887 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.342587806 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.089465016 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.343768516 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.218711075 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.922239302 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.017868615 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.345487425 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.450180033 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.519898865 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.356361233 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.339301336 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.784195881 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.344309776 seconds)
    (111/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.338412949 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.337908156 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.396268773 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.747692981 seconds)
  done (took 390.605537704 seconds)
done (took 628.720744002 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.223809287 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.174525577 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.316900211 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.184411071 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.169602763 seconds)
  done (took 12.304929162 seconds)
done (took 13.540262224 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.541077319 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.538140781 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.404570432 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.545765481 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.373285728 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.558838769 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.52294372 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.355164471 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.452399205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.425675626 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.453240073 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.393463138 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.3751639 seconds)
  done (took 20.177355585 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.636941898 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.355400161 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.405196385 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.612141966 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.390319918 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.621554692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.680620825 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.354802035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.498871693 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.362731604 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.36307191 seconds)
  done (took 19.519268678 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.634270924 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.350664617 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.407659752 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.62515355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.388028538 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.651128949 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.681767735 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.358417616 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.505255834 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.364417249 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.361726038 seconds)
  done (took 19.567219308 seconds)
done (took 60.49929384 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.381512044 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.445437063 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.380807565 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.362302614 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.357937072 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.357690203 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.368764209 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.358442317 seconds)
  done (took 12.250669893 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.357260576 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.356268988 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.356716481 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.35581462 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.357402577 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.358970856 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.358391845 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.358649929 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.357835223 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.356793416 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.357245757 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.358577848 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.359369503 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.358523344 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.358594134 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.358847295 seconds)
  done (took 22.963691701 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.361945715 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.35782052 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.357890986 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.35800287 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.359091512 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.36165738 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.360560034 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.357975382 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.358377628 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.360235197 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.35997762 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.358728439 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.357868969 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.35838097 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.359674724 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.361765929 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.360173488 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.361088298 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.364231015 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.359527927 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.360209583 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.358568815 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.360333176 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.360349837 seconds)
  done (took 33.875233005 seconds)
done (took 70.327397845 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.358137147 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.34377248 seconds)
  done (took 5.94189117 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.422790769 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.419665081 seconds)
  done (took 4.082686153 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.359956961 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.35984714 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.361077569 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.360961877 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.360385996 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.360243575 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.36133855 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.359905441 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.359795496 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.359501711 seconds)
  done (took 14.842254946 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.361114634 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.358683268 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.361413802 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.361670093 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.362173797 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.360245356 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.360758657 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.36024862 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.358714131 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.360212216 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.362265479 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.360701193 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.361408461 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.360448187 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.359387055 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.361179297 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.362669871 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.361273049 seconds)
  done (took 25.735988785 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.373305317 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.381099323 seconds)
  done (took 3.996231683 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.490597226 seconds)
    (2/7) benchmarking "second"...
    done (took 1.403441091 seconds)
    (3/7) benchmarking "month"...
    done (took 1.46789931 seconds)
    (4/7) benchmarking "year"...
    done (took 1.456714286 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.403169515 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.382250937 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.402904181 seconds)
  done (took 11.249252644 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.363185003 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.566073535 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.698470119 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.943288269 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.364390542 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.365155252 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.220343916 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.367549415 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.368583206 seconds)
  done (took 15.499504172 seconds)
done (took 82.587035663 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.347823105 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.401495522 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.366339248 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.364515447 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.703265107 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.380831767 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.353403712 seconds)
done (took 17.161026585 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.335704943 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.348379552 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.328011056 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.37801571 seconds)
  done (took 10.633567095 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.350723977 seconds)
    (2/2) benchmarking "read"...
    done (took 1.673925272 seconds)
  done (took 5.266262758 seconds)
done (took 17.144174238 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.365863251 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.365408082 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.365000574 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.36254627 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.363841594 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.361927088 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.364691711 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.365559809 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.364459924 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.36518083 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.365796342 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.365795247 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.365085256 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364866274 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365697387 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.36496989 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365530262 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.364398348 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.363954093 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.365630607 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.364646856 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.36633406 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.363807882 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.364291633 seconds)
  done (took 33.999531958 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.365231383 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.367588819 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.36610791 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.364745573 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.364501687 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.364662282 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.365766428 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.3650668 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.364627659 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.366182472 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.365628865 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.366680482 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.367486256 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.366654748 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.364721642 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.366702294 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.365392774 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365972819 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365947092 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.366017762 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.366978055 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.366442974 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.366086435 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.36689352 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.365901413 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.365697771 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.366103686 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.367343885 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.367196308 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.367090589 seconds)
  done (took 42.228843075 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.368896508 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.367437495 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.367089631 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.367452315 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.368054432 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.367851468 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.366829135 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.367664763 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.366600903 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.368529444 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.368118898 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.368170507 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.369894829 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.367849474 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.367053415 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.36660973 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.36728826 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.367936154 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.36739391 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.367567847 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.368907866 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.36723597 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.366877093 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.367723192 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.368663951 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.368826795 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.367794877 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.368917045 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.368977093 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.368594303 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.370604239 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.369033066 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.367850426 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.36825331 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.368269681 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.369250809 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.373708129 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.371441185 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.369914689 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.370936227 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.369203604 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.369487518 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.369775286 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.369189292 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.370871623 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.370849621 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.369859972 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.370689464 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.369531688 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.370728664 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.370832395 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.369511675 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.370198574 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.370421774 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.370290879 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.369307927 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.370212864 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.370070452 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.368666351 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.369858462 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.371134373 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.370649983 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.370986022 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.37037163 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.372766916 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.370623548 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.370594515 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.370453672 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.371168776 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.370571189 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.370215446 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.372359606 seconds)
  done (took 99.837543002 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.371399424 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.37193425 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.371532881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.371223357 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.372035801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.370756098 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.371369754 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.371916551 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.371719651 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.372062907 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372156956 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.37287571 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371183682 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.374235342 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.373659708 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.372503618 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.37227824 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.372177808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.373469285 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.372834836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.373684369 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.374067375 seconds)
  done (took 31.442719035 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.373581478 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.374533489 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.373079043 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.374013805 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.37603116 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.373731108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.372724241 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.375216419 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.372416302 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.374468641 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374265911 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.374074832 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.375939364 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374789844 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.373676545 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.375405264 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.37361661 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.375827109 seconds)
  done (took 25.990260104 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.374092563 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.374330443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.375151768 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.374470396 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.374252565 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.375211493 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375120352 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.375376954 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.373106144 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.375472169 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.376078955 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374673728 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.375585579 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376911077 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375623305 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.376197813 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.375786305 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.376198626 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.375485763 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.376066488 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.374887046 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.374679178 seconds)
  done (took 31.507448763 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.37659772 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.375003209 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.37540576 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.375055729 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.375074568 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.374627893 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.375846217 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.375468128 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.376455618 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.376698846 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.377474514 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.375310562 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.37894207 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.376428442 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.376789611 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.377563823 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.376744329 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.374920814 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.37661889 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.37650903 seconds)
  done (took 28.779839837 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.376377697 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375681415 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.3759168 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376911831 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376030884 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.376928905 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.377629044 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.377320165 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.37697075 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.378057768 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.377577178 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.377503752 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.375858613 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.377115272 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.377240538 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376857695 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.37723034 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.376863372 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.377462205 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.379026477 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.378267846 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.378257731 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.376611331 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.377783007 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.376662357 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.377590264 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378400534 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.379066388 seconds)
  done (took 39.819137768 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.37754144 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.378300068 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.383902344 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.379315212 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.379997527 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.378655414 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.379158714 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.379418308 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.378737894 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.37943728 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.380517028 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.378075424 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.380522539 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.378479385 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.380192626 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.379528357 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379156745 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.380273936 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.380274771 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378596348 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.381038924 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.379883045 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.380623024 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.378827166 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381762706 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.37929736 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.379768818 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.379642347 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.380317037 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.379841239 seconds)
  done (took 42.649535353 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.39844949 seconds)
    (2/2) benchmarking "in"...
    done (took 1.398551855 seconds)
  done (took 4.055732704 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.382188693 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380348027 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.380130526 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.38171614 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.381834861 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.381489585 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.381148741 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.381000503 seconds)
  done (took 12.307795245 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.372577739 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.380895834 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.380491361 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.380979219 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.38200713 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.371570831 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.380787537 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.384481541 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.372992163 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.373614399 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.374049836 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.375839402 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.377780729 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375762511 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.374596107 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.377189163 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.383871533 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.38248539 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.381724099 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.382633823 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382245901 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.375454495 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.379305574 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.385244629 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.373835832 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.38267002 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.382667801 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.385951884 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.375247125 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.380004727 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.37810475 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.387059773 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.383186898 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.383561879 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.38494389 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.383066402 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.383275478 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.382966632 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.383835454 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.387530345 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.383128169 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.382206838 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.377036629 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.380376672 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.381588617 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.388007932 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.383922716 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.384287806 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.376515063 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.37900756 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.385906964 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.37608841 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.385247194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.380608981 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.381028341 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.386963698 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.39047962 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.376894068 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.378489648 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.384671297 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.392826802 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.386685506 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.383160595 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.389704395 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.38043395 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.384035031 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.38783351 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.391898965 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.385543093 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.383249292 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.385443508 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.392727347 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.388953655 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.39096623 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.38554022 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.385616529 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.380028763 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.387889905 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.387483604 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.390304296 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.391404932 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.38617533 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.382725961 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.384412399 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.382163551 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.390657935 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.385622503 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.385805921 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.377737293 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.388005147 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.394276116 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.386441366 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.377798765 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.382274768 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.383211361 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.389559351 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.379469691 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.382804272 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.389528471 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.386959246 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.38764572 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.379379214 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.386286614 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.39122988 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.387180176 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.387459029 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.393899121 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.380359263 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.391477855 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.396206937 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.387435761 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.382080933 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.386437785 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.391217531 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.381407648 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.385116678 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.393904948 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.38449769 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.395293603 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.389753539 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.385094356 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.391867797 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.395294748 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.387534616 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.383750768 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.393280234 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.388779173 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.387537159 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.395076802 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.388734693 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.389299924 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.385699689 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.395814243 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.382896253 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.392495654 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.383648797 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.391778452 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.389513234 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.388424996 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.385699703 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.389539287 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.386711341 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.389620175 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.391333773 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.395359165 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.385808048 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.395455206 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.389254428 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.389001564 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.391404765 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.395154817 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.390055507 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.38377431 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.393010092 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.382903074 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.392865135 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.383113677 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.393016493 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391196326 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.391005398 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.391199156 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.382903798 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.385444608 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.393659206 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.389161573 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.391437844 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.393609741 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.39095786 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.391382802 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.38487904 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.395085523 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.38366879 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.387498232 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.395579342 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.392518682 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.391558722 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.38860953 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397371552 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.39287525 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.392647244 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.386178886 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.389807244 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.396639415 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.394324172 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.400347126 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.393482307 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.392432602 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.386939513 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.387996262 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.394671029 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.386348614 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.399056289 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.39714277 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.399223522 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.388372763 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.394677058 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.383677107 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.394431726 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.394436909 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.400264156 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.392724741 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.393345181 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.387065899 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.395854964 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.38923824 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.397888207 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.386633975 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.396056539 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.393881938 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.394208324 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.394635916 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.387920036 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.391471293 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.39722374 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.393812547 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.395921338 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.387035892 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.398102762 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.387121921 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.389413813 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.397034945 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.394241155 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.398584058 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.403040907 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.391966311 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.399805472 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.396388968 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.390405679 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.396664494 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.39351681 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.395873508 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.399540922 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.397404606 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.391648586 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.400962672 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.397198525 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.389300885 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.397404813 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.402512498 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.397923571 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.390230232 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.398568822 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.397039988 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.396328359 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.396051171 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.390268201 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.400029456 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.398226293 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.406746985 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.391556455 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.400772146 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.393551261 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.399454014 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.392236983 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.398842785 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.395946182 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.399994931 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.40465313 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.396268198 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.391578078 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.400688236 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.399261906 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.398868853 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.391124097 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.400854186 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.399572828 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.398116726 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.396583855 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.393882778 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.400627598 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.391008896 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.400248029 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.391251881 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.406165533 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.413654632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.400775876 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.402753067 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.401973062 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.399101496 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.400959527 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.391920171 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.394451005 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.3957995 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.394914607 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.392552781 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.40204086 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.392582999 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.401461797 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.397111083 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.401106291 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.401059978 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.398340668 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.390121825 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.40359492 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.400494756 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.400474503 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.39214874 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.400757846 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.3949895 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.401226225 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.401471615 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.394182033 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.40620033 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.403660382 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.397595051 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.396277862 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.396147128 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.393810317 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.397491507 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.404701632 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.394048425 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.403624655 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.394179296 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.397078202 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.396726256 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.405954237 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.411182136 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.3955464 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.405480729 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.401381432 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.392923444 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.395237508 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.404804177 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.405855643 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.412366164 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.393943924 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.403659859 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.402680246 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.403949031 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.40057695 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.400764859 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.402837508 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.401960041 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.405018738 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.40527949 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.398030809 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.40327993 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.410498116 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.403241028 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.401381583 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.395189869 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.403303816 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.410147468 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.39848037 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.400918003 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.398197584 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.404135529 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.402123244 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.403973021 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.402130669 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.40377655 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.405473896 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.405450019 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.403962696 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.403305375 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.406052973 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.413871759 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.407967579 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.416301766 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.398314148 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.409888661 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.402843038 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.398041522 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.399907702 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.399311576 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.406402835 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.395271444 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.406437334 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.403540325 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.400617006 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.404720932 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.410827781 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.397201846 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.403431569 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.412168349 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.396793675 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.406735705 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.405754998 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.39840319 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.406535286 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.406169628 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.397907788 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.398718111 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.401220114 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.40874061 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.398699013 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.408318772 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.399149008 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.409394869 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.40576345 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.405343774 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.405064872 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.406562424 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.398746141 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.408453761 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.405717582 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.416159385 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.400989401 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.406157281 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.402943785 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.41211657 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.418230149 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.403738854 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.41321564 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.40753029 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.400857986 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.404445204 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.41139344 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.40205813 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.410514824 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.398526613 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.401161828 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.400685556 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.408913802 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.410802218 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.410017043 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.40029248 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.401239967 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.409141385 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.408541995 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.407248673 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.403462667 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.415712056 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.400146133 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.399348198 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.407639639 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.401823077 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.411478964 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.400914608 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.404431454 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.403721574 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.41045597 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.407728146 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.407638587 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.397876789 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.402233914 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.413933461 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.410810181 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.403302043 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.401230342 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.409477145 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.400654525 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.403951154 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.405143042 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.402166294 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.40291845 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.409688488 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.402237754 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.402387429 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.400842454 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.411769464 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.411255616 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.411448728 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.402088214 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.413174083 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.415242 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.414084847 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.400222394 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.402978101 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.402337427 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.41077995 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.407708912 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.40066528 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.415370947 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.413948484 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.412482156 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.407886417 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.408563603 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.400743868 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.410698316 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.40984377 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.404694321 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.415259198 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.405595684 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.415007936 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.408032229 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.409099173 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.400541613 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.40252047 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.403576678 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.403554279 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.410764065 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.407259212 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.411934881 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.406521118 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.41497967 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.408570772 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.409345795 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.409289474 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.401693895 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.411085331 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.400603016 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.411390833 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.410973335 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.39833373 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.407613468 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.406849992 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.400161535 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.401731258 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.409797762 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.406557587 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.399069078 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.405179653 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.410263645 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.416122916 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.405137544 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.40053556 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.404930144 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.409288316 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.405089161 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.405932584 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.397268647 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.412841979 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.419544968 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.400693787 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.400639092 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.408577862 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.413860945 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.402330563 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.40347887 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.400199879 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.402923537 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.407509461 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.404007841 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.407392455 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.408631733 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.399443397 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.406748882 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.39777863 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.399363126 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.403347691 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.412538444 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.403915422 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.398916262 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.410942302 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.415794129 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.400017806 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.415260194 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.410270313 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.405279596 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.408817678 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.396467409 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.407052178 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.399881351 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.40914329 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.40434051 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.403644651 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.40310044 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.395974396 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.404257174 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.411413141 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.413306744 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.404263931 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.397211698 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.399522725 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.405104537 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.403539844 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.405114634 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.404573672 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.403880411 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.403270023 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.398768526 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.414441091 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.417713628 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.409017059 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.404089278 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.405576901 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.405432384 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.408087973 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.402503508 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.410547346 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.404166304 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.405008997 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.40293245 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.412774793 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.406635967 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.399316875 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.40175575 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.399974124 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.409083393 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.412967646 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.424836029 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.409390655 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.41129942 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.407758029 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.405205951 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.40093419 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.41063887 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.40727548 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.400920192 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.402847651 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.40773505 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.408365569 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.407420118 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.400415266 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.411279714 seconds)
  done (took 834.170984945 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.407756142 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406310198 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.406967891 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.408328764 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.406670588 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.407580531 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.40837919 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.408565616 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.406989452 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.407748805 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.408242215 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.408526766 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.407830711 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.408400362 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.408551122 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.409512313 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.409224874 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.408347651 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.409752452 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.40789893 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.40951028 seconds)
  done (took 30.850027112 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.409782494 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.408476262 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.409321916 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.409698781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.410238579 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.41096085 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.408118487 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409059557 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.408313045 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.409390601 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.409843414 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409301634 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.410162821 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.408419894 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.40903435 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.409369834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.410824611 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.40840445 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.409511732 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.410440414 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.409311113 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.409138867 seconds)
  done (took 32.287470169 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.410669485 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.409953866 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.402979269 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.413607215 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.41117474 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.40863889 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.409910927 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.411317968 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.410349706 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.40155481 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.404000367 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.40494608 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.405741329 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.414946164 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.406689737 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.416687442 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.411553191 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.409549984 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.411132465 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.409546906 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.412421589 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.422956733 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.411667422 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.402966148 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.413385779 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.411992519 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.411753279 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.411777161 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.402723029 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.413818196 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.411243158 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.405463706 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.414261785 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.414531269 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.405230985 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.414432052 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.414756462 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.411393085 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.412566188 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.409736947 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.420143509 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.413852272 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.416397732 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.42748162 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.412695683 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.407708225 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.416192324 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.412915685 seconds)
  done (took 69.025072412 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.414113377 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.415125226 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.414265806 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.413350857 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.411739346 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.413593301 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.413308466 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.413111688 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.413855272 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.412563504 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.414936362 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.412003872 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.413382428 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.411844127 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.414615637 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.413621257 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.414281688 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.413697527 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.412713096 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.413906604 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.414013829 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.414627432 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.415103536 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.413225364 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.414361533 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.414917666 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.415197228 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.41348495 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.414654636 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.415870647 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.415215217 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.413188053 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.411958864 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.414099446 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.414473017 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.414638622 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.414550811 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.414112659 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.415150842 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.414065026 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.413768196 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.414807904 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.413525391 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.4167279 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.413028883 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.413579127 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.41379656 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.414435204 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.414854211 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.413594423 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.41356894 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.417093141 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.414199128 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.412468441 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.412463139 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.414193786 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.414079731 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.414970652 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.414952221 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.41490298 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.41409083 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.414369799 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.41498511 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.415109517 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.416276718 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.4153235 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.414418892 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.413859462 seconds)
  done (took 97.446099433 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.414495372 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.415336177 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.41580197 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.416385452 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.415495458 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.415231041 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.415950013 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.414359649 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.414789907 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.415507932 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.416212866 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.413671216 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.413591858 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.414821391 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.415252629 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.415528363 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.414389734 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.416850959 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.414316001 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.416405753 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.417214156 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.414946478 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.416488709 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.41531318 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.416874833 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.415161526 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.41605106 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.41727749 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.415036481 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.41624397 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.41573479 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.416950491 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.415757953 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.416271433 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.416268106 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.416468362 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.416155012 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.416598852 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.417707748 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.416284446 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.415839286 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.416575938 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.416022525 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.41499923 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.416659768 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.41838781 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.416093707 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.41593928 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.416128824 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.416153759 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.416040122 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.416354579 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.416404523 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.416869341 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.417328047 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.41723058 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.415698731 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.417866659 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417573951 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.418942179 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.416646624 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.416356351 seconds)
  done (took 89.082244028 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.418279433 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.415987708 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.41748256 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.415307036 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.415099877 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.415785644 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.415361485 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.41615242 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.416572125 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.416667877 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417085829 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.418176697 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.41791336 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.419296799 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.415761816 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.41705774 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.41652355 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.416132122 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.41747425 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.417669456 seconds)
  done (took 29.621370593 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.41686109 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.416753779 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.415686646 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.416725787 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.416296378 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.417033569 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.41691318 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417853302 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415843787 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.416325933 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.416382209 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.417434188 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.415593105 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.417202839 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.418547113 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.416095517 seconds)
  done (took 23.953547577 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.417428975 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.418027757 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.416820104 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.418888107 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.418107497 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.4185551 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.41797881 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.417683699 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.417910009 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.418313498 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.41802257 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.416981104 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.417148493 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.417391363 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.418002725 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.417701457 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.418200936 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.418499893 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.417898704 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.420327343 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.419785346 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.418887359 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.419549928 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.41984133 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.42000633 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.419165925 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.418339053 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.420143711 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.41806105 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.419101404 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.418826704 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.418145388 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.419674949 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.419935628 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.419609043 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.418859268 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.420351792 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.421271574 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.419287897 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.420908835 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.421185477 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.420601596 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.419698652 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.420462958 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.42000957 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.42008458 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.420799096 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.420521889 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.420327623 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.421273594 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.421979482 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.419909896 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.421108107 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.421557716 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.421858961 seconds)
  done (took 79.348314798 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.42009488 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.421721361 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.419693073 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.420636479 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.420650253 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.419957906 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.420309692 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.422208282 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.422228311 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.420759558 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.422064633 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.421727288 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.420571116 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.420397238 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.421332611 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.423084885 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.421086676 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.421955586 seconds)
  done (took 26.869637961 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.423178847 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.421541105 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.422434572 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.421177367 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.421493276 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.422899138 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.421339857 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.422476026 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.422356352 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.421907445 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.422681579 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.422714922 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.42245188 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.423472005 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.42299029 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.421222047 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.421933157 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.421818215 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.423929729 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.422525876 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.422376656 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.423415087 seconds)
  done (took 32.582647612 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.41238096 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.413175489 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.413064488 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.426128845 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.422094716 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.414010509 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.414075 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.41364154 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.429729497 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.4382261 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.433334366 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.422651872 seconds)
  done (took 18.344264454 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424666306 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425081783 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.422947584 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425632954 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423779488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42474459 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423800064 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42374034 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424115851 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425296796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425683457 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424229243 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424791246 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424087093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423342635 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424389675 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423690946 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425369528 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422570251 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423865003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.423248176 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.423826683 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423158331 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424487836 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424482927 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424636972 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424205632 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423344513 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425272329 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424340794 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424855392 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424524781 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423927057 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426120439 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425060135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425089941 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426367513 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425439883 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427097937 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425547534 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.427120186 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428058471 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425910994 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425940303 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.424848717 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427309189 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427095874 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42588318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.425901614 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426952464 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426463494 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426177459 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427687447 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427266104 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427259369 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425866263 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427356998 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427018635 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427721016 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430144973 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426995908 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427231385 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425699818 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428718532 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427504663 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427130839 seconds)
  done (took 95.3762112 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426028256 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.429006431 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425539335 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426945794 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427417755 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426664113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428783982 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426334234 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427169339 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427195942 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428142582 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42696842 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427207257 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429059986 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427863514 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428227206 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427700874 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427371477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425876823 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427090163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428645455 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427288454 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427961171 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427358025 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426469244 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427775442 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427278601 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429411716 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427426274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426383276 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429109716 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426143658 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427763742 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.426150525 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.428453159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427248089 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427213901 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428438423 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428345428 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428471223 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428906548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42752655 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428386105 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427897546 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427194269 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.425988032 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427994072 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428496674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428528697 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428163239 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42818005 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42842493 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42815194 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428575757 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427524661 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428536376 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.42687348 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428518838 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428307048 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428549271 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428730526 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.428341685 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427283465 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42896853 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427619547 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428527032 seconds)
  done (took 95.526851592 seconds)
done (took 1948.347591895 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.585810014 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.544584545 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.418297444 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.434914323 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.419745463 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.418847617 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.432298276 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.417751291 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.417744516 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.417754552 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.416641953 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.607679606 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.454620377 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.419222493 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.418262568 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.513542734 seconds)
  done (took 28.633209519 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.448376894 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.429822138 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.53777912 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.421335437 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.446246976 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.615506326 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.486071447 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.423689878 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.594083215 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.441731235 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.420833696 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.443725652 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.424190857 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.41782117 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.441043291 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.61196538 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.681179154 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.420019769 seconds)
  done (took 30.999925675 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.867452864 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.439985083 seconds)
  done (took 5.601883488 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.44362474 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.424027923 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.425875786 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.420441896 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.413581977 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.428332602 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.423444252 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.416993757 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.4323656 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.547401425 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.424116123 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.433806151 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.437796691 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.423583844 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.430014408 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.467699588 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.577546203 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.430309258 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.429758803 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.427757781 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.42163058 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.512033571 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.46852485 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.43228449 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.5478115 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.428080213 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.425751373 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.429864638 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.543503071 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.434494996 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.42109477 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.422505167 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.425459182 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.386471187 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.958068904 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.421342704 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.447242002 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.429477479 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.430290669 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.551320296 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.42269968 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.430899906 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.424733556 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.951131282 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.531535324 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.542188265 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.440112888 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.422357012 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.422927113 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.486128735 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.422899635 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.423829364 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.479492141 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.231446149 seconds)
  done (took 90.325031478 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.41916386 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.415696359 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597855524 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.438292467 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.413792423 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.430513507 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.415474616 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.694523534 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.435759407 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.41667895 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.737814346 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.04529898 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.427928583 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.48076831 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.450968308 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.476469108 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.417999249 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.428438404 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.43268356 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.417558124 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.986720058 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.416903597 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.416084447 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.505825844 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.457244923 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.945640567 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.422299734 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.414728201 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.42132411 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.416551677 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.999319781 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.43788771 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.463655209 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.417378168 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.700273736 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.796346704 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758106941 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.425686873 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.455551822 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.43301394 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.443565452 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.940375846 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.78860946 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.423087128 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.418219261 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.939719217 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.419625766 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.427199778 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.429821668 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.684346563 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.418839773 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.416879113 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.429983991 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.4174798 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.415896426 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.485313361 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.49093234 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.949815597 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.421748882 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.417224906 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.431194295 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.419148003 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.417837828 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.423898707 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.416855052 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.778532921 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.678951528 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.422855448 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.777565322 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.985671535 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.422217879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.081473276 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.428425407 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.435295628 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.465272851 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.417816764 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.418658293 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.940089871 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.421638153 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.416337938 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.755598651 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.418666805 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.725146192 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.434595637 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.418622375 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.010913308 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.428881396 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.467494663 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.418508061 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.417641641 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.431939926 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421791074 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.70568295 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.474090712 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.418736887 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.416983077 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.426746641 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.419051843 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.433490254 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.4286548 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064967252 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.429076215 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.418902562 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.438296821 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418397311 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.420013233 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.422686398 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.422826139 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.709194453 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.420138865 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.424291719 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.419695608 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.42097169 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.419611757 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.513540704 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.429170226 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.717813101 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.423496809 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.419442208 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.423285987 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.430126843 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439966848 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420265986 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.443352586 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.420441834 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.719727749 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.437257009 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.435579193 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.418315563 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.419645251 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.424239106 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.421895289 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.476061042 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.420853047 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.286927116 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.42789839 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.43633925 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.419502379 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.423760204 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.420370173 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.438558782 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.421540026 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.719963719 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.703678537 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.668583383 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.422482495 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.41994946 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.262892906 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.421028245 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602797269 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.43869897 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.42322205 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.700924598 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.656373107 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.422297968 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.422305634 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.42483432 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.701624486 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.421275825 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.761069412 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.026467992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.427353612 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.422077187 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.282608399 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.23454069 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.42354637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.421807909 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.723911566 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.43636273 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.41905509 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.420994958 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.421929161 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.421429107 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.426049251 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.431265523 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.421658995 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.421609036 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.714273169 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.615335299 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.437429441 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.433413491 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.947116861 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.442234472 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.422604717 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.425525559 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.423281477 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.421081015 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.485180609 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.425572725 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.429889754 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.42257898 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.434216154 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969062452 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.423981678 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.447381406 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.616299146 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.191941563 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.430992711 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.424299369 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.422447551 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.478680758 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976419728 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.466350825 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.719220653 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.431630931 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.463385997 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.4231666 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.438188833 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979330743 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42956344 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.437014583 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.154170045 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.429721365 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.905704204 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.423995443 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.427693071 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.07861888 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.428343084 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.42364063 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.428643922 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423952943 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.759951202 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.423925999 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.446972049 seconds)
  done (took 518.798091551 seconds)
done (took 675.652633252 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.422184257 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.423325413 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.410640641 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.428984591 seconds)
  done (took 10.987162065 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.440648226 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.430105132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.439990239 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.430139897 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.440657077 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.430282244 seconds)
  done (took 9.915315691 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.423911786 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.424846678 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.431014196 seconds)
  done (took 8.58259686 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.636598574 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.451468486 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.772530481 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.433545955 seconds)
  done (took 9.598190208 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.440692526 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.441342909 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.440159449 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.440665915 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.442092194 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.445554078 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.441689537 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.441726096 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.44223934 seconds)
  done (took 14.2787375 seconds)
done (took 54.664951083 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.425636807 seconds)
    (2/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.411264391 seconds)
    (3/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.210164119 seconds)
    (4/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.11414468 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.49797029 seconds)
    (6/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.636587046 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.67883268 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.468552522 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.523635942 seconds)
    (10/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.154523695 seconds)
    (11/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.500630735 seconds)
    (12/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.468393302 seconds)
    (13/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.50372493 seconds)
    (14/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.413628014 seconds)
    (15/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.277871126 seconds)
    (16/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.434978966 seconds)
    (17/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.404515775 seconds)
    (18/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.464941659 seconds)
    (19/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.426602249 seconds)
    (20/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.422135679 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.513171823 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.577766851 seconds)
    (23/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.464797444 seconds)
    (24/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.414097832 seconds)
    (25/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.539913258 seconds)
    (26/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.45775618 seconds)
    (27/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.545626635 seconds)
    (28/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.543973626 seconds)
    (29/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.382118759 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.536787131 seconds)
    (31/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.209710368 seconds)
    (32/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.519470684 seconds)
    (33/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.42950396 seconds)
    (34/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.506968601 seconds)
    (35/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.47001623 seconds)
    (36/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.404275454 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.247828821 seconds)
    (38/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.412296828 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.502653061 seconds)
    (40/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.54114553 seconds)
    (41/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.408951087 seconds)
    (42/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.663817619 seconds)
    (43/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.594316152 seconds)
    (44/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.524575586 seconds)
    (45/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.422245305 seconds)
    (46/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.416137079 seconds)
    (47/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.574153668 seconds)
    (48/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.406896557 seconds)
    (49/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.549972254 seconds)
    (50/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.492098948 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.182821684 seconds)
    (52/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.510765799 seconds)
    (53/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.393884377 seconds)
    (54/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.651313849 seconds)
    (55/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.465465966 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.667262969 seconds)
    (57/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.616800872 seconds)
    (58/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.11701444 seconds)
    (59/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.551915805 seconds)
    (60/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.68074583 seconds)
    (61/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.433791329 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.278308 seconds)
    (63/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.433374669 seconds)
    (64/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.596414301 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.586757788 seconds)
    (66/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.545656473 seconds)
    (67/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.523496273 seconds)
    (68/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.511933998 seconds)
    (69/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.564317899 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.548558761 seconds)
    (71/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.503901704 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.536758474 seconds)
    (73/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.696970281 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.545222442 seconds)
    (75/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.492143306 seconds)
    (76/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.5754115 seconds)
    (77/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.609638072 seconds)
    (78/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.471734559 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.514736883 seconds)
    (80/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.28379352 seconds)
    (81/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.424581077 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.540464947 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.516946721 seconds)
    (84/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.604301913 seconds)
    (85/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.532200284 seconds)
    (86/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.474607791 seconds)
    (87/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.545900231 seconds)
    (88/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.539171412 seconds)
    (89/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.465690615 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.584882617 seconds)
    (91/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.409443096 seconds)
    (92/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.461502188 seconds)
    (93/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.277711486 seconds)
    (94/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.515205118 seconds)
    (95/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.594172614 seconds)
    (96/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.506562292 seconds)
    (97/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.671495381 seconds)
    (98/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.672007198 seconds)
    (99/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.40974716 seconds)
    (100/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.578029827 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.53717187 seconds)
    (102/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.419117261 seconds)
    (103/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.141419322 seconds)
    (104/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.438298553 seconds)
    (105/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.410776798 seconds)
    (106/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.603356182 seconds)
    (107/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.410126154 seconds)
    (108/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.626921444 seconds)
    (109/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.579744612 seconds)
    (110/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.417683848 seconds)
    (111/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.434525765 seconds)
    (112/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.483382695 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.307463268 seconds)
    (114/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.531587071 seconds)
    (115/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.411755952 seconds)
    (116/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.576961728 seconds)
    (117/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.256375802 seconds)
    (118/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.410012105 seconds)
    (119/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.41206776 seconds)
    (120/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.410856333 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.266119502 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.552821037 seconds)
    (123/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.434071944 seconds)
    (124/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.824770267 seconds)
    (125/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.134667951 seconds)
    (126/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.235063731 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.567303354 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.522898155 seconds)
    (129/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.683211269 seconds)
    (130/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.469821051 seconds)
    (131/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.411813384 seconds)
    (132/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.680052714 seconds)
    (133/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.513380327 seconds)
    (134/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.254385348 seconds)
    (135/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.502118568 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.58645952 seconds)
    (137/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.286656238 seconds)
    (138/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.554276502 seconds)
    (139/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.413176322 seconds)
    (140/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.479279846 seconds)
    (141/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.561588139 seconds)
    (142/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.411894727 seconds)
    (143/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.514460911 seconds)
    (144/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.53648978 seconds)
    (145/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.422729041 seconds)
    (146/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.419119615 seconds)
    (147/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.439371653 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.413662364 seconds)
    (149/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.20262837 seconds)
    (150/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.418318899 seconds)
    (151/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.426066866 seconds)
    (152/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.619118291 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.551169951 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.496634697 seconds)
    (155/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.524863721 seconds)
    (156/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.415078951 seconds)
    (157/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.431418619 seconds)
    (158/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.35916338 seconds)
    (159/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.413907194 seconds)
    (160/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.51072455 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.475048576 seconds)
    (162/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.648110553 seconds)
    (163/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.582737889 seconds)
    (164/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.615685554 seconds)
    (165/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.547692809 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.506274833 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.546959911 seconds)
    (168/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.567469806 seconds)
    (169/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.438270176 seconds)
    (170/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.626194066 seconds)
    (171/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.646320188 seconds)
    (172/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.426535403 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.558672963 seconds)
    (174/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.454691117 seconds)
    (175/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.464945337 seconds)
    (176/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.463435916 seconds)
    (177/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.582097963 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.63673033 seconds)
    (179/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.164273585 seconds)
    (180/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.628694398 seconds)
    (181/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.60426112 seconds)
    (182/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.549084047 seconds)
    (183/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.531944386 seconds)
    (184/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.471616432 seconds)
    (185/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.469887276 seconds)
    (186/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.413439022 seconds)
    (187/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.47824984 seconds)
    (188/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.501405067 seconds)
    (189/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.413548163 seconds)
    (190/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.480871326 seconds)
    (191/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.510268419 seconds)
    (192/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.429875398 seconds)
  done (took 359.162080054 seconds)
done (took 360.466034857 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.461222226 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.520553971 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.437714053 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.436604178 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.438661816 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.438712098 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.458315181 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.437075318 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.450264592 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.449894945 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.436283422 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.444555089 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.451802862 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.446990382 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.469999798 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.433468664 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.432719519 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.441776896 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.447236265 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.44973906 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.43442343 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.435042894 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.455049117 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.42727579 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.437282125 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.437591665 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.434919932 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.426354675 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.433180703 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.439019621 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.418618153 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.430932323 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.440445837 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.435306512 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.425736128 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.430280566 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.421748884 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.50575466 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.441698422 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.430730576 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.430427611 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.436917984 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.421288436 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.42170482 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.428604661 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.442993054 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424184356 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.432758007 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.412161624 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.406533704 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.433043632 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.426029677 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.420341534 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.40768015 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.400494145 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.425417723 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.421103986 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.429336385 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.416244362 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.410946174 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.438962982 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.424827968 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.419083233 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.41406829 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.414250198 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.421034829 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.415987341 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.418614688 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.4101439 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.403888888 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.404601023 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.410655636 seconds)
done (took 112.491878779 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.521115512 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.396967469 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.555646832 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.408829743 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.559722254 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.518469451 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.404190411 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.405377208 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.405936517 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.201336694 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.404837741 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.408009286 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.396189893 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.402276277 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.513412259 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.403135494 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.403349002 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.096673745 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.40310797 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.526340762 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.392714164 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.401435203 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.401631039 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.200992703 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.392389288 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.385526466 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.521485784 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.398185916 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.09276469 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.383222128 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.383588768 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.093832947 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.520783033 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.415084213 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.407350021 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.404653972 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.543917678 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.396103799 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.512108882 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.506852962 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.542081191 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.431833694 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.376786312 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.382120836 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.393824838 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.393813446 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.393852238 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.419301943 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.380156712 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.392325792 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.089047438 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.400696628 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.401859178 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.389704375 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.390018109 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.40945731 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.391316474 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.390607176 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.514456275 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.391681816 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.504078704 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.185725353 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.188157082 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.389711769 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.376779465 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.388636648 seconds)
  done (took 112.281474569 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.449164739 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.454406572 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.489521454 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.377639531 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430844003 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.490004266 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.377667857 seconds)
  done (took 11.331236277 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.383533215 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.38604102 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.426115102 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.425119682 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.386134631 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.549907037 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385147486 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.388868634 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.386925066 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.427482935 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.388669589 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.386610843 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.394582161 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.376499422 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.423024131 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.388390429 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.496101918 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.378505412 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.385878259 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.529158721 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.387229225 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.395810642 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.426738692 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.388666363 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.388756052 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.384947679 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.263122072 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387359357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.388042951 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.38875346 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.387818384 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.443626072 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387583911 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.378030199 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.387905676 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.491981145 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.38779427 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.386513289 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.38766968 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.381374833 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.388094364 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.388243464 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.387875524 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.38924811 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.387323263 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.402996322 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.388655786 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.388827084 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.387540483 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.388884908 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.428231994 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.389166178 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.386394005 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.388074383 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.431248535 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.395449043 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.387459452 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.387212485 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.389017433 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.385809364 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.530170545 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423399502 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.385321008 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.422708534 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386551739 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385190799 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.385638041 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.384506693 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.464241953 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.382768931 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.422260892 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.383317838 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.557330968 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.397266757 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385723348 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.376701635 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.377196574 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383734765 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.369636366 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.38039742 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.381931246 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.372687072 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.38092136 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382025569 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381361764 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.532919717 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480933315 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.38051703 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.386751751 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.379393588 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.381414729 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.424140292 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.381629337 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.382747767 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.420549819 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.490275733 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.422538857 seconds)
  done (took 142.389449956 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.383176646 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384547666 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.375525016 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.39699066 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372828356 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.372202028 seconds)
  done (took 9.542319519 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373244771 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.382052119 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.381163924 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.381091545 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.381241304 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382075116 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.379191195 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.372553953 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.381526368 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.380570173 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.383003564 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.382445015 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.379973937 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.380048403 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.37939959 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.379131443 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.381420543 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.380302828 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.379035028 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380350632 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.368935088 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380385573 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382295925 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.372414816 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.384972542 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379460924 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39599986 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.379018643 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.379682656 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.378182506 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.381531222 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.382300696 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.371269143 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.37495871 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.382635921 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.371812192 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382385423 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.381984509 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.379262002 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.381290378 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.382698958 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378524577 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.378819209 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.381578274 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.372036653 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.374558924 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.384716783 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.394899027 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.378251466 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383154809 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.381205316 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.379820726 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382578906 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.382087997 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.373711919 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373846647 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.384547998 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.380621628 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.379700781 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.372669236 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.382151879 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.383019136 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.372177589 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.382654043 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.379327984 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.38426058 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.372791458 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.38357336 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380896716 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.379695946 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.383740315 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379700124 seconds)
  done (took 101.612972308 seconds)
done (took 378.43770118 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.698499977 seconds)
  done (took 3.954851719 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.39387936 seconds)
  done (took 3.649785988 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.219894019 seconds)
  done (took 22.479931507 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.400542905 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.402058389 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.390291361 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.37589292 seconds)
  done (took 10.825250234 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.795483306 seconds)
  done (took 4.05133155 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.383054014 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.375599091 seconds)
  done (took 6.015487962 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.563982844 seconds)
  done (took 3.821135073 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.583527575 seconds)
  done (took 3.840676021 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.386234026 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.39469945 seconds)
  done (took 6.045318487 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.344196875 seconds)
  done (took 3.601295494 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.034216477 seconds)
  done (took 21.290414662 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.395865313 seconds)
  done (took 3.654920512 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.403048345 seconds)
  done (took 3.659439599 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.854345403 seconds)
  done (took 6.111327338 seconds)
done (took 104.257656673 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.365994012 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.367788122 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.367998463 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.367164062 seconds)
  done (took 10.72533725 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.446391107 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.444675556 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.45476587 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.440807875 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.44052833 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.447793387 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.408849222 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408486999 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.43739537 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.432611516 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.449172983 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.439170797 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.448275879 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.407105198 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.434606976 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.449571744 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.438145765 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.457051819 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410281097 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.440157718 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.382760061 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.439257677 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.432708501 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.382116616 seconds)
  done (took 35.630529323 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.8701987 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.439081594 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.523007595 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421367164 seconds)
  done (took 7.511371292 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.48237496 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.483019775 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.502426308 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.542482977 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.583571161 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.494403011 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.402264368 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.398548047 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.384225893 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.486883726 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.559479367 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.479992811 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.695182108 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.375818646 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.694798864 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.376123531 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.377112065 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.4811648 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.529606338 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.560783061 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.376280018 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.485035244 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.484754831 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.480547633 seconds)
  done (took 36.972805729 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.385264837 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.394886295 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.378483864 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.393664179 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.379635918 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.3792013 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.379939024 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.386287107 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.377678702 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.378599634 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.380471612 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.392958884 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.379201771 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.379649997 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.386861098 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.37983452 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.380703981 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.385605767 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.387544138 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.381684457 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.378822485 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.385723179 seconds)
  done (took 31.686097091 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.365909676 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.363468721 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.717749009 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.61970976 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.363701086 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.372474066 seconds)
  done (took 14.057504451 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.43674425 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.580755197 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.377121142 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.71147198 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.795901472 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.372463024 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.372158497 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.612387696 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.904674708 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.906528425 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426409841 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.441126228 seconds)
  done (took 20.191619373 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.374910302 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.36508912 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.380123838 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.380781337 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.422917738 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.381743532 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.378682951 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.364866781 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.430528617 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.434819947 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.381197355 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.42525188 seconds)
  done (took 21.977219805 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455211612 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375859168 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390284612 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387191576 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374933205 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375471239 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396394377 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.09517402 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386473696 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652158409 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375530887 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482090922 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623516294 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376781213 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386296368 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.325398568 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608193915 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878014905 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378618553 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391304774 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416122173 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383441789 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.394183367 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.59546433 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379468485 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378572945 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.639709429 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377751339 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66500117 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646607336 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646057497 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387386401 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654079824 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012982234 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491268633 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585486719 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37058165 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404789092 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.347106227 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.388931407 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391487425 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3868934 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638412108 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388841615 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.379736438 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392633782 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11734903 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.3933136 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.380963083 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.380866543 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.641108115 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467915151 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.384229033 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.379535368 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415809285 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379010743 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.386464604 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500813831 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019523228 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383792476 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401241646 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.389751188 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.378385419 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406310628 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052790343 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.393517679 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.384882917 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385706122 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383070081 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.380930755 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413318278 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379248256 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.40026828 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381066881 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238215882 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.387339438 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38999073 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932085621 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379294909 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.405227586 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60612803 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381814399 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381500288 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.381015257 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381247321 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128077864 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395439389 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.349309143 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44522344 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101740943 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.59511122 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399202339 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411410442 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601723353 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.349829982 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382071972 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.397076815 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391312013 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40390777 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11799866 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38882506 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.387961596 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628864865 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.592806347 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383344679 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347124431 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871297972 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401537664 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.413171419 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382514353 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.599190994 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.015725204 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655130388 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400808537 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424434701 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.383244257 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191310011 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402307066 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.394595444 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384502953 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667481825 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.215387339 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390169789 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456876881 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384534366 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384594187 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.3834414 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393462487 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384742374 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.569772435 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385834706 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.65422233 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.394793871 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386295752 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.388973205 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389921088 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.393095886 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603267966 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392822238 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667825279 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385948046 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385485232 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38519846 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.601506351 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.400682115 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.397906162 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726041769 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385741516 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.393636415 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655680764 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424754541 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497732667 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417886719 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.386125436 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640954486 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.392107742 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.392261859 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38693145 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.396716326 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388593243 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.394474501 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399470977 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029010449 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370997005 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396614602 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.387244263 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.402862206 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462154537 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.395033312 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596039843 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.387023717 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399868199 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400839183 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.393423247 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607894486 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649460315 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.404459963 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571122038 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.869505244 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03063616 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408827162 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.388861383 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.388127842 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.387099872 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389344552 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.390453554 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39082805 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.598111 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652950555 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40870502 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037159409 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398096472 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389229692 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.420191602 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650441032 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.402940273 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391477359 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.396894118 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403621936 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406813882 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.657611276 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616767849 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.404019027 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389962788 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.907924138 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396567122 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390512613 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390057141 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415406264 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388699606 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246115815 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727982644 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393548733 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658936099 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397830312 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.430887617 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.388147864 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389744664 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398028826 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.401625127 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403417448 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.598043246 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.390819581 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398763547 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032188652 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261465553 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981472471 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410044156 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.410486876 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39791192 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120023057 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397483683 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390243686 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635908994 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12008018 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397493729 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872155344 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.409411861 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145453053 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.661111167 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.623778161 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399426165 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.399199249 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661781555 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609749014 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416665851 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401998427 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397575689 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.360005804 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940032436 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403325087 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576076993 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120008479 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396339281 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.418389217 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.438121372 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.405036214 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778972869 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.3987795 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392422916 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.39402181 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399734152 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230950516 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398995464 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392074758 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060945047 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.4032734 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.885426852 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399511028 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602568304 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.656299422 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.639884861 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.401455185 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.406239039 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.64208719 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6565668 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399277434 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.392638191 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985791449 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.255722172 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.401062499 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394479303 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198864297 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405227978 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688608679 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.406194582 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402488346 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411224938 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395224701 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394134841 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.394998891 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400839576 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367692646 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89539341 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.392456829 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409165401 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416246939 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403523288 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.640266537 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.410657981 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032690704 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625588198 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401659877 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434136461 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.401538174 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395726798 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.372985107 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395469174 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395443271 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452711845 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616198981 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.394640402 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.370665455 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403685991 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604500741 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396711673 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.396192301 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.618866649 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.394905999 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.401143237 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266003189 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432933923 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396833189 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405829302 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.388676774 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433155006 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472987092 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606482456 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.660384815 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665414409 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784498085 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40340039 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399338119 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.412078279 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477602219 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395547286 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.420942355 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.403773148 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.034383494 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202571487 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.04119993 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.669362448 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.407266509 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396648185 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397206627 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.637143294 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397830823 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672632456 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396305963 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.393533129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436806158 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398244436 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406067726 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614403274 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672080189 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398440302 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408044724 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404178726 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.398775362 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665061085 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.616277055 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903890344 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95463792 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39938367 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39803857 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.137599914 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681888508 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398358355 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401154932 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399825953 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.415270969 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.402362259 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.41295876 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40484991 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625676153 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664025497 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048587617 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.669385626 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.588854003 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.325472549 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406413171 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65045961 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.236895396 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.608819893 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043814435 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153107022 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658632322 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473564649 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608462107 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.399791058 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639221688 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.407385988 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40106784 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401707539 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40130119 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.400188259 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.664912403 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051315348 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65940399 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.405868787 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.409977031 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432196547 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.610707782 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621787496 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148667814 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.62693625 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668935619 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.415591828 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.402688237 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050515152 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675120546 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410311853 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.407712796 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622670001 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403145604 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437688856 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.273266785 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.40220157 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961088428 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.613588568 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422978537 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410566607 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.153924596 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055689818 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.414728938 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907813308 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404590368 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413875663 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681132883 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.410748854 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.412203749 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683687893 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.409458131 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411367663 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622254296 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.041287684 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172159194 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.420225606 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40528153 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.405768175 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404957659 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406596318 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405671258 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414463228 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.788280804 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411908326 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405600543 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417721872 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.416370851 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407470912 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.412672527 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406070986 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.412303764 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.391951311 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.38135565 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415791162 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.530080699 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959253204 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405693253 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.02053271 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.739923289 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.650766825 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.408265233 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.379803066 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.410056455 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407716699 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406122323 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406223413 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.403078107 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973647123 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.412533186 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.672341362 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419757787 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.616099218 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615716373 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.414315615 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625462068 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419382691 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429594185 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.374744661 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405903841 seconds)
  done (took 991.808505524 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.40221068 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.421834042 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.404946939 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.397725147 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.424143064 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.417677689 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.423575956 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.48298013 seconds)
  done (took 20.657547341 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.396697265 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.405398497 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.411116564 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.40639575 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.397550855 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.878902512 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.406032398 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.407536316 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.419356771 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.40982373 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.408710109 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.090011125 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.431766078 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.401528527 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.398616089 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.408855243 seconds)
  done (took 32.962366611 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.100132461 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.436760174 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.929259915 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.450577897 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.405456829 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.404768563 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.538250505 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.421567422 seconds)
  done (took 25.971911395 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.412613081 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.411939443 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.414232628 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.413507279 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.412100305 seconds)
  done (took 8.34945578 seconds)
done (took 1259.760203805 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.415067393 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.415235361 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.414700176 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.415995223 seconds)
  done (took 6.94648976 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.378718335 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.377317483 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.378775256 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.39173352 seconds)
  done (took 9.810584843 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.087038938 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.002340784 seconds)
  done (took 5.373961937 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.93396797 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.935389916 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.928792209 seconds)
  done (took 7.082461307 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.694286494 seconds)
  done (took 2.978864284 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.363070482 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.408022647 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.118029204 seconds)
  done (took 8.174583107 seconds)
done (took 41.653008739 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.407237491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.159814974 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.557283248 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.407850841 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.560553566 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.55574643 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.651768481 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.401373561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415216536 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.411487457 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409949957 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.560881323 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.641026527 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.162131003 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.640757285 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.161963912 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.56066938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.401179041 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.415529963 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.401399974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.664264333 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.408755564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.401911378 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.407986334 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.561391506 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.546237692 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401043561 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.164900273 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.40183265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.417635939 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.547191019 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.412342141 seconds)
  done (took 83.506589058 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401967402 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.409099592 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.412027253 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403251561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.419435461 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.410315242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.401769788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.40212937 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.403527549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.403729246 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.402642826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.406875428 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.405470445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.403104451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.420163266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.403450357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.420105879 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.419234946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.403066449 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.402970714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.407190073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.403451085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.429305866 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.405038469 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.414502343 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417618891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40408118 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.404580207 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.404282348 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.405287606 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.418055422 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.404576468 seconds)
  done (took 78.360039533 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.404263223 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.404131709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.404437411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.411275177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.416688845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.406693132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.408925275 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404357117 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.416117807 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.414284795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.41470369 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412340009 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.408234723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.422461692 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.406507256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.420410318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.40897681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.404618233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.418890192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.408035501 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.406624657 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.407007307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.405416222 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.406182172 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.406904355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.405951682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426772135 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.407183534 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.406213275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412560203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420798504 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.406226137 seconds)
  done (took 78.424023184 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.646022373 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.421512795 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424870306 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.41735201 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.424472201 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.421446382 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.416777652 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.653022457 seconds)
  done (took 15.116605946 seconds)
done (took 256.693391609 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.422302262 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.899591886 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444357054 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.416625553 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.432433715 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.445561758 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.635434409 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.443178431 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.636126714 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.438861189 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.430580551 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.417425758 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.222011982 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.566689846 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.218826221 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.331720497 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.27753679 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.409659132 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.968411033 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.698832933 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.445507629 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.420882768 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.218424114 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.292869271 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.385849992 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.493711819 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.510931616 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.644103324 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.574419571 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.492141851 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.907556926 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.425819959 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.418740535 seconds)
  done (took 65.279149688 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.415431375 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.425508781 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.424716597 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.424928916 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.424495987 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.42443862 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.414514512 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.425076672 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.42609171 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.425338186 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.423974176 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.426710422 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.425361392 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.425192099 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.424579389 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.398445742 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.414675627 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.426330672 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.415391312 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.397872081 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.425538322 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.425413296 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.425583567 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.425078816 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.425845224 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.425737108 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.425877151 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.426016857 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.424561235 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.427250702 seconds)
  done (took 43.960765523 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.425723171 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.991947684 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.143207739 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.426305003 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.416983785 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.421927848 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.700550543 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.427736177 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.421104348 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420653579 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.872729635 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.429925084 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.450978616 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.153754685 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.421949481 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428008302 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.428464652 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.418515066 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.998839087 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427787785 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.699651982 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.427729745 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.700752429 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.428304603 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.421397261 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.419406218 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.424405193 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.239317978 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437841866 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.878465629 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.266670262 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.695892129 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.165855599 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.199412933 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.191120571 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.43825722 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.428197962 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.883984899 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42198037 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.419481704 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.699187882 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.420887872 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.158725546 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.095869203 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.439829412 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.429905588 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.263244558 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.879742512 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.66187866 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.427372923 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.192692418 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.424607965 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.430740386 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.422020482 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.660163489 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.423676064 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.421943676 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.259344099 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.426682695 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.703864503 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432452613 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.423309244 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.000988259 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.421084099 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.994812446 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.422701446 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.432110612 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.422608429 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.161903612 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.425339701 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.119888259 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.439617255 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.431163844 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.880971036 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.996009458 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.317851179 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.423517589 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.008003701 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.196311754 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.718576291 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.426428549 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.21583053 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.721784535 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.426701964 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43269613 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.433357939 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.431433982 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.495996353 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.701029081 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.031227473 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.109143685 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.26493873 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.706693622 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.431658256 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.424234931 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.261717277 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.432824528 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.432663043 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.157567711 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.115208509 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.441673355 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.431818873 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.103782874 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.443186617 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.706798932 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.430407116 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.206908529 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426190784 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.496976136 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.433130392 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.432302292 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.42801356 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.707000924 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42864015 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.434965598 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.100273205 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.910246283 seconds)
  done (took 198.04131828 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.423506508 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.420367866 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.430394475 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.419784918 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.419786187 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.428746592 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.419904368 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.419372308 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.425341091 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.419695711 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.419960184 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.427000306 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.426582901 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.419949419 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.420124958 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.421625647 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.420054836 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.423725281 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.420885086 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.421246648 seconds)
  done (took 45.751039019 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.436200565 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.970336685 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.945388878 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.436292472 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.435366424 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.426908365 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.481894074 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.438127084 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.436216709 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.718156606 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.596984847 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.437217879 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.437534237 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.436402716 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.94669563 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.408593835 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.719357551 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.973349254 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.438363761 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.972835788 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.40864277 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.436604116 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.427711372 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.972133643 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.731592564 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.70755988 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487508522 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.975330279 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.438426683 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.437826347 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.975509413 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.437469625 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.430150095 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.960911172 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.438530069 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452236439 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.437247468 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.486033341 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.486444177 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.720728712 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.981108548 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.720249588 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.448188741 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.589021139 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.444455388 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.409386203 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.986473567 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.439205359 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410041092 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.441714104 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.443904865 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.963411832 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.430588387 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.963263755 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.438906123 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.439357083 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.976384432 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.963974791 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.951773958 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.598677549 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.430468878 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.711227321 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.439140547 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.987858358 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.440604517 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.439256853 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.440754622 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.601759216 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.978023925 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.712603557 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.72438426 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.724310798 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.441003974 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.498892828 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.44102056 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.724778848 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.497407622 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.81858828 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.731417402 seconds)
  done (took 129.07047972 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.702821111 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.545338088 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.799413828 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.010759813 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.928705476 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.569104843 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.546774627 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.673580543 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.442313689 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.54620457 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.075134471 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.524592445 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.185375729 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.495775811 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.537230932 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.553738414 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.823421789 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.381269793 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.053136494 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.05015625 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.437732962 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.536999442 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.940409273 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.631755815 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.433713868 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.005116026 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.349609374 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.941602889 seconds)
  done (took 54.030599977 seconds)
done (took 537.424590951 seconds)
SAVING RESULT...
DONE!
