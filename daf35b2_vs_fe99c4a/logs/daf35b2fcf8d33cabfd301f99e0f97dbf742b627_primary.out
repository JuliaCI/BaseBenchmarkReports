cset: moving following pidspec: 22302
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.424540534 seconds)
loading group "string"... done (took 0.499442943 seconds)
loading group "linalg"... done (took 8.752407652 seconds)
loading group "parallel"... done (took 0.171232598 seconds)
loading group "find"... done (took 1.256917965 seconds)
loading group "tuple"... done (took 1.845787999 seconds)
loading group "dates"... done (took 1.329579767 seconds)
loading group "micro"... done (took 0.191903771 seconds)
loading group "io"... done (took 0.500522333 seconds)
loading group "scalar"... done (took 50.36026988 seconds)
loading group "sparse"... done (took 13.780635614 seconds)
loading group "broadcast"... done (took 1.295134725 seconds)
loading group "union"... done (took 10.073764474 seconds)
loading group "simd"... done (took 3.019634165 seconds)
loading group "random"... done (took 11.506534355 seconds)
loading group "problem"... done (took 2.215990362 seconds)
loading group "array"... done (took 24.012251456 seconds)
loading group "misc"... done (took 1.106750866 seconds)
loading group "sort"... done (took 3.737422955 seconds)
loading group "collection"... done (took 19.275027076 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.615955711 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.188331415 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203928828 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.282666324 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236897089 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165979968 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.143210399 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.262333881 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.619684798 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209218961 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139634921 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.511457556 seconds)
done (took 6.405091408 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252370533 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.181279067 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167047047 seconds)
  done (took 1.119615086 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076155329 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157837904 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107264108 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094141535 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091494455 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108400496 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09196556 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107875881 seconds)
  done (took 1.533117971 seconds)
done (took 3.756323961 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.513673371 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.871287843 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.518130128 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.14806239 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.326076198 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.31759356 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.319033447 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.204819367 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.111570218 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.093040813 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176680007 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.411195405 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.428504377 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.986744847 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091287896 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09620894 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133776457 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.793085172 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080399744 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110359864 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.501818965 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.188080612 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.097182503 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.121624516 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184992659 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131824205 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.163873521 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102563037 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.657268809 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134194949 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180468065 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097971299 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.160920272 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.197127098 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211726804 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092022728 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685825752 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203938783 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.090545398 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09864681 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.672515493 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12353386 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189076151 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103660491 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.091251613 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182713982 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.094033821 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077656995 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115596107 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085244652 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.167233807 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456682164 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.108233817 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.176793278 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092423211 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.702898207 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09982875 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274519612 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126203947 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096412143 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092111268 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.087788353 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159220702 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09449939 seconds)
  done (took 20.312677395 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.148262082 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.166671363 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.077524016 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156391286 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123612792 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079715299 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.101228839 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077130863 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.126574606 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.231721255 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13889682 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.153300953 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09176966 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090274856 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128314872 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249204149 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109287801 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122263711 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088115083 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088898516 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140270334 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095828236 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107326596 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093414851 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.171807901 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204703428 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112085121 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122758374 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09271956 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097401033 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14100036 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146783456 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091384412 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088590875 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188763363 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106061016 seconds)
  done (took 5.341415569 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202494583 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123403871 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.219476304 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165156637 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146069935 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.171691402 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.154241062 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.280207443 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.226518216 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164987701 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133610552 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104827249 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09622029 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080876093 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.077885567 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.486789128 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.152990715 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.172640361 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.137822627 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107707353 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080704694 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.742987826 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084037575 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098428446 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087236846 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06432678 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.203648691 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103276565 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.115202892 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.105917081 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089081544 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131625998 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194587679 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127572474 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140825099 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08553245 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078951147 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22523737 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.111113135 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079364419 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.113812813 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134437105 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115145582 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101570319 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.110728479 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223762193 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.082393208 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105939931 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.124075916 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198342085 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.152312005 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102467223 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296450454 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102039971 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086126628 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.10222407 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.828534997 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132287041 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.139261317 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.099926053 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081477902 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077102414 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.105326058 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084091001 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077216652 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.44224155 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108306523 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.437876385 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080921724 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.15915454 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084353734 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.105998546 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082991145 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085085552 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101921825 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103995028 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079005075 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.095673367 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.081134085 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077129266 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.101157789 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114708276 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082189451 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096681006 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14678692 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098087307 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117411525 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108087028 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101679575 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07878119 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125898389 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082784702 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083455642 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.166597067 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086977528 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.130337446 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085906264 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144674801 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.080820849 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.278107836 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083181028 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123748138 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102373564 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12744956 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102221355 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079333331 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10189974 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077794837 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079647384 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159939494 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081346594 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079318812 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082501486 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11030106 seconds)
  done (took 28.873044228 seconds)
done (took 55.297652375 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.443558423 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084996882 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083078514 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103758589 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084174354 seconds)
  done (took 1.650682 seconds)
done (took 2.477067904 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323209747 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188819523 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10167449 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188158197 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085215419 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193455957 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.178718301 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094559969 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205514898 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082921621 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.18660814 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083216669 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104259197 seconds)
  done (took 2.866081103 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102235602 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109891285 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101287956 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120067241 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083798063 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10033641 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118511898 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111088949 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099898538 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112053076 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084357643 seconds)
  done (took 1.968551578 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100012939 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105193708 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097663127 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116289177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084437559 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097342526 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116388488 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107819188 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096895349 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112498317 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084530254 seconds)
  done (took 1.948737741 seconds)
done (took 7.606350905 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.099407425 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.790304178 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.148684355 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.214585815 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.373209146 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.244698572 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.563113462 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.174667102 seconds)
  done (took 14.590244868 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.172374951 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.111267682 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089864649 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.091973688 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093400602 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.111687038 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091913199 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092176378 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.109512842 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090057214 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.09094684 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.107833555 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.094713159 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089077733 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092610327 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.107597274 seconds)
  done (took 2.518231224 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142541476 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121672942 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.11728341 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097549864 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.094445003 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.119009867 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101202664 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.095217291 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113474651 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094463519 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100278748 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116440505 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096714767 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.092175869 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.11554791 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116175466 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092893393 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.115960399 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116579279 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.097082792 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.11633537 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095892659 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113730999 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09896838 seconds)
  done (took 3.489179837 seconds)
done (took 21.428115392 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146749836 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101264804 seconds)
  done (took 1.080759896 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.143411004 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.161547725 seconds)
  done (took 1.141196586 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111773262 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089481678 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138217291 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.103086298 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.090126423 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.107624653 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117175981 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107006862 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091120729 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090008738 seconds)
  done (took 1.885201183 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094107274 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094461055 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122633459 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139082774 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116124811 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092637543 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093905334 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091731132 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113609796 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089455958 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094293703 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.126042807 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093841564 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.125584223 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095152685 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094882033 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.116303356 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094370405 seconds)
  done (took 2.728772845 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090002591 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091467839 seconds)
  done (took 1.024514489 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092937056 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090032354 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091443031 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108928085 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089086696 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088417557 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10730356 seconds)
  done (took 1.510083645 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.493399869 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.262670528 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.359696556 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.106903223 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146358386 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.471305961 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147528854 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103557535 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101830218 seconds)
  done (took 3.068376012 seconds)
done (took 13.278632112 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092336629 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.225663132 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.648523306 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.111846534 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088742391 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165250452 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.287797932 seconds)
done (took 2.470869162 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339017022 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.144627719 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083025121 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090316388 seconds)
  done (took 1.497362079 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081499475 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097837957 seconds)
  done (took 1.030714089 seconds)
done (took 3.374682461 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090198013 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088842499 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086023509 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.138232561 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08729345 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086951502 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.106785009 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088377038 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.086481743 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086018083 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.107834189 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088345674 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.08700364 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106527791 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087569378 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087551261 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086790106 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.105767231 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088064265 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086489497 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104696098 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088404262 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087708025 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086566259 seconds)
  done (took 3.126019686 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.111946825 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090958661 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109834376 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.094337813 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092648362 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.109490296 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093217039 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090221972 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109090599 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091554722 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092399982 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092441151 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.10858105 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093338081 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088873527 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111302332 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093757598 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090435816 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108785814 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093782652 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092629489 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108709903 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09394796 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093097589 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110820295 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093452244 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089564408 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.109209491 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093959282 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092641041 seconds)
  done (took 3.798974399 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09686891 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.084903895 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087465986 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115179211 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085513363 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087989399 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102858002 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08729203 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089603727 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.086383123 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109823977 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088971613 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085619677 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107443983 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.090359398 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091528421 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096207082 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.106056581 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086173741 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088820327 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.108926896 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086889112 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088602886 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088435862 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.106757612 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086999786 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089247489 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.106708018 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.089858324 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089154426 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090705653 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.109377235 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089120857 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097614595 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109314453 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089278072 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093033717 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104033605 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089863956 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08495814 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084606345 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107124491 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086985753 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.09429428 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105609891 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090738397 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086137676 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088260176 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107475441 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091984267 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.085596006 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.104411678 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091548573 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089439478 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089971159 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.104495923 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090142788 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085431544 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.10708108 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089331786 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085862771 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085690091 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.111624265 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089825438 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10348073 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.1131117 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086809816 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089385372 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108535393 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094923999 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09117635 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.115633619 seconds)
  done (took 7.688235263 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101284813 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099168145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089817356 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10941915 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09053142 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089137036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112491585 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090020066 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089949095 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.113633782 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090976679 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091165554 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089191305 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108770156 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089840232 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089622367 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113331217 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089383545 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088796865 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109045389 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091095869 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094461898 seconds)
  done (took 2.988057602 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235626212 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095900533 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136227778 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121062544 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108688097 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121374646 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094388842 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094674588 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111485937 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099933568 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097628597 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111926082 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110076032 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097734409 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116432749 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099086737 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110616363 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100363153 seconds)
  done (took 2.92720234 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103118069 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091145051 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128489631 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092546282 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091386755 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090696344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115755027 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110053329 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.109237372 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092379717 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.098853114 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091201207 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.110390592 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092826095 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091892071 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.114522983 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.092336485 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090443374 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117361551 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097948892 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095865549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116495449 seconds)
  done (took 3.099166234 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105369663 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.090774953 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126745573 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.094501877 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08982945 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089836655 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.11540899 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091835491 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.096163416 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.110148729 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090803123 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089481657 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124347019 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090675653 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095392446 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109819234 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092105416 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090139458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109623971 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.091739813 seconds)
  done (took 2.857800589 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.17119103 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123508511 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107234052 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114200015 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127539816 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10685107 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11360192 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126364834 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107348258 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135410878 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107362145 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1050223 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133320669 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112463617 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105290073 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134839364 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115030842 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134050381 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106204215 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105916503 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.136651068 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106070003 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132018868 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108304532 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105158765 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.127599657 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106749251 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110295701 seconds)
  done (took 4.191952446 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090994058 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089256582 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088313906 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.109823695 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091795797 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08912905 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087736268 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109023043 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089848926 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089219695 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108173567 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090844268 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090263396 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088275365 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.108131997 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090048072 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088751514 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108518923 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090302133 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088770913 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089816014 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109338976 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090509816 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090368875 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088962176 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109987461 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090718693 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089230631 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107828127 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091228755 seconds)
  done (took 3.715870877 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102919383 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09974472 seconds)
  done (took 1.076551751 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098032858 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102924586 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089420379 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110144346 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096383841 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08992723 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117425742 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097208221 seconds)
  done (took 1.673001119 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.144689594 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.163336776 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095034625 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10128951 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.165301983 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.157605209 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130775225 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09445454 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10950178 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083638667 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.158542353 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083092378 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091649375 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106738057 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092261924 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097276299 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111042279 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.100831499 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097453701 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.091662376 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114347403 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097225415 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112262405 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102784565 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086726913 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092913313 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114660248 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102676408 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106616922 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09658499 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091446548 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090580954 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.113491357 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.096244596 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090737486 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.166242386 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098097338 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107422102 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092664725 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094704639 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.142664219 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092088913 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092616729 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108073484 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09520709 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.095458323 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.114768095 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.092423028 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083845072 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087145365 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.11165716 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088241911 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090841326 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111801355 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092413289 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097003358 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.112133168 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088939962 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086852144 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10721498 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09047298 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087043139 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113582082 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094921279 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092243622 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.111562377 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091699363 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090621331 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111456616 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094239709 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0909632 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124015816 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093273474 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095383956 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115636508 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094350573 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089322694 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096835623 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110060978 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093818315 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092951353 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.139924698 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093145968 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08601393 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.107636305 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09811237 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092699069 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.113490211 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085642909 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10006364 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.112864641 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093267142 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085101743 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10873803 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088814056 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094769271 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08281746 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110522127 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090521624 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.095147449 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115761049 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091595667 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092998301 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115634631 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097821066 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089469585 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157668799 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088030813 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.105667165 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094551544 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095877673 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084978664 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110448973 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091524352 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088011816 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.106610625 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096242023 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09029726 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.111947024 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096362364 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092653042 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.113018176 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093194836 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.090705235 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087153922 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.114891818 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099469961 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092558507 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.113392536 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092108533 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.092086908 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.110821434 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095752151 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088288711 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.1155803 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089195519 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091095083 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.1105487 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097958678 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09173778 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.106298599 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.092107025 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093318669 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.109849465 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095334165 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094039572 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087482889 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.104339254 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.092352477 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087982759 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.111784708 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100599068 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087479843 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.114337657 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089885354 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099088825 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108070049 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.096689303 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094437827 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.116661816 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097907382 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085135651 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089075278 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.114372338 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094318049 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088882444 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.113071122 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092808716 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09820858 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.104866368 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096544538 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.085108349 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109864723 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098235575 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.093493505 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095716572 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107428057 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130460917 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103413602 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116414337 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091995986 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090393034 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115935345 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091172169 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095437668 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118544162 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.096765054 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090457108 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110013454 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097941886 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087325003 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.113453484 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091610057 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093527741 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103690562 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.094125989 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.085015092 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095173279 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114729261 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097987798 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096068631 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114821801 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092392211 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100109013 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.108288673 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096576045 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084648715 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117079368 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104414094 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098917846 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097313131 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115976112 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09062424 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.093188803 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120514027 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095452848 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092372934 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113637167 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087326377 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087182936 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.118223419 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096200418 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.089731413 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092473446 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117213273 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095356756 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.09005886 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106604311 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096991761 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095574415 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.109159847 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093754845 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089398649 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.110244935 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101454112 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085418181 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.112539172 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097048265 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097236628 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.114085124 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094662606 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095557964 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118115513 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097984276 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094945901 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09056183 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120828353 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091070666 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092334855 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109310652 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097393679 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.086546858 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115813589 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095169823 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090343916 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108965429 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099184847 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098697186 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096868269 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113222188 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098109357 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099210259 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.123281689 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093748063 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098236634 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.111486056 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088445811 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089004265 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.107202028 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095826036 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08902837 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096381733 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.11273616 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091709814 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.096218874 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118915846 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09209056 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107004083 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.126086964 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087273892 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086017379 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110675334 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093240099 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08951031 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.112266035 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096438974 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093965366 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.119863629 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098309759 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089856426 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.116085549 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100796307 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.089704281 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120381676 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099757629 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098782664 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.108132717 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099249291 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090412072 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096168186 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.111690732 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094407131 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091699548 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116687703 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091847313 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090866771 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.11215477 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100433922 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089825945 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.121902772 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095273837 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096704277 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114210012 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093273995 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090031123 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109596242 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101863162 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092587984 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098624232 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.118710741 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.088961957 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087003406 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119695019 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095748297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.098387366 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110931779 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099579299 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099433975 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.117137398 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095977223 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101749245 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100467088 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.122057219 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100140087 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085744953 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114870073 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100802045 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093111971 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.118182415 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097842134 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087234058 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.116933829 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101915763 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094271787 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111961371 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089813075 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095052095 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100122525 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.118888093 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099277862 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095431168 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117849951 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091164187 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096627899 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.118284789 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096301034 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100579746 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113529255 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10020174 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090942945 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.098048657 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117059379 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090701103 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085920279 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.114054099 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.10170521 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087594546 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.118546214 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099662052 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090095827 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.091036282 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118535573 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090497169 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095373918 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120384458 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093519901 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10208256 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.117445555 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094280484 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098116268 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119943475 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08877664 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092274019 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112935062 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102302622 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092287133 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.097387847 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116410012 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100848575 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095842756 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.119424397 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099807321 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098610496 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108339105 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102393439 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096339347 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114701701 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092000316 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092813229 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087174213 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115507634 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100517503 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.090453912 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124858032 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102540832 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091570913 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11387747 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10142317 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091578071 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.12100234 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091647414 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09504143 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.1089087 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097675341 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.092542667 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118805397 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092156878 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088590185 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098252742 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.119815298 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102280082 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.095492144 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122492869 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088414706 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087255357 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.117450798 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092818149 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102101892 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11684342 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093262444 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093140066 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.11597982 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09666199 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100857076 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.088459247 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.112654826 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097082435 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095031608 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113558803 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090439504 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.097462616 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.112963358 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09688312 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092103524 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.109506269 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095062074 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100022577 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11178083 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091756497 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091120393 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.099616989 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11490152 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.091737131 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.087421134 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124131974 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09838431 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099628801 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112564196 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096887511 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091210142 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.119748248 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103420023 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.092222142 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1153538 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095600618 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098900159 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119342784 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088858349 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.09190047 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124817021 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102147392 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.0980584 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096139812 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.116917091 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100922161 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100042083 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.117840268 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.089522213 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.088871068 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114303627 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089771859 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.096336029 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120297847 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.095349561 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091999874 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.118422669 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099557421 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097293132 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096122563 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.112288993 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103027219 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091594799 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.120737813 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.091066106 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087882048 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.116973217 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101391466 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094442725 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093698704 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.120651287 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097065223 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.088599395 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.114759223 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098321865 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097788763 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.119244155 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095128398 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092154673 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.117195955 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105424437 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096269655 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092615045 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125044324 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.100501752 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094041792 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115867068 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098064695 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.099731984 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.119650328 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101752697 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091520033 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.114591454 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101925199 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100984524 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124949616 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094342298 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.089013087 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.118291015 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093401608 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089854667 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119204088 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10256511 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102267306 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.114892158 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093584702 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103799526 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119337568 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097277743 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092708167 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.092730234 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.120663001 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093845742 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097971244 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.116685876 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104282098 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100210339 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.12133274 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104675572 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089117038 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120009495 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097878276 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102197721 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.115815797 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09095166 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090077416 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097248217 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.124429743 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102224099 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09879355 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.119633928 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100599191 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095668001 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115065407 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094478192 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101803563 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.09883325 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.118385959 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098176182 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.093389371 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117302417 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096703999 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100890313 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.122279256 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096470364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104475539 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.12188836 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095248851 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092439559 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116183545 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099008214 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095424669 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098268465 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.114842527 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089929296 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100242645 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122756166 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096103613 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101944816 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123611551 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094293894 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.097625322 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123152583 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102902236 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096382508 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095528008 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.119650523 seconds)
  done (took 61.572391718 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145959274 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102822055 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117943344 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0981148 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116614179 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119366631 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098198795 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097378583 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.118817707 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107631825 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097394676 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117979087 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114012339 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117468433 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136446555 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108161968 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118812049 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09919012 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097885453 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097702848 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.134603007 seconds)
  done (took 3.288813906 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.115827083 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111560604 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129175203 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112966095 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104286716 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.129481078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108527253 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130200142 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112248688 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105181152 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132164795 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108784773 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126153154 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107926825 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105591432 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126323165 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113239624 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103800521 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131771663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109542539 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.126067643 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110191179 seconds)
  done (took 3.488669528 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.106302223 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10066871 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099376056 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118218213 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10067425 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096149156 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.124253018 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099470631 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105593287 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115643376 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.092650953 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09522892 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.099408442 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119461558 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092257169 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096507141 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128092896 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102502459 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101336805 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.118684959 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108879412 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097054901 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.11827386 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092232714 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.10782376 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.121312951 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098512145 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.1005382 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.090155286 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.12266381 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.098186429 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.095458601 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11835061 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.094157563 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090368786 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.120686366 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101714158 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.097929159 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.097378536 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.118781702 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099120919 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.101240387 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.12296087 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099026139 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.097688281 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.116771995 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102125161 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098176905 seconds)
  done (took 5.97037814 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129295672 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164275708 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103180266 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135234534 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134306395 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.10832824 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101540061 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137120726 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.100520924 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124023883 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113873623 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112323936 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124717869 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105719665 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100635034 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125653758 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104564943 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100619307 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129729293 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102376351 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106338884 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.126063105 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.350957202 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132283016 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105628515 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101207683 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.121755676 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.10627604 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112327314 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.128990591 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10607617 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104900489 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133704925 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104005944 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102094143 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124314792 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.113370543 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.123139724 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103918465 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100232164 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122040383 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105835859 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102825762 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.133832306 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104036808 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103911194 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122890131 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100356926 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109777875 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.124042934 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109264507 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.112311752 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126070178 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103001602 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104044811 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132689435 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101325942 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.120540249 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105203386 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110547608 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.119884692 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1054926 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111907225 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.123300993 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108489911 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111053358 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125118064 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104364868 seconds)
  done (took 9.092496126 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134953511 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105413562 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134473217 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113313918 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104253242 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126781395 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104954998 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.103573098 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127810012 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109792793 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126093731 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.202710877 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123431934 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110920594 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105864792 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.126994769 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105509007 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104701238 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.12769483 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105928048 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104567036 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.13467278 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106325888 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133696448 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116845622 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101836469 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127994026 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106891816 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113127276 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128075447 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115901458 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127499765 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108044428 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112377729 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13976418 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107461382 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100376402 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128151419 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106184867 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10552442 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.125614138 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114969 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126297603 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104452774 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105126668 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.125827985 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114993083 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116014564 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.130822534 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110360864 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.1263406 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114919306 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105666559 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.125720239 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114414155 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141105458 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114750844 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113533865 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127019951 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113947473 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133167859 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121863503 seconds)
  done (took 8.297852003 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100581377 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100025075 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098792285 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119737968 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099360106 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098230873 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098052511 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.121100469 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099786838 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098433722 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120938393 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10111284 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099079 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098482963 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120419631 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099641661 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098969987 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119274051 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099761961 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099674354 seconds)
  done (took 3.033201276 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109518463 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117039947 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121579405 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108113901 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10144571 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127111271 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101850529 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10283783 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101211763 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124040962 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11041425 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130271685 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102854379 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106780331 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129675128 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107779061 seconds)
  done (took 2.746109915 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120020545 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117380983 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.192178522 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103460272 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124700193 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109682012 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102087598 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125200625 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10305083 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107925711 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104329951 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126947093 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101935306 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102052061 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123590662 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10589739 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100246288 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.127629303 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102606327 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.190470433 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107424555 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104063521 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124067829 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105770901 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103525656 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127170792 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107928231 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101170125 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.10321644 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.124547137 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.105229071 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.108344882 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.124026033 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107139204 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102311996 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124165476 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102147873 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101473133 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126286996 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103279543 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104525214 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123028928 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.10315945 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104853852 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.100200147 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124783929 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101171816 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107713872 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.125051761 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104765557 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101435367 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.13031051 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107466671 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109382521 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130357739 seconds)
  done (took 7.230298586 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11258562 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103290815 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133451218 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102319602 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104163496 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102791419 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125245227 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103684954 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102196769 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122463413 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104231919 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103314486 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124405229 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105256875 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103874576 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121970621 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101999511 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104153912 seconds)
  done (took 2.928095482 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108952262 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10224314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.104962997 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123311956 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102117543 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100856565 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121757379 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101890837 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100206479 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100845203 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12415273 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102836315 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100149984 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123955511 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102345643 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101646302 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121547992 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102776966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.102716787 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099851 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12425462 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102794921 seconds)
  done (took 3.328190676 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114282511 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.184176017 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108573773 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.190711506 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097805328 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096677902 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129321298 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099252078 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113129713 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.118753917 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09816342 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095993164 seconds)
  done (took 2.399421594 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127977408 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137816636 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123119787 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102777668 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109973221 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127521683 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106759493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105537662 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135308977 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117875644 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127772833 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115279329 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112778631 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137079578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110407573 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130671514 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107906557 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106595559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122526858 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122181868 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105083725 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134904441 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106370693 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105661306 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128286873 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113970005 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136516999 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117719056 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105950801 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135416223 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111606421 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126861091 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115768409 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11722593 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124136849 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114806222 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107146168 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143803752 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110582223 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135605022 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103756397 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110454372 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135871943 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112398699 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134236818 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108256392 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111475088 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128103199 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107900408 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126034574 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134179888 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115298999 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131858477 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115905978 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112813855 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150144692 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11679611 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137173716 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110644195 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140219522 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11598502 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110929106 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137435413 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118588661 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133120317 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116566225 seconds)
  done (took 8.917740625 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143760961 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102229672 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12749599 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119901679 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135425882 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109218827 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1062857 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128963949 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10820875 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103423084 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170864195 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107348738 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116513995 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138233338 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107152161 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129591962 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108004398 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114746438 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125387545 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128380341 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127834058 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116586321 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114781746 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137195407 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118473738 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132817461 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10856692 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107087124 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128791182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108071752 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111729424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129589199 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117526367 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10332523 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139043237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107613228 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127986935 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113664986 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10717251 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133098318 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117283205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122171469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130905233 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108235556 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140501398 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107175764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107403548 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12564616 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10952851 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103124798 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140883995 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118986697 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139915831 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115849585 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107389695 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129878371 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108272742 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106889762 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130093312 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112894061 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136605482 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109035264 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128103762 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12908388 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107625939 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135420876 seconds)
  done (took 8.912641903 seconds)
done (took 169.200663986 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.153429458 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.193173529 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.148294163 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.181193746 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093676581 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129437977 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150723067 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.151030953 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.114181887 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.09521431 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09325463 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095797693 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.185567134 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094406843 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.092089541 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120187457 seconds)
  done (took 3.045462565 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195254719 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.310152758 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109141463 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119953472 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102085323 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099197392 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120145267 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100061585 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097381114 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127618034 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100725727 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095506345 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128093134 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097031587 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097716818 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121843485 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106145768 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100158612 seconds)
  done (took 3.191885987 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119130134 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143555176 seconds)
  done (took 1.231151566 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128353802 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194417037 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.282261942 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167256279 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122328652 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138207234 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148358382 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135882 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188898617 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133576567 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1116944 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098184802 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145914166 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10490933 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112651911 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121885333 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127684074 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.133973029 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114197006 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10020946 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142176228 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103778746 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104390804 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.134434929 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178162995 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133161055 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10385522 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.101482939 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123691906 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112911405 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.103451703 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.137806613 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111833858 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.173790449 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103921925 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.169570951 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106675762 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12204142 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11236375 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097800875 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124905181 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102904395 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.135165557 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100586624 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102857389 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127582677 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103448074 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102306844 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128197239 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109205416 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.105304995 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127887099 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167426621 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.110381869 seconds)
  done (took 7.90314247 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.867753696 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140725115 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099581865 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.017857045 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150560775 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113727287 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.863973408 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146317024 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.258035765 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.885565195 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115542999 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.133748626 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.240398494 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.2579872 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.288579214 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361957485 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.724445038 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.112264432 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127697027 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1649587 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106729548 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147729718 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119144302 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.521417874 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099520562 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121390138 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107428668 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111312448 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178421471 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.098891614 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126734474 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199435225 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270927282 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208777107 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123984845 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09887159 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098524256 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.186517297 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274169573 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219782325 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196372257 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096113637 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.119940997 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110538471 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118145228 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118739001 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159805791 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.192556514 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.19318242 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102972725 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135763127 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11058387 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129769639 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.157016387 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121612774 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.363281744 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.36528681 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098060376 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13132703 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115075663 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267387763 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123525147 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239986345 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126468614 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215367639 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121449889 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.844011856 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16373694 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122163918 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106032041 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106140019 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129823668 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107366018 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191583484 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.480516926 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135559682 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103621844 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121045806 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.213475009 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122768292 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098619163 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183993929 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101126037 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129760158 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11474948 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.110757728 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190888851 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.271190909 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.111724794 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.13326611 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104897026 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135943778 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101075242 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23401734 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229919171 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.175832691 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212702726 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132007092 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.180666463 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.16399091 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130709752 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166953003 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131493319 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115345547 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131017047 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226725753 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133632159 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.1252171 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105367694 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130894211 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.139039488 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10332813 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132509133 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186961242 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.538338427 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186509834 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096356357 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.130111187 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109985994 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181669974 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107643148 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265623205 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131903423 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.163922592 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132221024 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097063878 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107713869 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183681246 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13400762 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11024969 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108054116 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136522308 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280995038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.226002505 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113316699 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.253707613 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.200958808 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10757232 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195385431 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108550754 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189525312 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110286584 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130739797 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10105758 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.862533939 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137573588 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108496417 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105285184 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208781746 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099436661 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126703385 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101525124 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097097539 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816246745 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125521361 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099740308 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.1026165 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128866891 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109958249 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108142912 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128443285 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158182874 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26863497 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11421703 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107094003 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124852806 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.179045198 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103433647 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101495637 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.09989575 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124260271 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109318094 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127134553 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104408648 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191991668 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155831409 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252396397 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.638760583 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103335522 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100757401 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242045156 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124108223 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.3307359 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109237419 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.236723628 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186864608 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096535184 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385774291 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.165657988 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209357422 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103389286 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19167927 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097165666 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132140145 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179827749 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1024401 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108024581 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.180068793 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114906966 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13808672 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.281762739 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100294884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.260339148 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097158821 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190453129 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102367684 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13429606 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328068207 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.099696391 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14244909 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18044754 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107250441 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103291707 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.675035218 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100143071 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136585426 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108285051 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.233538919 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.187219811 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131960511 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.110496492 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112916443 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.182187049 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.233605248 seconds)
  done (took 48.074325655 seconds)
done (took 64.405273171 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.2973479 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258385066 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.30583842 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.209323983 seconds)
  done (took 2.129210116 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.261392933 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.161834746 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.236124678 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.098158184 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.243934301 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097665179 seconds)
  done (took 2.091577056 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.490187168 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.37098182 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.307637147 seconds)
  done (took 2.164901654 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.255235685 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.240803565 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.330332279 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407359576 seconds)
  done (took 2.338723064 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.29609263 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129803724 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.121690387 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.209489009 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254812899 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.228969694 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146851942 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194067057 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127173537 seconds)
  done (took 2.74892216 seconds)
done (took 12.463881399 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.204817578 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.136677589 seconds)
    (3/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.316282621 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.26233113 seconds)
    (5/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.317083541 seconds)
    (6/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.22400532 seconds)
    (7/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.281078104 seconds)
    (8/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.190518826 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104729505 seconds)
    (10/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.191529129 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.160171648 seconds)
    (12/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116551198 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.107428477 seconds)
    (14/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.218859213 seconds)
    (15/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.319485197 seconds)
    (16/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.139065636 seconds)
    (17/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.269571488 seconds)
    (18/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.331155451 seconds)
    (19/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.224523142 seconds)
    (20/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.229356381 seconds)
    (21/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.098423781 seconds)
    (22/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.319220843 seconds)
    (23/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.175161512 seconds)
    (24/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.223890804 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.086612911 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.243429335 seconds)
    (27/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.135878549 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.132140073 seconds)
    (29/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.13627006 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.079456556 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.126948355 seconds)
    (32/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.155182415 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110591056 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105044923 seconds)
    (35/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.077790885 seconds)
    (36/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.20095172 seconds)
    (37/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.17354004 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.1329963 seconds)
    (39/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.079875627 seconds)
    (40/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.328954203 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.20442347 seconds)
    (42/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.151970997 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103443262 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.129587421 seconds)
    (45/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.168488706 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.101490971 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.127708941 seconds)
    (48/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.181183251 seconds)
    (49/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11570906 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.129147614 seconds)
    (51/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173556302 seconds)
    (52/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.10960896 seconds)
    (53/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.160728672 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.10437693 seconds)
    (55/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107336868 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.124431786 seconds)
    (57/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.134881307 seconds)
    (58/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.125734377 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.214566328 seconds)
    (60/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.17052062 seconds)
    (61/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.107788864 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104728163 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.321428754 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.079629778 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083074938 seconds)
    (66/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.076970264 seconds)
    (67/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.131781034 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.104645342 seconds)
    (69/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.079829114 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.078442277 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.103316887 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175384839 seconds)
    (73/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.143346035 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.128186515 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.196106242 seconds)
    (76/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098340597 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.105183631 seconds)
    (78/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.112087605 seconds)
    (79/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.107860767 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.195546476 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.105067151 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.114180036 seconds)
    (83/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.185058229 seconds)
    (84/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123763892 seconds)
    (85/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083586866 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.104139401 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080775392 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079987571 seconds)
    (89/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.142084013 seconds)
    (90/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.133132637 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.134377827 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121591788 seconds)
    (93/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.10383188 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106150142 seconds)
    (95/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.180651899 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.168642855 seconds)
    (97/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.175238103 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.128579121 seconds)
    (99/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109710314 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09922741 seconds)
    (101/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.135437877 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106117484 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.080091006 seconds)
    (104/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.141924024 seconds)
    (105/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10762406 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099965805 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109222277 seconds)
    (108/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079329859 seconds)
    (109/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.199415003 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.187970719 seconds)
    (111/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.087554496 seconds)
    (112/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.223398084 seconds)
    (113/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124791306 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.12969313 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.133316628 seconds)
    (116/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.079082924 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132499033 seconds)
    (118/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.175277725 seconds)
    (119/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108904679 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07963495 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.104815017 seconds)
    (122/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.163102738 seconds)
    (123/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078424199 seconds)
    (124/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.07908217 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.134539932 seconds)
    (126/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102646763 seconds)
    (127/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.086949186 seconds)
    (128/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.077984888 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.204578042 seconds)
    (130/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.079214352 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.107877731 seconds)
    (132/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.103480613 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.197201972 seconds)
    (134/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.200139306 seconds)
    (135/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.177599673 seconds)
    (136/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.081208721 seconds)
    (137/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077840137 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.129250824 seconds)
    (139/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.084780052 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.104023403 seconds)
    (141/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134591523 seconds)
    (142/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.081913655 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.079418059 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.080934633 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.152192227 seconds)
    (146/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080271925 seconds)
    (147/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124553408 seconds)
    (148/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08348649 seconds)
    (149/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079077762 seconds)
    (150/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.202990494 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080736644 seconds)
    (152/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109315431 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.138645336 seconds)
    (154/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.081022981 seconds)
    (155/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.080577052 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.102580681 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.130056922 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079872054 seconds)
    (159/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.080083248 seconds)
    (160/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079375683 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.104644638 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.081530213 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.080784922 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099344446 seconds)
    (165/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.160564303 seconds)
    (166/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.177277384 seconds)
    (167/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.080579248 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132182529 seconds)
    (169/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.081136088 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.103519877 seconds)
    (171/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080049473 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.148944388 seconds)
    (173/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085011076 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114972906 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12735785 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100596716 seconds)
    (177/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.106525031 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103039539 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.108263033 seconds)
    (180/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.080944318 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.100108298 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.122452419 seconds)
    (183/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.105831038 seconds)
    (184/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080496493 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.080927786 seconds)
    (186/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.143025662 seconds)
    (187/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.104421861 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.080098971 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.084270937 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102373207 seconds)
    (191/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.077991186 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.104458792 seconds)
  done (took 26.832687104 seconds)
done (took 27.838339935 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.214771162 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128156876 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108955556 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108479681 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.20602317 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115660994 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151437953 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.11219874 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117927245 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134732231 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100790498 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122233667 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.132247047 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.184337935 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.136907044 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.102844791 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101570294 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11861954 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.151388517 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125237546 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.206066203 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102517715 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.118138077 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126875834 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.179747404 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129304573 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109259832 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109584403 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147390468 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111652376 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109679687 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126594708 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126968171 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123984686 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125392466 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112162066 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101164393 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085673185 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135208596 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111584405 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122156495 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.137244173 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112201647 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101271662 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136807515 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111905842 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101182558 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138219573 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100993093 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111358438 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102979663 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.152336184 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109886258 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098984872 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.127104151 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103118604 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11983953 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126627453 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124242743 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100923052 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.127085716 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103043983 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113414176 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125042989 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111505904 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102394245 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.110039864 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.13849469 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110057987 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103039319 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.127196951 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110114229 seconds)
done (took 9.940572316 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107252928 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146156507 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.19970983 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.21671372 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129232634 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.115052449 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141915407 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125344659 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140601941 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121339735 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138393865 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158898562 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183277791 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144516372 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116272789 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112272865 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.140664963 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110467315 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.211597004 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125179719 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150444977 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118852594 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12813886 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143565766 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106730272 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.127799775 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.135210764 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114033377 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104498419 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.148998074 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.1261792 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105064594 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133667251 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124222815 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121663861 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142295185 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117536805 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.112734721 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.132069401 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106144367 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113189812 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.14770445 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10615592 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.1406449 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.114985537 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120218598 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137198773 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120284569 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107410318 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.112637301 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.133777259 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131133641 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141421919 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124001121 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117880272 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.141294794 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120581276 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117638553 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132758154 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119543516 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106625906 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.104809717 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133181632 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.12734166 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.133549616 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120129787 seconds)
  done (took 9.650453897 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125511478 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13539464 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.142409193 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117278325 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110491467 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125669951 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099171188 seconds)
  done (took 1.912074827 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103011369 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.188716818 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21173533 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211212543 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.210738473 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.194985477 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149642177 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102626074 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136297615 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137483756 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188499436 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.242007815 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11055358 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143401231 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187321701 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.102638548 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.213442459 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102737636 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.115220144 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.213977459 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118176955 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.156134144 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.114921602 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101472629 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210501854 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102746285 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.264544362 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11947227 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138003996 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115742284 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115298254 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206774083 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.211152999 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116445225 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109103763 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.21092646 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.209889859 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115388586 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.224588759 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105871766 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.212115668 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115226647 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116249888 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.141826549 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116328146 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196764177 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12176388 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116602872 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.140473843 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.19264208 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137835195 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.186520457 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.140088392 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116456226 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111840324 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143634625 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123873617 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115309532 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.219616123 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11786424 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.210601236 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.213296585 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.185537661 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.212681511 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124461689 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.215398912 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.208087867 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.114324306 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109282591 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.144673854 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187119041 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142029211 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113344545 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.201977601 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119177872 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.215269776 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185916268 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.140702045 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114576963 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104007502 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140910285 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.102072089 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.203913842 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115034071 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113359683 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146378879 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116108497 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115267806 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.133520194 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125228576 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114272861 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.13886746 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121412359 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115456291 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.144780783 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.215132821 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113373512 seconds)
  done (took 15.839282251 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107753191 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104183186 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107618257 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130369941 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104288336 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103488966 seconds)
  done (took 1.731813468 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140977707 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116856924 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15073722 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118023881 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165467655 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.220493216 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.225146936 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110614052 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159088024 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125848886 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.222117258 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.196522054 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.222400528 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119130196 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.226215493 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117619393 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.225925266 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114527197 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.152734063 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114329387 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141913994 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121955314 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114319034 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.212337056 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117605013 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.144635092 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11183115 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125693459 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151862262 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112758869 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.1189312 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144429867 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111386898 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.111156792 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.227310476 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109285491 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140822571 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119731989 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119278123 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.146863358 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.223789384 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117977975 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12382007 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145187698 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112952257 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109405253 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.145792116 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112384413 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.227148922 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12026365 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118783862 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145427231 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120073817 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119659169 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.137470427 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111884226 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119225989 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.226733357 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145797545 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.1115251 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117258289 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143842228 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114163513 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122362217 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144564887 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121618004 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109506881 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145043231 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.11699327 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118553849 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146342855 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119357637 seconds)
  done (took 11.340141404 seconds)
done (took 41.521463874 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.641230779 seconds)
  done (took 2.709354043 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.83771925 seconds)
  done (took 1.912995559 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.780531424 seconds)
  done (took 19.881414701 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.528420679 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.608873154 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.063777564 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154910491 seconds)
  done (took 3.424654853 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.076590091 seconds)
  done (took 2.167841266 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296728621 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.269502198 seconds)
  done (took 1.644216103 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.754805069 seconds)
  done (took 1.846967579 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.539886312 seconds)
  done (took 2.617780567 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.353378046 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181256969 seconds)
  done (took 1.629120102 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.613546104 seconds)
  done (took 1.706873737 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.770783669 seconds)
  done (took 21.868881925 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.252768134 seconds)
  done (took 1.351412626 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285293587 seconds)
  done (took 1.383015689 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.752607212 seconds)
  done (took 4.850665301 seconds)
done (took 70.077203646 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114347385 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.117113675 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.13568348 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139907955 seconds)
  done (took 1.59409987 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123008029 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11671778 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119291657 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143993092 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12225514 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117358989 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.141689484 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119386612 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116413447 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145594071 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117239647 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115218987 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146438989 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117159598 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114369668 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145871502 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121814985 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116651101 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.142862714 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119228934 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117118501 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143943124 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121471611 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.118750722 seconds)
  done (took 4.122919865 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114659172 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.107235187 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109952543 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133244041 seconds)
  done (took 1.565939367 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.12567878 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128487449 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153854092 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124986366 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128802493 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154166964 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116366973 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114656299 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141990377 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125793191 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132198716 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155305938 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128305875 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116943244 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.154434141 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111985931 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116065278 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155067798 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123356071 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124766916 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145699803 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124671687 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.119679382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152730006 seconds)
  done (took 4.273230973 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191556447 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12852871 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173670234 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15950982 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176301526 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115491344 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142790991 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149309015 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122942501 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.117065848 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14631677 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162190706 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148170594 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119852825 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117036821 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14831225 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128751874 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.121689294 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188587672 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121531131 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149030427 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129873023 seconds)
  done (took 4.260399937 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120155797 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109291475 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103566867 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135495203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121054419 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.109855197 seconds)
  done (took 1.807663315 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10775046 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101737302 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.102553928 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127549808 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.107098921 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101437743 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099981667 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130020505 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103225083 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102097807 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128736623 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102259357 seconds)
  done (took 2.423972691 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.338425483 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107141969 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134523585 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111305124 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113135154 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.10497594 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146453156 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.106766608 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.269912385 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10241146 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144898659 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.196669556 seconds)
  done (took 2.986169193 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20293848 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144776346 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297849015 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367334839 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160784443 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188504831 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265512619 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192107616 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205221152 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137926975 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244611636 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158571139 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179813773 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176835841 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166196199 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156251236 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195691167 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193542761 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174101064 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228529655 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159421438 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193489719 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184386305 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175156845 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137374682 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186911895 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117128292 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124085948 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192398837 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190779946 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168743393 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174556862 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137729248 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217026869 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251713584 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16963812 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314828826 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13058505 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197289308 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.187333411 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254321521 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163622525 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186331285 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179996709 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127460805 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207258316 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150580784 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199688502 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132394473 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169410297 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178313929 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204547919 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199313622 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134342642 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311792132 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157723872 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167665316 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168174327 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212369155 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217666983 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167325023 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120657893 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.206382309 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212643686 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20704571 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142377081 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.186501162 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124594 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164648725 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.223927818 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205894284 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158738426 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.226556483 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15807141 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161003347 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.199008303 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176331131 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207516202 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160102484 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.144697727 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148017054 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131208149 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154790509 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.187326323 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148748397 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202020437 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157369949 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.337179573 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183408137 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181525754 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15690019 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186559176 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160040342 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176289853 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101633647 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168858477 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.163810865 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18361013 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131580527 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178876122 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141514151 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.12678551 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178095018 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.119700248 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187776586 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.128153618 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187316409 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161330964 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128372732 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193849652 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144508735 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.184474809 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191685135 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18838293 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15665663 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131824483 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22037453 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160174214 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133092165 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203283636 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.209691323 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142949728 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160134428 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162733995 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218294906 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140928487 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218410908 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134976346 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160751654 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138372734 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188406062 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155972422 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179913736 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127423685 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.149888216 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224054713 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151473289 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139783625 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194890983 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133107883 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123328798 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16509171 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135437583 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139134821 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173613905 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136085492 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182013614 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158305867 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186194924 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152739049 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160826186 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173523561 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157637339 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.161331322 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174133891 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117843106 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.200467311 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187346999 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156106921 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202632153 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189370387 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213501644 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161753052 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158276372 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180524563 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154555742 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120069983 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184620023 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154722616 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186424799 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179919973 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213428573 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191314377 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149602943 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174695701 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164412895 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.205916411 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152028396 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170557673 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159774893 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19217307 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.119528618 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.149575681 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127457 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137254301 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154783685 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135801684 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202752026 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162251999 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208752286 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188644425 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139224356 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213339445 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126217918 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18595978 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.164997205 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165265476 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181465202 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211845933 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167045914 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166879414 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15916856 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.147416279 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125929837 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130895378 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189253355 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133534818 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161356214 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140083669 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214972812 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169733821 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175315922 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220263371 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165308927 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224940841 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117713459 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189229285 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169792428 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186653209 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183926674 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164167925 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156384812 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212067331 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139214388 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220225567 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158433027 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192942939 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213961347 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.159528928 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127756612 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175472176 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160672859 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164764427 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164684925 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173273059 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130020057 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179843605 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139694929 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123158833 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208031258 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16967474 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170152392 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.188063528 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166338211 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151849486 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140279718 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189259364 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144557937 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.104601665 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196408794 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211180755 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144903575 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179368732 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17592502 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153762747 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.321016026 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217919567 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173789866 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163660833 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138675746 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191987044 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162009708 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190594511 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182037442 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169529726 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179241453 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190882848 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141601947 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158476014 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147225679 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177616761 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.138115708 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.130542554 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.185141755 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140938239 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212731236 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16727994 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163770187 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187491654 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.146850789 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147875695 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168472104 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20041803 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189265758 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170171469 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.187241035 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193175051 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195977589 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148135968 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12948422 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130902752 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213273656 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129048984 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191930638 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203892792 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190013318 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194982068 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160710754 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170170838 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126885842 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188492844 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147701613 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217156917 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133058345 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166260447 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217741417 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128196166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128855539 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190002143 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299021995 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147473572 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200299311 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.112223905 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29334502 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128744489 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131431614 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191336676 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169376929 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.16097145 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184045624 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193941563 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142794492 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190298969 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136162743 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208488277 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189690927 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194999354 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199531946 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143143044 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187771689 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159052861 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205724224 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143006038 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173524097 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157154729 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214125849 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.181025031 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.159426008 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160537908 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189411958 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159036796 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198223012 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136469404 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224870288 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127360778 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191318865 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135408914 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150868498 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159342565 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.201222602 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130660954 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207213274 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15941687 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161064629 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125362768 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172008737 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159473928 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164147473 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129108214 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207697489 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129326649 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163431062 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213260775 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128439442 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18727429 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143798274 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155318479 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140772255 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140438851 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158931773 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.1736138 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213355724 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130001652 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206706493 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161396011 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191795529 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154743792 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171191432 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.332779928 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1537255 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187129492 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175811276 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191884001 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178798631 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16641531 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190489954 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149715654 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190476311 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145741286 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.249330431 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162245231 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.185410134 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130045813 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168210455 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141335856 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.131504913 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179806449 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158463567 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167642964 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.136820224 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183350397 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144907341 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142364973 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170858315 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185091351 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178115117 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211295491 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18460509 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162992169 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165733593 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199933042 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129989139 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19054119 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17242372 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170841672 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147455931 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.160304969 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13709199 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188370028 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.153953916 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158919803 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191656493 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161453909 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189540787 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.13605788 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19164376 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140117365 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189797581 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127561153 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.151498131 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191457105 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131526159 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153011493 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163066813 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184290136 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.16004768 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124179131 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.203420722 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188974074 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.149559292 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132187446 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298639122 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158919252 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222292563 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13660038 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162395882 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144046454 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153494391 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.185340382 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160830739 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.158766473 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129373486 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.157579339 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.166369582 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.17186803 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163100892 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199417629 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159265266 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227547903 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133984216 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283412481 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141783366 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187538789 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117133541 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.126954601 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169453862 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133610934 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137918096 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215280278 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220049358 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.156103811 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.174098764 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132501294 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.123214149 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159174448 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16636939 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180259915 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161723897 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171761301 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103918664 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140715858 seconds)
  done (took 84.878920902 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166920401 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.153285646 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168463968 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221946455 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194216964 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.290701672 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228556791 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246631299 seconds)
  done (took 2.865707453 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.121113023 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158260113 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140072848 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146317459 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.117862412 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.458651334 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.157465329 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.118164064 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163028742 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159293659 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142464993 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.618521529 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114215431 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.146076795 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.124927093 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.117664074 seconds)
  done (took 4.189553245 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.679617366 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551089643 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.972357836 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277396743 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.230204395 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.181342088 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.770689399 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194239563 seconds)
  done (took 13.054452882 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.145347116 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135151704 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.316134511 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.259177052 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.148506858 seconds)
  done (took 2.206103708 seconds)
done (took 131.315996599 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.123261421 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12151459 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121174326 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154974772 seconds)
  done (took 1.708245075 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176928895 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090801744 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092701232 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.118444948 seconds)
  done (took 1.675795756 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420841045 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.090508077 seconds)
  done (took 1.735240004 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148124914 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.139724273 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16474276 seconds)
  done (took 1.663683956 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139548158 seconds)
  done (took 1.339926307 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.127663507 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119492087 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.238009156 seconds)
  done (took 1.690788378 seconds)
done (took 11.019474435 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118272745 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.927327943 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432149898 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132982482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710732019 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425844706 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.424669608 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17353585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173991863 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136618801 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132460988 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687843719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.435803902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873055908 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.393830109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.903817668 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693035657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109740859 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145665057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111111455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.402017952 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.136444902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111032153 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109830518 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.716306065 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418853194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108733134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.915013135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108205997 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111498263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426662679 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.11006088 seconds)
  done (took 21.009891119 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117693411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.16949693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145561575 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111805425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112502892 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138958973 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121323129 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121027852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202879711 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109425079 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16277253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10931198 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113786328 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138355508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136742036 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109184768 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139919241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112676261 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117605163 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139056713 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.13370415 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108533211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138458041 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112379225 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10841688 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.157249476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110644738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121081452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137852096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113961943 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113161067 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137530223 seconds)
  done (took 5.334818961 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.157403644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178635629 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14778227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.148631913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.186244861 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11233287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222096486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148126069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201955389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111224262 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131839682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.1377701 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150240542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109093425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165859477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109909788 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111396775 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140688445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118580162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109927904 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162869639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109968789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110994901 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141578355 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110403181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131992418 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139517027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122322683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108369486 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.142920303 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.11570441 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109839709 seconds)
  done (took 5.611850358 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12396959 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123537279 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131266066 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161609113 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118922659 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121510021 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153179433 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120198644 seconds)
  done (took 2.27194193 seconds)
done (took 35.433153169 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135163174 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129707892 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129365735 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154262339 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.192548037 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.147682808 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.12722392 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115135598 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154810426 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131409316 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108874436 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116536612 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.160568594 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121514377 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.224874909 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124687766 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.229168036 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.193564693 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.147041334 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125117055 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116537401 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.229297149 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120132257 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.146176269 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.197082957 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.111233397 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.213744045 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118930024 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.150775704 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111415118 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.224845208 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122154628 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117149663 seconds)
  done (took 6.149935121 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.210760856 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118693995 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148513779 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.117687145 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118102688 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147089733 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213985733 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147575285 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.118632103 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116289634 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116565428 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.226998646 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.122237927 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.145080251 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121071947 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.108643771 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.245796436 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120073704 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.10867721 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122612885 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114962861 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118489863 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.257170942 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113185624 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116126786 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.149191146 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.120757058 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121218 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150508751 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120369375 seconds)
  done (took 5.501619311 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124419378 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.131229046 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.136490732 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.214319144 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14663752 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160139438 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140732469 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.130954398 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172703365 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11261051 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126578189 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178942207 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128926683 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122161543 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.147254379 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.12973814 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132015339 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142682018 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120705142 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128485521 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162730464 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131056712 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.137035688 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.150622946 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112028037 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117995795 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152042651 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.125877035 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120290462 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.155572741 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115203382 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115495511 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14162882 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.148947568 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114159052 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155320952 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137404288 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123410667 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.154127426 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144411117 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115313187 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143841281 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139327143 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164037345 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143634276 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.12795055 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124247735 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155636392 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.11111253 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12954257 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.182546467 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112997207 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.131206396 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.139680622 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111299282 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120157517 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111870432 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.147253981 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127052702 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.113878077 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166339175 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12003707 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122069298 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144301832 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124242623 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111052181 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140181798 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117291165 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139037513 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.148209732 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150390763 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111950881 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122914803 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.155309258 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.124031786 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122936016 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.142927532 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124011022 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121797097 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.147820782 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126255071 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1141084 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.145062092 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129969788 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132069886 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.15616629 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125692495 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124581596 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.145903868 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115923045 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129591408 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112570272 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.14841689 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125594111 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111654393 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146543877 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125535824 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123009961 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.141411835 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138326843 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115508392 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.141502976 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139103584 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.117807136 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.146860568 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123862141 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153687236 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.140704749 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124881783 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124206525 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.111470994 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.15124492 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115330955 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110731526 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160882784 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129601987 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119141452 seconds)
  done (took 16.928131603 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.323962877 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.311362729 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181633281 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.313836758 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.156206396 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209177304 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.307138308 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.309352462 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112236507 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181780843 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163355026 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.280032623 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14584187 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.140706587 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.310849465 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.363959257 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.174823138 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150188462 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181714424 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126707805 seconds)
  done (took 5.68409418 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133514903 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.147351978 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165886414 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.139896243 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.122050641 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160928194 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114195259 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13511711 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.156423882 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123852669 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114960901 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161367326 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126700919 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128663586 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158615351 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145356397 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119917427 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148720374 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135187742 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117427736 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133193171 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.138570996 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121830065 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.165240218 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131803593 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123474349 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142696517 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119198386 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118905372 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.152177351 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118948864 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131413315 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150477777 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105341708 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125233008 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.127189056 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.150127756 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.116606678 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116684768 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147279821 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128603679 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125102549 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150945485 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099193263 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131219985 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10864269 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.156598648 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126451432 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107595953 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.131426922 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.155725693 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127924146 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.11919119 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.167201846 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121088863 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129152275 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154746996 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128858021 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.118290001 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141982231 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.112676899 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116379059 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.151352592 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.129949838 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125415385 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162743163 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130591234 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112573979 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.146729899 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118484354 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117567893 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.15710958 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137265858 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.1224699 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.119521542 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156008828 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.1224702 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093846052 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.152998663 seconds)
  done (took 11.759835664 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139444334 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.124190974 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130535934 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181386657 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.127337981 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118972651 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154652107 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134223181 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128686106 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163100683 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128127549 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.126349564 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166237523 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123700375 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122057789 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.160130421 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128283349 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150654336 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.162572704 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140653084 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156141389 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120341783 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.12524952 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124379041 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173475769 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124969664 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140009316 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.158887747 seconds)
  done (took 5.1764061 seconds)
done (took 52.417537646 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.378413863 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.581933663 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.349138553 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.339393396 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.365708905 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.358112333 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.343560177 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.345465074 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.924588694 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.316404325 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.345100942 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.354672871 seconds)
done (took 30.242831258 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.344384214 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.865296702 seconds)
    (2/2) benchmarking "String"...
    done (took 1.647114395 seconds)
  done (took 4.744484682 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.353861887 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.335486068 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.585125773 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.335006662 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.334895468 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.335652532 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.333506007 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.348218887 seconds)
  done (took 16.841273886 seconds)
done (took 27.515933414 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.411416797 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.520667652 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.580157968 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.336717736 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.337244243 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.335788299 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.335737063 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.362567281 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.342695501 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.339182138 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.763939371 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.609175436 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.339379727 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.713784272 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.33717861 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.3428175 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.364040201 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.56586599 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.339752254 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.362547806 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.312400951 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.316124441 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.355242352 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.335752213 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.342836413 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.342290155 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.401002435 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.347135652 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.524471858 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.340359976 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.36397714 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.339971986 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.3999335 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.349912896 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.349965278 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.349202804 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.521021673 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.346182521 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.324113212 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.366144343 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.520851393 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.3573722 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.345265308 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.343225137 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.339848517 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.399810519 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.316522803 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.474908782 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.362584035 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.344042962 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.339242848 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.70021929 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.346744855 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.34151304 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.339390418 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.553019321 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.359458944 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.398027337 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.363767704 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.341324922 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.344787432 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.347281617 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.35245601 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.343450487 seconds)
  done (took 152.477979767 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.338778676 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.342359108 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.343187629 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.361434799 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.343159008 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.344606787 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.340352994 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.340699134 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.343777669 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.370223464 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.344154686 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.344040864 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.343053497 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.290811629 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.349198921 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.358363616 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.345628873 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.343532739 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.352410268 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.340121909 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.34090123 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.345575304 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.3633912 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.344286394 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.346134939 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.410585674 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.344331307 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.349232038 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.355047205 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.342090023 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.389238083 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.348242419 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.988309678 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.214872771 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.35578864 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.37759233 seconds)
  done (took 85.3322828 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.34043974 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.342533459 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.341172583 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.375328325 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.340583261 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.944630217 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.949110031 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.317741629 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.536708983 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.787595069 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578727143 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.343123831 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.434590829 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.353475233 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.3428623 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.357717018 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.367497149 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.348032756 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.343761478 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.946816078 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.359811867 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.519086573 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.528760158 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.359489886 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37757356 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.734236056 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.345491029 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37707158 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.68011264 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.394826456 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.343101881 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.714807807 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.778700659 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.456282863 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.345229407 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.378352743 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.344033621 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.628925851 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.345141468 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.344099546 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.347317086 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.019599752 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.349767617 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.949203363 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.350271207 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.323228383 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.347606281 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.343877121 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.288322908 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.074669087 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.349766808 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.345171015 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.34657515 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.345254716 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.344474891 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.378174936 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.305027818 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.443820114 seconds)
    (59/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.344867248 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.343044947 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.34503552 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.348220686 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.378932088 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.34428896 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.344717922 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.42251003 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.350867302 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.599608211 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.404158464 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.453811076 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.951099347 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.348111577 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.345269408 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.442549111 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.465381762 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.346033804 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.345986565 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.34631286 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.346134514 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.45963605 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.34641819 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.043887731 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.52763094 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.365747282 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.790992797 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.449329836 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.346758562 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.738820555 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.350356315 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.346496815 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.077847723 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.443432363 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.347765349 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.346207856 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.345903379 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.044643137 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.953489111 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.613324399 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.353918577 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.913693752 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.353163088 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.228183428 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.936690574 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.005750693 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.350206494 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.461776109 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.530163426 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.366129432 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.347937683 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.790899752 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.352768397 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.408552093 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.348700115 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.750779202 seconds)
  done (took 390.598535063 seconds)
done (took 629.642335573 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.222119495 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.178671269 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.330328311 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.185389174 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.166731034 seconds)
  done (took 12.327046821 seconds)
done (took 13.574646691 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.546651374 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.549877984 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.414182361 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.552499212 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.383030411 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.566454174 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.536138012 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.368900441 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.461532285 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.435474026 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.461960845 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.403549055 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.383046553 seconds)
  done (took 20.30877922 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.642928178 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.362666994 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.418223256 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.61220836 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.395776131 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.654843225 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.682849807 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.361938813 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487080079 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.391492869 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.370487153 seconds)
  done (took 19.627486746 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.641203613 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.36076344 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.418868128 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.624548211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.396451804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.644592234 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.671120499 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.364000361 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.525958329 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.37216426 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.369354443 seconds)
  done (took 19.634111674 seconds)
done (took 60.815790687 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.392468267 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.453701245 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.389336482 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.371428528 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.368026274 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.367359993 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.375318552 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.369413872 seconds)
  done (took 12.333025621 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.368123935 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.367260485 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.364938618 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.366341458 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.36729322 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.366420315 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.368574811 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.367646967 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.368038078 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.36655717 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.367676095 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.368171625 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.368443314 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.367823415 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.367151574 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.367857803 seconds)
  done (took 23.125876091 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.370382992 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.366601159 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.367862353 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.368578454 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.368699254 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.369015164 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.368507399 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.37028464 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.367823817 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.366364306 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.3683764 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.367195411 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.368092444 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.366973353 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.368155754 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.369836695 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.369808739 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.368093498 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.373165412 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.369612751 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.370074204 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.369622662 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.368734603 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.370052548 seconds)
  done (took 34.101927378 seconds)
done (took 70.808265267 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.372642598 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.359134741 seconds)
  done (took 5.980487202 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.427450118 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.431426841 seconds)
  done (took 4.110005782 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.370940484 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.368777341 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.371624659 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.37038757 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.368722339 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.369596406 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.370407529 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.368877113 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.369719927 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.369115731 seconds)
  done (took 14.948614696 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.371725039 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.369708786 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.371487389 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.3710173 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.371353604 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.37077603 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.371401335 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.370073834 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.370773467 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.370639382 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.371702564 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.371744578 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.370057175 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.372541939 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.372639605 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.371475218 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.371967419 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.371514347 seconds)
  done (took 25.933069248 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.384690467 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.391161317 seconds)
  done (took 4.028587955 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.49927835 seconds)
    (2/7) benchmarking "second"...
    done (took 1.414833721 seconds)
    (3/7) benchmarking "month"...
    done (took 1.476525659 seconds)
    (4/7) benchmarking "year"...
    done (took 1.469578857 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.41366061 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.391872891 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.414817222 seconds)
  done (took 11.334313076 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.374313578 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.57008681 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.700756492 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.941847781 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.372947643 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.377939616 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.28128675 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.375573734 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.378051848 seconds)
  done (took 15.624206698 seconds)
done (took 83.208650023 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.372543314 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.370159766 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.382147746 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.376384216 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.711833197 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.393828605 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.362879459 seconds)
done (took 17.222647911 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.341888328 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.339705129 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.370376625 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.370676369 seconds)
  done (took 10.675544386 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.374756249 seconds)
    (2/2) benchmarking "read"...
    done (took 1.686917939 seconds)
  done (took 5.314643706 seconds)
done (took 17.241934594 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.372661307 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.374224565 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.374765193 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.375162168 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.374923109 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.374062902 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.376098929 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.374598401 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.373918714 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.373105152 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.374830635 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.372810743 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.373766782 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.374265588 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.373917219 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.374061625 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375878548 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.374337143 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.375704157 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.376376283 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.373915861 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.374913072 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.37441933 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.373583801 seconds)
  done (took 34.240987766 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.375288695 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.376809882 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.375188789 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.376535772 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.374770219 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.375178332 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.375134155 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.374816932 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.374193007 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.374636576 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.375875808 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.376985637 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.375345541 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.375305118 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.373400586 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.373427091 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.374038845 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.376435667 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.375402936 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.376475704 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.378403585 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.374246249 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.376451516 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.375548039 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.375115261 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.375636314 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.376104043 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.375338425 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.376007842 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.375424641 seconds)
  done (took 42.519873872 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.379663295 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.37585081 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.375827742 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.377229074 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.375419043 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.376238672 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.37595755 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.376901054 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.376945743 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.377120845 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.375693688 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.376072455 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.376573118 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.375453319 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.377064042 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.376990847 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.375972915 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.376044187 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.37723751 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.379039113 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.378293326 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.377680043 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.377002646 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.377818368 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.378254731 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.377334652 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.378484689 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.377885649 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.37818511 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.377980804 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.378472415 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.379381923 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.37836903 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.380077411 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.382740012 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.379422738 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.380041388 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.379734606 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.379292738 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.377393709 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.378265993 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.379475241 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.378554002 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.380818558 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.378959361 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.378657046 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.380060474 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.380219382 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.37872688 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.378895538 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.379216887 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.379035676 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.379235354 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.380095875 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.380170116 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.380598969 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.380768326 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.380906658 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.37918797 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.380964199 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.382412653 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.3800129 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.379469021 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.380695488 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.378994034 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.378698476 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.379387548 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.380137358 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.380430081 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.379592116 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.3811305 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.381493734 seconds)
  done (took 100.519619285 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.382106663 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.381990456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.380508286 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.379882207 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.37986467 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.379139248 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.380715643 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381148526 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381316359 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.38214545 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380716919 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.382056727 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381947351 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.379547734 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380829772 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.383504834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.381393051 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.382009971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.381629875 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.381262943 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.382036675 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.383786736 seconds)
  done (took 31.64951033 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.38237418 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.381895712 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.38332976 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.382924223 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.385973463 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.383708728 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.382403402 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.383346589 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.381091431 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.382870864 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.382548154 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383242718 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.383387572 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381741123 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.382448981 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.384449638 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382586763 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.384587237 seconds)
  done (took 26.155788631 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.385333734 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.382439934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.384034945 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.382776777 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.383737048 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.383452054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.384247553 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.382949449 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.383233726 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.384079442 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.385233948 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383728684 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.385471498 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.383086672 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383313 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.385581328 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.38427206 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.384516911 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.384593449 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.384459836 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.38536007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.384597821 seconds)
  done (took 31.712754577 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.385231716 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.384079305 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.384194502 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.38430745 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.382536791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.385109443 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.383707706 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.386619732 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.384959682 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.384145776 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.385247723 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.384353359 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.386576821 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.387683516 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.384880561 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384589009 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.38618158 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.384747119 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.384442449 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.383709769 seconds)
  done (took 28.958922225 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.386767619 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386561917 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38569801 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386885344 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.387486505 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.386283961 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386611209 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.387355845 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.39285515 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.38623457 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.387423 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.387105135 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.386849394 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.386450804 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.387509516 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.385983834 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.387037693 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.387298816 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.386834112 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.387721865 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.38655718 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.387055377 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.388669587 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.386780019 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.386713325 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.388934138 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388156743 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.388640541 seconds)
  done (took 40.108526747 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.386928547 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.385756018 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.38771675 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.388360785 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.38871405 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.388030611 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.387708492 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.387584571 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.3892306 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.38776162 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.387208051 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.389005869 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.388825343 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.3886718 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.389131021 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.387843271 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.389508668 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.388967641 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.388378383 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38815229 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.389407517 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389521591 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.389695563 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.388738352 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.388384515 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.389593181 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.39092827 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.390369345 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.389463814 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.389946486 seconds)
  done (took 42.927173808 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.408913258 seconds)
    (2/2) benchmarking "in"...
    done (took 1.40766482 seconds)
  done (took 4.084459626 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.39049516 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.389261436 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.390157657 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.39012522 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.388393976 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.389791786 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.390021239 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.39052093 seconds)
  done (took 12.385605072 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.383271202 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.390792052 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.39166295 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.390519795 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.389544562 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.382452917 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.390044458 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.397213036 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.3838452 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.382267169 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.383898045 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.384057715 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.388093046 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.386653125 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.38532123 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386598136 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.395452639 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.393445676 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.391018114 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.392459636 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.397005693 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.38820579 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.390274989 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.396863461 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.384392488 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.393435606 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.394211033 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.397321929 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.386577014 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.390463765 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.38759895 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.395345418 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.393664611 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.394084952 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.394815298 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.393512401 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.393522095 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.393854604 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.394798242 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.396250928 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.394679425 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.392988212 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.388172717 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.391144695 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.390634845 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.396859937 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.392350005 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.392840028 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.386766129 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.388191125 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.398067222 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.386346358 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.395008896 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.390479862 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.393849614 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.397499542 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.400281046 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.387473582 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.388184051 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.394613055 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.403255012 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.3958777 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.391791304 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.398977026 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.391059457 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.395482766 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.399027853 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.402458022 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.396077432 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.394308767 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.395847386 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.405694576 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.399268881 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.398478496 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.395497161 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.395012534 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.390151154 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.398474152 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.395586087 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.398729566 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.4024601 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.396153567 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.393553347 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.393014012 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.390922418 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.400260508 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.397943636 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.39964856 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.386975347 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.399631002 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.403538924 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.396843247 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.387375653 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.391490409 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.392912094 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.398996484 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.388987553 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.392208356 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.400361394 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.398315695 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.397135167 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.390488275 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.395500066 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.402259799 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.397669624 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.399423258 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.40466582 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.391059761 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.400910028 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.405064153 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.398154485 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.391578825 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.393705678 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.401241127 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.392137027 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.395346502 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.403342598 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.394455575 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.402786452 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.398004132 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.396501567 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.403359584 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.405223103 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.398462912 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.392882213 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.403397553 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.398724828 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.396775489 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.40571957 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.398873035 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.398735756 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.396411775 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.406050178 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.393557337 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.402961236 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.392970436 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.402417229 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.399998561 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.399036522 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.394782484 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.400795971 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.395461821 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.399631206 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.403485456 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.404547241 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.395647074 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.406602391 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.39831978 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.398597738 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.402354489 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.404271676 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.399513092 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.394661255 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.403975819 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.392437821 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.402721635 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.394383223 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.402730882 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.400527355 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.40155341 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.400329783 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.392279488 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.396648475 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.404538655 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.400333797 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.399836787 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.404433092 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.401608665 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.401996836 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.393841566 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.404654761 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.393727279 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.393880751 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.40473249 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.401684441 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.402010999 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.399638565 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.408932359 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.40284499 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.401662619 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.395064617 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.399150814 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.40624158 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.404032362 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.410196648 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.40221519 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.402764585 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.397667828 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.396557566 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.403180193 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.396155065 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.406827559 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.407639467 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.409895712 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.398661805 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.404668513 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.395375574 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.404356368 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.401421288 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.408959827 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.403309238 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.403766498 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.396203539 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.406656833 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.397696736 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.406869446 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.394855668 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.404779689 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.403225345 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.40338433 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.402680781 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.398602957 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.400514203 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.407142743 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.405097838 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.403959438 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.398278838 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.408607882 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.395711317 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.400121017 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.407790373 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.403961419 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.406500812 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.410369519 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.402248589 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.410373611 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.405568644 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.399756683 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.406785579 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.402998142 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.406462251 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.41034953 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.406226562 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.401419941 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.412724447 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.407540299 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.399873053 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.407877366 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.412810354 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.406578329 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.397746826 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.410651202 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.407316321 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.406376574 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.40649973 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.39917128 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.409386754 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.409890414 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.415787121 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.401254396 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.409417171 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.400765529 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.409176278 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.403281634 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.408759848 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.405091492 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.409326319 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.414730428 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.407946292 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.399121388 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.409234446 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.407590224 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.40667262 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.400622508 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.409295463 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.408943509 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.408117713 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.405819444 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.403789953 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.408923075 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.400748895 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.409248762 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.401680745 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.41682168 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.422896256 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.41130162 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.411390953 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.411835377 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.409801607 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.410543207 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.40244208 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.403319748 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.404831265 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.403379297 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.404365556 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.411637424 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.401747699 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.413540677 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.407995081 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.410519884 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.411110812 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.408920641 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.401868862 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.412875615 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.409411442 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.41072414 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.402295063 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.412227814 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.406080882 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.412240458 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.411151413 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.404568785 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.41645654 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.415028398 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.405800387 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.408454385 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.406471255 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.404767691 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.408606649 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.415042423 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.403489101 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.413644654 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.403662047 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.406924744 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.40450568 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.415116427 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.420270007 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.404916575 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.413103635 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.411697979 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.403526001 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.406028007 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.413281531 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.412294554 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.422645756 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.40525446 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.412959368 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.41113231 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.411617879 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.41277047 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.410645061 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.414105403 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.412467863 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.418455701 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.416100891 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.408301184 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.414715436 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.421666019 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.411058316 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.410404855 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.404197027 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.415621248 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.423394592 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.408162982 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.409324181 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.407820265 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.415029698 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.412132615 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.41444842 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.412822615 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.413318825 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.415877724 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.416553714 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.412932773 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.413965498 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.419071483 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.423480204 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.416156148 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.42374811 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.407885978 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.418702434 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.413998538 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.407878134 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.407703118 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.407934029 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.416200446 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.40436224 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.416555759 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.412409826 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.407930859 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.415082773 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.419447583 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.404771061 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.412706688 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.42009581 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.40368581 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.41502336 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.412698332 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.40379468 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.413491718 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.413536214 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.404069601 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.407612074 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.410904941 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.41710408 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.406149946 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.417338573 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.405900743 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.417964278 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.413606875 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.414063002 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.413577215 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.413186788 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.406116613 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.415669054 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.413583751 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.423861368 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.409842964 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.41529314 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.409430035 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.420277402 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.42569997 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.408734332 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.419413843 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.414483626 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.408919452 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.411822701 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.419216921 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.40833646 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.417185747 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.407375077 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.40994566 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.407271594 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.415902824 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.419683271 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.418090282 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.409389655 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.407738357 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.415971547 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.417823849 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.413567811 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.409714699 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.422244731 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.408299304 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.406620778 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.419215243 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.40949255 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.411017261 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.401241579 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.406640672 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.406914561 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.411532722 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.40888236 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.413991472 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.404498855 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.406784778 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.417795149 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.416086601 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.407428264 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.407762204 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.414124524 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.405093594 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.411616997 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.406635452 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.409528553 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.408646761 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.412485592 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.407825698 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.405773465 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.406826756 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.414679747 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.416675534 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.415727886 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.406978108 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.419581364 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.422513204 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.419831247 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.405394743 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.408335849 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.406767014 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.412747964 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.412016832 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.40443174 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.418709217 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.418149569 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.414340117 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.411674773 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.411959318 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.403327931 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.413454536 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.41313325 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.409850996 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.41936219 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.406773969 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.419135083 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.4101787 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.413320575 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.403979676 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.406022438 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.404779849 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.405103936 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.41439756 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.408306341 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.417396024 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.410986116 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.416699681 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.41325405 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.411828387 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.410464056 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.402261901 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.416241407 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.406669094 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.414964486 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.414200611 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.407753232 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.41459495 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.414576041 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.405848576 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.407431206 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.416967454 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.412507111 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.405453093 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.408034806 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.416653635 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.422883487 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.413366772 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406973782 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.411917834 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.41891332 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.413861884 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.415073263 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.406387591 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.4207733 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.425675655 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.40920804 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.411479044 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.419129132 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.425003394 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.413262794 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.414499417 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.411708376 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.411231438 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.417101842 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.416275779 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.419984218 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.42077146 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.409043205 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.419714155 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.406357684 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.408621411 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.415264192 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.425125681 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.415434808 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.407849687 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.422089942 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.427508102 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.412351498 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.427227236 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.420583841 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.416525369 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.420571233 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.407694661 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.41590322 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.412188778 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.419554586 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.414961122 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.416657228 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.416451543 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.405755007 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.417103347 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.423571502 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.427016046 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.414983275 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.408646113 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.411501294 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.417982618 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.415635422 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.415757849 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.414753444 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.418771985 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.418664492 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.410861909 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.42700205 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.428558949 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.421396136 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.415923877 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.417051604 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.417516945 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.42423865 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.413124283 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.42164419 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.417302571 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.420513506 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.416529172 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.426336159 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.420579167 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.412179019 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.415143194 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.412473724 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.422635327 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.425355945 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.436899763 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.420564772 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.42076615 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.42021261 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.419850943 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.411721388 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.421266614 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.420852312 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.413645835 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.413410478 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.422079286 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.42075008 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.419030436 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.414847052 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.420794153 seconds)
  done (took 839.674889949 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.419197325 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.419155853 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.422119003 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.420977007 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.41984556 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.419971695 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.418762941 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.419540102 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.422657496 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.421566585 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.420965543 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.42045551 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.421867862 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.420873204 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.419679395 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.421332675 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.418129324 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.422576089 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.420798384 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.421697101 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.424004853 seconds)
  done (took 31.129465664 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.420195814 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.421348608 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.421330144 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.422779062 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.420615368 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.420272917 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.422561407 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.421403025 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.421415639 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.419392508 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.42193198 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.423574397 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.421450065 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.422136228 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.421821827 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.421074191 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.424540305 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.420634866 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.420268862 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.42106119 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.420660614 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.420330248 seconds)
  done (took 32.564071547 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.421713505 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.420553615 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.4171787 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.426947485 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.420648221 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.422686414 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.421773126 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.424269932 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.424362364 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.415428418 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.417465519 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.41491298 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.417509346 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.424188634 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.418062377 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.426891021 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.420244805 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.421703375 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.41941008 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.420635012 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.42590059 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.433614937 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.419932519 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.413604016 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.424315239 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.421030297 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.420183919 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.420550908 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.413799026 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.422381833 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.423777846 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.414567786 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.421986422 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.424799083 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.416006544 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.423685662 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.42423831 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.422170705 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.424456472 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.422457744 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.428628792 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.420268572 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.425225928 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.433202846 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.420658478 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.415027886 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.425148457 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.421758988 seconds)
  done (took 69.534730787 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.422455409 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.421747758 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.421119306 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.421214847 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.423544921 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.423980455 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.420773433 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.42299427 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.42151919 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.420429782 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.422224509 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.422835963 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.42158123 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.421999647 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.422211226 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.422627928 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.421968521 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.42263184 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.424025547 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.421227601 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.422641954 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.422984602 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.422753639 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.424479225 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.420845946 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.423951209 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.423928158 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.423030732 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.422929147 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.423623893 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.419636016 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.423212199 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.424528378 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.425089123 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.425010364 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.425221567 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.425005643 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.422424534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.422544217 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.423511804 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.425056778 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.424884162 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.426374451 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.421161488 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.424702046 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.423905793 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.426153383 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.422725984 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.422940023 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.422464439 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.425140165 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.422675291 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.425077624 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.424699258 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.425575158 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.422516985 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.423058452 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.422573308 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.422934927 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.425642703 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.427134796 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.42354828 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.421878098 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.427542114 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.425834328 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.426799255 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.426086581 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.425697244 seconds)
  done (took 98.090853993 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.424559135 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.425828112 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.426402926 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.425062911 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.424323571 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.426190324 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.422233069 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.425968552 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.428016249 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.426242313 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.425164812 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.424480618 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.425096192 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.425300794 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.424964486 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.426515107 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.425317348 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.424322412 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.427124903 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.425554311 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.428220759 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.426939632 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.426435457 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.423228226 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.426863116 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.425386994 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.425237152 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.424429848 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.427504142 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.426519567 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.42658285 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.425103872 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.426612542 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.42700097 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.428679554 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.428136132 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.4271255 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.429216423 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.426157086 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.42871176 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.426772083 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.426558679 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.427097808 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.42768041 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.427234901 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.427257628 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.429781396 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.42691661 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.427450055 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.424423208 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.425134089 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.42680534 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.430419447 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.425018704 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.427660071 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.428849135 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.425387071 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.429424077 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.428765662 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.428212177 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.4263782 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.427758217 seconds)
  done (took 89.734723768 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.428260839 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.426008762 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.425835783 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.42883612 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.429229316 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.428113632 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.427631684 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.427328503 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.425727298 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.427377211 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.428634527 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.425890104 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.429873493 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.428452 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.429018126 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.427132468 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.427837732 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.429872632 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.429480305 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.429259793 seconds)
  done (took 29.849315896 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.428783025 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.4284957 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.424121862 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.426308139 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.429064889 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.426624872 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.426827516 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.427177062 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.429190535 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.426567959 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.428655445 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.429145633 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.422733624 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.4241884 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.428262344 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.427360282 seconds)
  done (took 24.127590156 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.428504454 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.425562326 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.429785528 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.428841602 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.429681523 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.432372384 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.427543418 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.432723539 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.428373055 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.427772798 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.432211244 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.429769319 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.429863977 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.427515485 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.430498771 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.431326845 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.42369286 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.430756094 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.430024117 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.430211684 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.429907102 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.431518969 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.430063908 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.433056695 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.429486499 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.42966476 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.428102832 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.434474889 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.431552523 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.428648187 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.431721486 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.433576886 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.429044484 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.432334543 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.430995543 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.429750898 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.432825949 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.432985753 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.429100132 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.431970681 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.430183391 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.432557748 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.426482617 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.433160748 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.434861213 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.429623766 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.423649727 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.42896542 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.431139187 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.429601845 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.432762922 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.43198131 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.428364107 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.434113773 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.427093094 seconds)
  done (took 79.956493752 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.433255412 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.430766177 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.431082399 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.425820902 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.425373755 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.427566229 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.428884346 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.431747161 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.429910839 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.432099816 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.428664176 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.425748413 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.429531176 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.42735362 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.434041854 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.427843138 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.428928889 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.424638324 seconds)
  done (took 27.018058798 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.427504016 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.430179279 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.431276753 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.431750027 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.428381884 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.431475646 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.427385365 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.429886803 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.432074495 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.433163572 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.434443563 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.428740759 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.434712733 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.432524545 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.432669908 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.434326869 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.43360866 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.427752561 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.437216826 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.430016583 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.431683259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.433561877 seconds)
  done (took 32.788470161 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.423372012 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.419886306 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.420539947 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.438245874 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.428098636 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.417574185 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.423095686 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.426881078 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.443367707 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.447653319 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.443869743 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.429688382 seconds)
  done (took 18.46240818 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429281172 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.431560968 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.436257826 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.437874667 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437740706 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432146534 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436624394 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.430357078 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433924471 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433639273 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435325225 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435772657 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435248338 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430866819 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433267516 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.434133191 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.429272857 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433721993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431384398 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432351062 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.427847067 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434121323 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.434841627 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428818901 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431341666 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433061805 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433769053 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431944588 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437091298 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433302239 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.430812957 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432075473 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435600298 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431131604 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430671978 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431725124 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.429880543 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430720228 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434198643 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.438971359 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.43555865 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436572384 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428776019 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433640883 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433014404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433794479 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431342063 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437717732 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.432002032 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434868683 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43342921 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4341965 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430142086 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431136972 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.432588509 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43045602 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.430371402 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.43779224 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.433011263 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.435656389 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431525952 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.432492798 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.433938856 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437351176 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.433950507 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432730083 seconds)
  done (took 95.894693376 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439317791 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.430904461 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.438717063 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.435895155 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434957399 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.432684826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436315956 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.436619727 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435809533 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.431264384 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437095777 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433693328 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.432871206 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.433712301 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428217133 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43710194 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.434448781 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.438282706 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437591615 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.433945459 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434145632 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435895443 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434861651 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43307856 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.437950244 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437965213 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433478177 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.439233111 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.432740899 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.434274546 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433113247 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.43356 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436758011 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.437555339 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43931823 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.43594787 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.434842276 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.431118446 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431353031 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.435701973 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.436323275 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.438546538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.433796977 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.435022514 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.435454807 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436330563 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.434139312 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433395756 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.437209338 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.43624521 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.434233957 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.433676272 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.437840375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.436972619 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.433817541 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.439131458 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.438159046 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.436199116 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.435722938 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436026373 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.436775403 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.437028824 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.436192614 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.435688584 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.43768154 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432076392 seconds)
  done (took 96.031797291 seconds)
done (took 1961.374088985 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.593592736 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.549238417 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.424913886 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.441172235 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.423945276 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.425808194 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.435952138 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.424597472 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.424612625 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.424732134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.42189406 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.618780535 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.459546866 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.421894366 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.423878606 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.520430448 seconds)
  done (took 28.731773664 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.451101334 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.435430842 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.542658829 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.432668675 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.454294346 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.616571223 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.486651772 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.434149285 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.599954494 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.45022859 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.422949143 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.453668222 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.429754884 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.420752702 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.447728639 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.610038384 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.676615416 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.425444337 seconds)
  done (took 31.083065059 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.855108233 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.446700692 seconds)
  done (took 5.598611954 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.446260885 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.428575235 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.429820125 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.425043541 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.418292897 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.43834858 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.430177554 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.439527077 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.425426685 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.551542573 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.431962777 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.44246064 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.440891495 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.430865702 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.4375197 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.474449563 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.587005207 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.441077321 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.439891372 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.431841646 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.429422352 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.519267659 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.471913274 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.438427557 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.5498641 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.426637373 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.431892761 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.435771972 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.543782282 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.44337903 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.431302378 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.429532616 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.429641268 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.37352288 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.952407343 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.425562013 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.468978589 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.435403055 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.437643887 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.574277957 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.431611402 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.433556679 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.422798763 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.954523711 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.533179448 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.545194818 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.434752666 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.432602961 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.431632509 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.490136734 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.429696038 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.43231749 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.489353753 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.216636068 seconds)
  done (took 90.614713181 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.477116162 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.42463444 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.605866491 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.449223442 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.433908229 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.422961296 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.425163177 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.692565417 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.448370546 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.423014758 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.740346674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.052970281 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.436484775 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.484302311 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.455608376 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.489076241 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.42096773 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.448228163 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.424153043 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.420994859 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.989312496 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426492349 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.427508757 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.514951647 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.459488967 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.953573603 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.423349158 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.428191642 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.442819971 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.419761259 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.000794338 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.425594038 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.472755193 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.421403033 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.706202829 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.802157184 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.758610367 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.429693433 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.464537722 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.428070322 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.454730156 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.945627938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.785046913 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.42663346 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.426609134 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.94102199 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.430741313 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.441108705 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.424420922 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.696475093 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.428252703 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.432947817 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.426929435 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.427355985 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.42307857 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.497032531 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.500471654 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.956195741 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.437847606 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.426914377 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439587223 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.427037693 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.427404748 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424357504 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.429160943 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.793916022 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.68610027 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.430876667 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.79184255 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.994293209 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.428757301 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084163634 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.427878034 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.448048305 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.472182637 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.427164285 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.426945965 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.954448121 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.452222542 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.421785305 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.767698885 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.430909886 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.724248476 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.446450312 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.426032935 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.018123265 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.432802579 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.470161021 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.423774465 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.42887643 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.44177083 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.433964386 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.712248003 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.480184202 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.426632808 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.42962865 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.426228706 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.42799744 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.444039366 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.438774138 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064763173 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.435383637 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.425901992 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.452739455 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.428216482 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.429306704 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.428058334 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.428372725 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.716813819 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.428296373 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.435836959 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432043694 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.427051073 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.439622696 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.52369575 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.437849877 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.727805422 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.425901604 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425941425 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.434607005 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.427935003 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.472233035 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.426332335 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.451823028 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.427286442 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.729306113 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.450706346 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.433104623 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.430107396 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.427818116 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.444445849 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.433468328 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.482425283 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.435128569 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.288877892 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.444649216 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.445352333 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.429344802 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.438055289 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.428421134 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.439513114 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.429112489 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731949211 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.716016343 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.688107373 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.429891609 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.432542317 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.272223942 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.435880822 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.609202452 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.448116435 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.427553867 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.711760846 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.664353751 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.436352996 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.430762451 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.436716948 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.708670099 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.434060425 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767774171 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.033145618 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.431092114 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.432505014 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.291365168 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.247063746 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.435803703 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.432393777 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.724654824 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.451490897 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.432614352 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.43136357 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.429643883 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.433515184 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.437086076 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.440164694 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.430297714 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.433678672 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.724522839 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.627105603 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.45127244 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.439812991 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.953515396 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.456422302 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.427536177 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.444209836 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.432104103 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.431511226 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.500290686 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.436527261 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.430234724 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.437027885 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.441036514 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.978150964 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.434061877 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.436606453 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.627075457 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.205999789 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.43339904 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.435596326 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.43328286 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.49059439 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.98720481 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.476154493 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.731547258 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.444133891 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.470502274 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.435076227 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.446988341 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.984410805 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.43624737 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.453303383 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.16311045 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.436818867 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.915911154 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.432430434 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.43255494 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.090497802 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.4345409 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.438974028 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.438563886 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.435770986 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.768843227 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.436739166 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.469145277 seconds)
  done (took 520.783641656 seconds)
done (took 678.106011321 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.433339626 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.435637376 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.415937264 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.436204713 seconds)
  done (took 11.032421871 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.453651243 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.44132901 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.452311258 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.438414172 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.448689767 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.439652857 seconds)
  done (took 9.983373953 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.436150492 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.440347225 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.437476134 seconds)
  done (took 8.623914566 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.641108834 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.452693532 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.774480336 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.44025515 seconds)
  done (took 9.618759516 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.451123313 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.450226886 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.450584365 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.446694031 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.454337132 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.450485473 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.453100836 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.449706129 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.452233093 seconds)
  done (took 14.36068391 seconds)
done (took 54.928200712 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.54949063 seconds)
    (2/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.47501799 seconds)
    (3/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.64011857 seconds)
    (4/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.554620251 seconds)
    (5/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.550162201 seconds)
    (6/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.282978142 seconds)
    (7/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.616328774 seconds)
    (8/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.614439292 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.505941804 seconds)
    (10/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.512291931 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.680705601 seconds)
    (12/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.445007019 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.474143604 seconds)
    (14/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.501127182 seconds)
    (15/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.280519696 seconds)
    (16/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.556223108 seconds)
    (17/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.418716702 seconds)
    (18/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.601259741 seconds)
    (19/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.620145074 seconds)
    (20/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.420632259 seconds)
    (21/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.620516068 seconds)
    (22/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.414416699 seconds)
    (23/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.277242221 seconds)
    (24/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.565373897 seconds)
    (25/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.644293833 seconds)
    (26/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.24043123 seconds)
    (27/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.498378086 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.439222698 seconds)
    (29/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.474076675 seconds)
    (30/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.286786264 seconds)
    (31/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.518420767 seconds)
    (32/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.591694928 seconds)
    (33/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.471455955 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.550214117 seconds)
    (35/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.223901716 seconds)
    (36/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.567599565 seconds)
    (37/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.39878264 seconds)
    (38/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.48042486 seconds)
    (39/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.623434268 seconds)
    (40/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.417310992 seconds)
    (41/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.423823682 seconds)
    (42/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.510260957 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.547543945 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.588661068 seconds)
    (45/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.521250796 seconds)
    (46/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.456340696 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.449415554 seconds)
    (48/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.119251763 seconds)
    (49/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.46382101 seconds)
    (50/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.455642627 seconds)
    (51/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.565208468 seconds)
    (52/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.511899355 seconds)
    (53/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.510983257 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.684793719 seconds)
    (55/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.479403665 seconds)
    (56/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.555267778 seconds)
    (57/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.512474301 seconds)
    (58/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.514768788 seconds)
    (59/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.515485717 seconds)
    (60/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.415791295 seconds)
    (61/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.644813641 seconds)
    (62/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.554600156 seconds)
    (63/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.422000708 seconds)
    (64/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.616503065 seconds)
    (65/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.783635504 seconds)
    (66/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.471701824 seconds)
    (67/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.470452317 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.572679311 seconds)
    (69/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.418348302 seconds)
    (70/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.716769102 seconds)
    (71/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.555032742 seconds)
    (72/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.579453704 seconds)
    (73/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.420608771 seconds)
    (74/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.458992456 seconds)
    (75/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.428692074 seconds)
    (76/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.545771822 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.629993928 seconds)
    (78/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.51046605 seconds)
    (79/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.475351498 seconds)
    (80/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.418514086 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.540990052 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.548476022 seconds)
    (83/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.422008251 seconds)
    (84/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.530119497 seconds)
    (85/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.436564161 seconds)
    (86/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.146219001 seconds)
    (87/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.24055233 seconds)
    (88/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.426856029 seconds)
    (89/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.68655345 seconds)
    (90/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.474368632 seconds)
    (91/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.466239504 seconds)
    (92/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.529758962 seconds)
    (93/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.582590079 seconds)
    (94/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.555472396 seconds)
    (95/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.421068031 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.533528283 seconds)
    (97/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.261475956 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.44646324 seconds)
    (99/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.5095268 seconds)
    (100/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.561842818 seconds)
    (101/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.589393376 seconds)
    (102/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.599783881 seconds)
    (103/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.362404381 seconds)
    (104/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.474645908 seconds)
    (105/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.697054279 seconds)
    (106/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.561206718 seconds)
    (107/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.482302543 seconds)
    (108/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.421339575 seconds)
    (109/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.424480431 seconds)
    (110/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.691785791 seconds)
    (111/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.425439201 seconds)
    (112/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.547158724 seconds)
    (113/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.519948498 seconds)
    (114/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.548570868 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.590597874 seconds)
    (116/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.269159106 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.474305988 seconds)
    (118/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.256903527 seconds)
    (119/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.480693927 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.419945045 seconds)
    (121/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.437705804 seconds)
    (122/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.421857533 seconds)
    (123/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.541632029 seconds)
    (124/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.421936579 seconds)
    (125/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.482324843 seconds)
    (126/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.470975403 seconds)
    (127/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.417798409 seconds)
    (128/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.495211084 seconds)
    (129/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.417325919 seconds)
    (130/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.596495252 seconds)
    (131/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.474805866 seconds)
    (132/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.526071958 seconds)
    (133/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.582803059 seconds)
    (134/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.399018447 seconds)
    (135/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.169215355 seconds)
    (136/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.414439246 seconds)
    (137/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.520658451 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.590020031 seconds)
    (139/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.59837447 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.687648289 seconds)
    (141/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.498326039 seconds)
    (142/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.410239412 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.650255426 seconds)
    (144/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.419077383 seconds)
    (145/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.561283819 seconds)
    (146/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.529616925 seconds)
    (147/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.518685728 seconds)
    (148/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.59127014 seconds)
    (149/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.669797394 seconds)
    (150/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.606787465 seconds)
    (151/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.406040245 seconds)
    (152/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.51761096 seconds)
    (153/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.491202772 seconds)
    (154/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.40196854 seconds)
    (155/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.402054986 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.577931606 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.4213989 seconds)
    (158/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.215869539 seconds)
    (159/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.261301471 seconds)
    (160/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.147815711 seconds)
    (161/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.127320367 seconds)
    (162/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.398281888 seconds)
    (163/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.404221863 seconds)
    (164/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.478431154 seconds)
    (165/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.441694628 seconds)
    (166/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.099019125 seconds)
    (167/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.389064871 seconds)
    (168/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.455095594 seconds)
    (169/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.175608026 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.516229431 seconds)
    (171/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.391231762 seconds)
    (172/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.524679461 seconds)
    (173/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.528414104 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.525485736 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.518125249 seconds)
    (176/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.498425316 seconds)
    (177/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.482247119 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.51441665 seconds)
    (179/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.524898914 seconds)
    (180/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.173626567 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.470461104 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.609745066 seconds)
    (183/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.387141392 seconds)
    (184/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.386430848 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.395101258 seconds)
    (186/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.417595548 seconds)
    (187/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.548354105 seconds)
    (188/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.519056712 seconds)
    (189/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.607575685 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.556423582 seconds)
    (191/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.406316623 seconds)
    (192/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.281273119 seconds)
  done (took 359.295361339 seconds)
done (took 360.603705534 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.430557196 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.493173133 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.408703794 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.410905271 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.411333695 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.40814165 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.430748995 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.402076283 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.418261608 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.414440595 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.403904081 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.409343758 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.41897677 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.410677383 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.433756684 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.402831235 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.398220298 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.412502003 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.414717965 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.418542803 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.40689312 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.403092578 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.431657653 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.40105029 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.411009041 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407432173 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.408489096 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.406554001 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.414099852 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.415715975 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.393485161 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.408923264 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.418575413 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.415137387 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.405742005 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.408657706 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.401994358 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.492091213 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.419792048 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.416651111 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.408612822 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.41985938 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.407344067 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.40563318 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.414811798 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.428814153 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.412255401 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.417315003 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.392396963 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.395784764 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.424865279 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.412925557 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.411984256 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.396394969 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.401112961 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.421730436 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.41425132 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.424630335 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.411759899 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.402003878 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.434795428 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.421965335 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.411600383 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405170939 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.41143514 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.419456102 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.4113229 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.413119515 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.402060532 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400200934 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.403775293 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.411286613 seconds)
done (took 111.096708407 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.519143632 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.395015524 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.553528278 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.402370423 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.564954202 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.519886265 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.402247928 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.401506508 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.405083457 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.201322934 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.408549734 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.402343872 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.391432974 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.401452917 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.517515868 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.401400966 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.40353825 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.095636056 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.403910164 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.528104138 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.391884011 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.403905983 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.403431509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.200799179 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.38965728 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.386172672 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.529635396 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.401147304 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.100866258 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.384346522 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.386463285 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.093628425 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.525289504 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.417376226 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.405103882 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.408852006 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.554746674 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.397750874 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.50866635 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.511752991 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.544710517 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.428728325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.381038581 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.385001902 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.393099696 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.396008145 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.391782719 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.419670662 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.380042548 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.391328521 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.083911893 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.401589442 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.389592561 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.389360195 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.390672388 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.419910638 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.389667626 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.391739934 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.5172616 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.393193363 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.506449654 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.18721028 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.18664633 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.392613238 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.378426568 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.390936718 seconds)
  done (took 112.316035362 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.452192431 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.462601173 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.493877719 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.384125689 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430626122 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.493740155 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.386354729 seconds)
  done (took 11.366182688 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.388238976 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.390246045 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.430305612 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.432147752 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.392366568 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.553600846 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.39109473 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.394124408 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.391045153 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.434438608 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.391166375 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.394076031 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.401948639 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.382688804 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429848447 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.390672219 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.500766578 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.386148614 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.39352546 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.535361922 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392431645 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.402212658 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.434746064 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.395372174 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.39542378 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.39058168 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.169048155 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393581191 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392714195 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.392602257 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.389950005 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.449042993 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.388348194 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.380129537 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390910135 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494405175 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.394754799 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392258762 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.389793231 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.38353574 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.391623712 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.390847676 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.393188229 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.397409913 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.389567217 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.405731218 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.38739301 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.385869622 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.390827011 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.390753146 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.428911649 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392343524 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.393128157 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.388197019 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.433348792 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.398178627 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.393931469 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.394329343 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.391130083 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.389700476 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.538702234 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.430420952 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.389092866 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430079889 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396726233 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.391005137 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.389767981 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.390175253 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473376177 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.393628889 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.429233741 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.392503455 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.562692838 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.405300357 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392095254 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.384918656 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.383948679 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394422431 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.38051917 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.386810587 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.393100087 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.382967057 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.387524022 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.393259651 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392308661 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.541173123 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48552245 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.390928863 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.394267041 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.385652248 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.391585763 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430790442 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.391306564 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.389002362 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43231835 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.499506792 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431916198 seconds)
  done (took 142.857733299 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.393028623 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.390278979 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379952522 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.406076195 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.381129991 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.379659287 seconds)
  done (took 9.586822737 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.37831161 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.390263489 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.387062866 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.387587014 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.385959106 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.390614059 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.385632099 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381673033 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.391507255 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.385294735 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.393094404 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.392911659 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.389495211 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.391757485 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.385712116 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386076871 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.390328775 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.388076135 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.389228829 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390852657 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.374514998 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388749119 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.392251519 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.380449292 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.395884648 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.383559862 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402964568 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.388967293 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.387968095 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.385843002 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.394031523 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.390652463 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.381234097 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.383498022 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.389551788 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.382526973 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392386333 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.394489382 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.393257662 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.394774267 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.393931082 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391528169 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.391920081 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.394206788 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.382442083 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.383934638 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.393815796 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.406754756 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.391738572 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.394271476 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392740829 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.391024366 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.391097814 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.392793524 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.381039264 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389021296 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.395332689 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.390202499 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.394081342 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.383059879 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.389724688 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.393632991 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.384139085 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393117126 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.38875834 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.39535077 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383919079 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.395298353 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.3968472 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390347414 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.396964421 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.391825752 seconds)
  done (took 102.325414354 seconds)
done (took 379.731605416 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.765045009 seconds)
  done (took 4.0226914 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.413106765 seconds)
  done (took 3.673669816 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.41542741 seconds)
  done (took 22.685256136 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.418405679 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.426071271 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.388011367 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.386085131 seconds)
  done (took 10.87958411 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.802374204 seconds)
  done (took 4.063689898 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.396188704 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.382493108 seconds)
  done (took 6.041089946 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.576824448 seconds)
  done (took 3.842385316 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.643244309 seconds)
  done (took 3.90574897 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.38695011 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.406367993 seconds)
  done (took 6.067912617 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.353389993 seconds)
  done (took 3.619804773 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.118367361 seconds)
  done (took 21.383163178 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.394496912 seconds)
  done (took 3.656601796 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.413189682 seconds)
  done (took 3.669008207 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.864081752 seconds)
  done (took 6.12389074 seconds)
done (took 104.891491316 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.368333011 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.37515999 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.372659528 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.374934596 seconds)
  done (took 10.750511668 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.448448755 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.448962174 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.453293019 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.442093464 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.442089724 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.450391626 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.40952699 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408955478 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439369464 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.43457393 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.451738447 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.441722553 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.447973181 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409214795 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.434817717 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.454161596 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.439823881 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.45797287 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.411799369 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.443331539 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.388043643 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.441944034 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.437773905 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384165745 seconds)
  done (took 35.683454998 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.872107953 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.444347761 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.532893029 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.427452237 seconds)
  done (took 7.536272593 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.488740105 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.489573183 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.509425277 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.543068538 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.590567165 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.504243595 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.410861261 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.408711907 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.393351529 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.489891686 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.576459779 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.488300072 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.705087977 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.387846237 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.706292055 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38649354 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385716044 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.492082681 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.539145423 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.571104126 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.386123813 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.487463532 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.493929445 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.488517344 seconds)
  done (took 37.183548584 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.395093632 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.402586445 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.390175328 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.401733735 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.388247427 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.389199053 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.389822766 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.393353941 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.389742528 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.389239687 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.388573582 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.402409019 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.388623844 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.389398355 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.396193975 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.39080232 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.392795184 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.39558876 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.396803788 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.385925446 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.389675827 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.397570506 seconds)
  done (took 31.904388591 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.373293713 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.373621713 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.723019468 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.627776456 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.373220714 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.372931625 seconds)
  done (took 14.10645985 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.446877388 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588833309 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.384546826 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.721552742 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.808966502 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.385164085 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.38140861 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.621066757 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.912001885 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.909252188 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.437778431 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.453522085 seconds)
  done (took 20.313211925 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.381745417 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.379819266 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.380451483 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.391194681 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.432600515 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389040025 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.38879133 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.376413405 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.440070584 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.44130824 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.388197783 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.434126493 seconds)
  done (took 22.085613329 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466387429 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384392355 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383473599 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413055839 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389065776 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386850573 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.407373224 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.113778169 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.393999309 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661015873 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398716124 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471103103 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63285903 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387750196 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390787779 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.343069464 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615422548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898036961 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382840462 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386798766 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438383924 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390114895 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403045288 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.599944705 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389248865 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385283737 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.649243733 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.384142445 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.672503656 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650865714 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.647869911 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394520829 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665421619 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02445827 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493571288 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593899095 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378794472 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38998 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.362337531 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.399089808 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404291865 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.394833727 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.644186263 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39449963 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384087979 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400678166 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128183592 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.396066499 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.387944723 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390765649 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648126995 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473146589 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.391821095 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388270182 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443426264 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391458944 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.392066662 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508823841 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029652332 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390755026 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40545806 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.392202378 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.388539219 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393424248 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058025752 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.398121054 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.398501194 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.39521967 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38736779 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389253674 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416702681 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389849075 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.412035587 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388154016 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251547172 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397335294 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393286901 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954994609 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.388466766 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.396346986 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.615754732 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388568908 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387717632 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.389142385 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392520158 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133607843 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399348349 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.36140884 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431522195 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.117416983 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5986042 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414780047 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41814266 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.610607004 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.360814684 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393403499 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.405166341 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397259943 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411040044 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12685432 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391022989 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.397702887 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.638065208 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.602378987 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396673394 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.358719836 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878072937 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395286755 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.437152088 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398624064 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.601639791 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.027669968 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660243635 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409500043 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430581977 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394572989 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.203064587 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412252249 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.403338925 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392476848 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671256321 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.208100214 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39678276 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466479291 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.397944818 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396654648 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393506151 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399004074 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392331447 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.577221828 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399604348 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.659641934 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.398268435 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392247313 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.402835694 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39877079 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.399041885 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614261468 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393244503 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688248784 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394843108 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397873817 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394768538 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.611575636 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.409189103 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.402010484 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.731131495 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396280946 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404272749 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660187896 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429179754 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505223306 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426381489 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.397345538 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647404249 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.403889818 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.399517681 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39791507 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400219465 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402132439 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.404066038 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394187089 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033402673 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374011306 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.400459734 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.396098644 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.409727049 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46793812 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40233916 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.604317379 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.39914352 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40099706 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.405779421 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.40993143 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619075005 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656759426 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.415272969 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576698121 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.880182586 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036974836 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417005702 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.401300667 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.396641069 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.393984897 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39927499 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397979826 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399534758 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606212578 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664708936 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406291471 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043747752 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402509933 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399099531 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.426939183 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660157438 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.412244676 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402036595 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.402921154 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416579123 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41083084 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.663498551 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623100425 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.412308859 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.402820581 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.962611815 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.40468258 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401089435 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400113662 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422848522 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398531945 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290663941 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.738086748 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396549075 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664747903 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404502864 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.438441382 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.399227053 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401093271 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405765506 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.410725991 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410694685 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.607396898 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402000644 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407074602 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038773291 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276305984 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986866314 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419423644 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.405079559 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406196604 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.137044718 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402230365 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400737836 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646858926 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13530674 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404132343 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882253475 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.401735405 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.172479241 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6687494 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630217695 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414592793 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.408258678 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683901336 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61303171 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427717289 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.411602048 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407944631 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.369474675 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970466115 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404153775 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583558981 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136417342 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403174242 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.420396938 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.470801325 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.41573451 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788293356 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405250807 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401520585 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404197186 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.420611636 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.303466528 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4092679 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405836946 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074997359 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406341424 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.894659316 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406064596 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.610647816 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668857033 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.648977633 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.409703209 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.417569563 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.652450854 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.664429545 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409841097 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.405716349 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999280301 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.309051276 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.413192054 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406455031 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206162049 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41468742 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695097936 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.423099402 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.405673135 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412391513 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403551459 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404893241 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.405277348 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411455156 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376156253 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913955813 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.418257213 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423467465 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419963562 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409147408 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.649850114 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.420335705 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047991968 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.635168625 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414499619 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440420219 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.413045069 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405444906 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.374028692 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406639495 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.405594367 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468832822 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630586816 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406049337 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.376066678 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403833033 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620437366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404236257 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407074247 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.633960731 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.409393039 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.418142991 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288543778 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438843345 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.40599807 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41226752 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399211506 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449233897 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482059179 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618168114 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.674473173 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675684677 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791760999 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410561773 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407823845 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.424667965 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488290894 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409431431 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.411407174 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.410230992 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.045576672 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245074292 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.058111948 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676237616 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409791393 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419256485 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406481649 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648604079 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403076984 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681040032 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407914332 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.400303534 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43330816 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407935481 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41333313 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624133327 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683380427 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409907052 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407191205 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424853375 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.404796009 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673240386 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.622367615 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918205752 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965506824 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406621773 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411528456 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150098602 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684782867 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407242253 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408415638 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406205186 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.429412437 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.430828803 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.422028056 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417698733 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635642764 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67244966 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061131746 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.675022558 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.597862886 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.410920596 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4232365 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.65414969 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.24132445 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.620722122 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05846147 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.160192088 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.66360571 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482566565 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61892177 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.411498343 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648945569 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.409343071 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.413995234 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410700118 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408106963 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.40684912 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.672732313 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062970153 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668283506 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.417502424 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.408737551 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442551295 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.621481429 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.632628075 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167053082 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631507726 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.681095036 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422225348 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411432953 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066713903 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679270582 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414694859 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.415186285 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63288143 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413458584 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.443688577 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.295274251 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.41066044 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984332621 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.621396682 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434666047 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420277141 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.169020954 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064819226 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.420186588 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922550561 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413819796 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414353099 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691720944 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.420367311 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.419145275 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696053331 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.41810772 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421054929 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624857356 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.057033452 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182361428 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.438099649 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420981149 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.421988053 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412188877 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485219026 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418027912 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413138395 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.799168112 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.418460099 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417407886 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424484437 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.427824797 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422587162 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.41463271 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415363089 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.42275457 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.404370434 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.398292547 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.427044861 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528199194 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990658252 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415384006 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.039969939 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.748075332 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663368441 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.42227968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.384971721 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.42054346 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417106153 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413172793 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417650189 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.404424835 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982364355 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.422264157 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.680876999 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42532175 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626431543 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626883928 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.423038803 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632457147 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431432863 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.436770779 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.383617098 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414132475 seconds)
  done (took 996.569832788 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.447905148 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.418358892 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.42706879 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.408601262 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.437610516 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.427099045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.433931103 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.486095178 seconds)
  done (took 20.774395189 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.405623545 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.421066981 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.405711176 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.418790298 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.412417388 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.887234377 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.410259116 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.417322837 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.431877039 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.406220736 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.426111699 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.084155098 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.440322603 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.417154598 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.399390884 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.422959317 seconds)
  done (took 33.100987715 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.130719264 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.438933604 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.969417997 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.459185449 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.415175969 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.416444879 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.549572486 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.429524058 seconds)
  done (took 26.103006537 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.419435908 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.421331581 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.422219817 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.422746933 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.423385911 seconds)
  done (took 8.398327637 seconds)
done (took 1265.770390138 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.423616325 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.425834438 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.426705835 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.425401988 seconds)
  done (took 6.986824772 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.385570683 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.387926511 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.387040369 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.397077905 seconds)
  done (took 9.851526276 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.084074717 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.007310175 seconds)
  done (took 5.382757523 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.956534712 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.964848528 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.953995196 seconds)
  done (took 7.168007653 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.695100878 seconds)
  done (took 2.98270607 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.407990357 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.415142121 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.143895739 seconds)
  done (took 8.254597802 seconds)
done (took 41.9144899 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.417163421 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.171733179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.564308132 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.418055531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.575512218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.565626978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.661515028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.41115284 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.420486917 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426825747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417800081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.568242165 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.644135383 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.172482691 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.647085013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.173281133 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.571914363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.40835037 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.411295283 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.422702332 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.661675799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.418497738 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.415890468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.414185568 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.57667801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.551737497 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.412012066 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.17563139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412667355 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.418858147 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.563597916 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.418575795 seconds)
  done (took 83.794537966 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413658119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.424733222 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.439697198 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.412947403 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.428951171 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.427408023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.412218884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.410370227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.410014286 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.432029875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.411167758 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.413320958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.430547455 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.413992822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.427028142 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.41468199 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.440470071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.414197156 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.426769721 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.428593749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.415571981 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.411843142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411191657 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.436658414 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.415703686 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.413479137 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.431663512 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.412605911 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.412861565 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.420545424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.419166837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.432773228 seconds)
  done (took 78.761872287 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414059957 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.419607809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.427560785 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.426385862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.41423863 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.441013157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.420916686 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.434448715 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.430684301 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423988969 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.413692205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.411873711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.428963173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.415694112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.41862091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.417160662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422424979 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421701943 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.420599252 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.417785183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.421088404 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.43205039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.432625739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.416274777 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.433792711 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.417418478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.415610998 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.420566841 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423765501 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.424547546 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.420316034 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.422783191 seconds)
  done (took 78.820886358 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.655426834 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430577172 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.434426088 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.426631746 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.437322478 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.433578568 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.42438138 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.661678824 seconds)
  done (took 15.204467581 seconds)
done (took 257.874392414 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.428400817 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.905534215 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.45694759 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.42925025 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.446740407 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.448861909 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.646633637 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.455642067 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.648448907 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.452599247 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.446029209 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.426383545 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.213207729 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.583466201 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.247945728 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.362002724 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.293102533 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.433932925 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.977934279 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.710176599 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.456671342 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.418227727 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.246936799 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.303613639 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.399770923 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.508455551 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.525081194 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.651011466 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.586713373 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.506948508 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.924284259 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.444186437 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.431920007 seconds)
  done (took 65.716444716 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.423023846 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.433575092 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.433219547 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.432415062 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.43454451 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.432377941 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.428059725 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.431933249 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.434665965 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.434184956 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.434346191 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.433215827 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.434462459 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.434762601 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.431889417 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.406159762 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.424757522 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.434470153 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.42497949 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.4066849 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.431207067 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.435388276 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.433971701 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.43618265 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.437103779 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.433210399 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.435787047 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.437271624 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.436900985 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.437638391 seconds)
  done (took 44.241441483 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.438842058 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.977758512 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.15207276 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.438987033 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.427592374 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.432712348 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.711398549 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.439774192 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.432468939 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.428703587 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.900561678 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.436427463 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.462894506 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.165272652 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.431259098 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.434656343 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.435763426 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.432765716 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.988757876 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.4396732 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.712232826 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.442471727 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.71270142 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.440679118 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.431076286 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430362927 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.436584948 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.22215089 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447076027 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.901994605 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.193551093 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.70953753 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.149549767 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.202209054 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.197908705 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.443778063 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.43829238 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.909922371 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.436922561 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.426598166 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.709528621 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.434080004 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.165622307 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.110384488 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.450364273 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.443270284 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.26798071 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.911119574 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.673014373 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439440379 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.202701526 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.437223426 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.440690223 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.431390144 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.671026179 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.437453647 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434886027 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.270843619 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.434497766 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.713258405 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.4421299 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.430430877 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.993532004 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434119443 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.983977819 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.438017338 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.439108493 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.435441794 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.170132091 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.439060913 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.128355769 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.449954216 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.442052058 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.90710268 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.989862038 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.312570739 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.435948284 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.99965473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.196059313 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.729167893 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.440853711 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.211383797 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.734531954 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.4379141 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.445923045 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.444013519 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.444424926 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.50723278 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.706176504 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.043709265 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.128371261 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.282432022 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.71818951 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446683018 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.435466463 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.270906514 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442028936 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.445411914 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.162343967 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127206015 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.450312274 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.442188409 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.117716283 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.457547813 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.71818022 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441870662 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.208356368 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.439584716 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.504514301 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443900276 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.443772443 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.438427917 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.716760733 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.440332108 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.4428307 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.113330131 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.938164387 seconds)
  done (took 199.106814139 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.430522136 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.429180415 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.427819587 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.428194829 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.426188475 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.436848861 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.427665271 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.428025506 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.434467451 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.428903918 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.429607607 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.438849847 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.437118408 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.433268532 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.428313379 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.436551571 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.431290975 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.447950518 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.430467744 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.429157413 seconds)
  done (took 45.948905257 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.447616718 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.988681508 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.953255945 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.451092576 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.442968907 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.438249419 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.491709357 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.451056575 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.445418684 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.736964757 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.60567882 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.449494671 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.447194571 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.44589355 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.94853258 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.418256553 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.732522374 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.990693944 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.452029366 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.991556135 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.41875144 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.446906471 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43641834 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.988407663 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.750435804 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.720376983 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.499479542 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.993011304 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.448693242 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.446354096 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.989966664 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.451503464 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.438306 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.979116695 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.449206416 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.461205053 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.450922494 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.495830377 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.500007699 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.738685405 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.002650936 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.7326115 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.460514514 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.601403295 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.452564313 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.416126124 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.007618493 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.45081667 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.419400399 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.453669828 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.454692113 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.965700373 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.445631957 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.965579587 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.449395881 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.449302578 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.995202663 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.97363184 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.958932289 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.609945413 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.444740643 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.720756215 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.450756756 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.004299888 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.455678944 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.450158913 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.452351548 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.609064844 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.99886747 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.72367117 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.743347057 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.742678032 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.453622304 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.510526218 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.45468318 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.738275626 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.508624448 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.840630148 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.743140775 seconds)
  done (took 130.055749617 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.708378334 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.557594451 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.81722968 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.007184462 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.932653137 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.57902926 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.557605274 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.693448557 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.447678598 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.552936566 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.076908369 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.536181399 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.180980161 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.508880604 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.5509321 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.565107506 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.835708014 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.407632249 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.080219256 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.059501677 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.459580889 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.553943821 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.974074205 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.640505644 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.441311203 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.057344542 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.385322997 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.947924415 seconds)
  done (took 54.431048438 seconds)
done (took 540.793466399 seconds)
SAVING RESULT...
DONE!
