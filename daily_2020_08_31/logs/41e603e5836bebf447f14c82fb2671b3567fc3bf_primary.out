cset: moving following pidspec: 11567
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.633862564 seconds)
loading group "shootout"... done (took 1.207305824 seconds)
loading group "string"... done (took 0.419659121 seconds)
loading group "linalg"... done (took 7.970334657 seconds)
loading group "parallel"... done (took 0.155295317 seconds)
loading group "find"... done (took 1.319006771 seconds)
loading group "tuple"... done (took 2.016508225 seconds)
loading group "union"... done (took 12.688262043 seconds)
loading group "dates"... done (took 1.35660914 seconds)
loading group "micro"... done (took 0.203329693 seconds)
loading group "simd"... done (took 4.408221729 seconds)
loading group "io"... done (took 1.020119412 seconds)
loading group "random"... done (took 8.784945292 seconds)
loading group "problem"... done (took 1.54056169 seconds)
loading group "array"... done (took 19.595241962 seconds)
loading group "misc"... done (took 1.511497128 seconds)
loading group "scalar"... done (took 40.069521174 seconds)
loading group "sort"... done (took 3.066907939 seconds)
loading group "sparse"... done (took 11.946783974 seconds)
loading group "collection"... done (took 17.370243418 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.537349847 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122164865 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126750018 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117532144 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146368923 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11930333 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123764224 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084883825 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.889042794 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142050262 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111590599 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.412329859 seconds)
done (took 5.26140688 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.165651186 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087704435 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078362917 seconds)
  done (took 1.287135683 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06309831 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132103761 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063767475 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064113493 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064422815 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064420801 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064556453 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064967694 seconds)
  done (took 1.640059492 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.0701812 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065378901 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06307365 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065356567 seconds)
  done (took 1.386947264 seconds)
done (took 5.683815685 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.236125009 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.098774653 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.280187454 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.392490329 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.457092678 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089752493 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.072130644 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.067821776 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.124790185 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325242783 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104848524 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.184459452 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089858539 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.177528549 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.97787598 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.118089193 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084924289 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.12403861 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091926092 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131657056 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.392652199 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.0762358 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.07148519 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068400775 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065276151 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.641347534 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660036391 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127097316 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082935013 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.098895139 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.114104545 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.637998988 seconds)
  done (took 10.421590168 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091232693 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.089132776 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066684134 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121807943 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091354057 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067346253 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072378909 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065396542 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086384187 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121976193 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087804759 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096359206 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063491941 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066485706 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072288403 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194958557 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08023453 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079882022 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066709391 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079593157 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104335182 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.076253667 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076055532 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075880767 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.126226511 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16726042 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099229222 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09561479 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063402432 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077533979 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.112337042 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123387487 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06827187 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063302467 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117592148 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092605261 seconds)
  done (took 4.474625104 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.963015687 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.091559989 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099741954 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.617879724 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06422915 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.152469677 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.241546252 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072512789 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.335732511 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.143981236 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.138326819 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.146638489 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.116167367 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068631289 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.20361328 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115007037 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.496390373 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066777861 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065911963 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065149973 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.067773109 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066581036 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062203766 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.082352921 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068867103 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093563611 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.08669229 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.169654382 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925112421 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.239356801 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067109518 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162202333 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.082330008 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063506788 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.067817018 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.369843986 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083725523 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.412373287 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.120928004 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065367775 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.166264302 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064283444 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.116016099 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064556033 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116988821 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078186309 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.066693555 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.066315963 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.065990015 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069576555 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.076424162 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101167801 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065263285 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062731053 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161312602 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062331348 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06420738 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065315895 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.147387049 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064042237 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.140403377 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063653834 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068175975 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.100289752 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067461042 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.091965114 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.099212879 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.331679553 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.032490918 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065546743 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.07035124 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076182622 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063978857 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068785397 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064191795 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065564738 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062987504 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065790482 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070999921 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.067332146 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065976893 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106335673 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064207451 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067387825 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064227985 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069195394 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096650348 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063050932 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.474150686 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094775695 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063753771 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074307359 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102542621 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064998972 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069474646 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06494296 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064465087 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063822048 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.175451475 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067683845 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093487246 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.067978323 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110565339 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.026539776 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.066263596 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064749873 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.069582108 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069038148 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068040131 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.064903729 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067375764 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.066044378 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063969483 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.110893362 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066355699 seconds)
  done (took 21.516766465 seconds)
done (took 38.499060975 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254366726 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079942118 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080239265 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079464107 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078062192 seconds)
  done (took 1.791509954 seconds)
done (took 2.999648213 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.106456945 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062609137 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.097516943 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.096707264 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06166207 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.061782634 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.095388917 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.061951756 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.095092385 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096339166 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.098773865 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.098073029 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.061909259 seconds)
  done (took 2.31498209 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067562466 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079305608 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080266615 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060052427 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.069292151 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079590427 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060037 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078291079 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.089557132 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083895395 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07972664 seconds)
  done (took 2.034607105 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067271368 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.079368591 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080285928 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059529311 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07085449 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.079060124 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059704218 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.078472608 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081788119 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07934233 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078931485 seconds)
  done (took 2.010791298 seconds)
done (took 7.558115145 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065043476 seconds)
  done (took 1.246600107 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.519803644 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.525847369 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066530929 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084493358 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190679477 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096149673 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.218071873 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070380635 seconds)
  done (took 8.135233192 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.097200203 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.066075179 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.067073669 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.067605804 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067367538 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06575317 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067134113 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066038965 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068004192 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067336517 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068689407 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067347793 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06716421 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067624967 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068186868 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067149931 seconds)
  done (took 2.38955162 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095950046 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096956637 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071848581 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07299624 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.070949891 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070398136 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072781847 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07215391 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069000471 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070619455 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072936778 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.071023513 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069924857 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06067274 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070592104 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071642882 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067897497 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070765527 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071360344 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072354169 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072331454 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06215862 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07083675 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071980015 seconds)
  done (took 3.048109727 seconds)
done (took 16.016780685 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111945579 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0751881 seconds)
  done (took 1.378796069 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066971453 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067750717 seconds)
  done (took 1.343100693 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.073205291 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058710271 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.079646095 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069435361 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059138798 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059254268 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.077590546 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059416304 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059179279 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.060418915 seconds)
  done (took 1.864751784 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061937997 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068324929 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066264008 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068047944 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066278035 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061938521 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064483445 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062021538 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069836763 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06105246 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066441139 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081770444 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065218029 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083148017 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065312404 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066040914 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067954189 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064778072 seconds)
  done (took 2.421841011 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059538647 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059996462 seconds)
  done (took 1.33965654 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063371267 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060541479 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062810286 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063446222 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060221035 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059697855 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060117733 seconds)
  done (took 1.641246402 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40274181 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117643468 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.337090026 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067859685 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.077615807 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250767947 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062460044 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067563409 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067213992 seconds)
  done (took 2.706710121 seconds)
done (took 13.914791228 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078357814 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.081390024 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086729502 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.41311162 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091077491 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065773574 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111835345 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.176561762 seconds)
done (took 2.337402331 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220548919 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.307393001 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.904874338 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065956837 seconds)
  done (took 3.4985135 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332072504 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.076128143 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07589647 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064594134 seconds)
  done (took 1.778932086 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06255157 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06869185 seconds)
  done (took 1.356476781 seconds)
done (took 8.084981574 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062052248 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061259706 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.061884377 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.090401722 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062793975 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062288289 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06269752 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0621202 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062100516 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062355801 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062493908 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.062018579 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.062552272 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062430197 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062825138 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063320389 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06249563 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062505048 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063015375 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062641153 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062857981 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061917116 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062656818 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062610468 seconds)
  done (took 2.780960124 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077909187 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06402923 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065494389 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065043268 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064928721 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065126099 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06470329 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063279349 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064772485 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06282711 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064969283 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065283834 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062927839 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065388608 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063008813 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065439311 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.066193022 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064656414 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064273601 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06677115 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066241627 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064719371 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066844423 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066123988 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066768679 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065699158 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063804714 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063521366 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064891524 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065167956 seconds)
  done (took 3.196026356 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.063882992 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057894652 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.059044796 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.067163677 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058065773 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058751297 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.058282032 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.058002902 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058327479 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.05922879 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058424118 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.058010427 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058986942 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.058178207 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057948418 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059624321 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062790043 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077045145 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058622315 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059213653 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063187809 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059182069 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059023288 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059215692 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.060144818 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058734904 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058815149 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059641671 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.059089098 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.059644575 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058963471 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063116796 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073573678 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059095999 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.0685948 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063912647 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059261784 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.062601217 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058999673 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.058623218 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.058930551 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.05905069 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.058723215 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057617174 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066916179 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057997394 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05890007 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059082972 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058302032 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057867247 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058045043 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059747045 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.063036648 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059377296 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057727435 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059693674 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057753407 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058762869 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057853126 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.05751056 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057554253 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.061039538 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060835727 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.059530923 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075392206 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059630502 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067109541 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057717547 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.058733908 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061326525 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058578161 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073411807 seconds)
  done (took 5.599259877 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085132198 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085318888 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062906818 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063087501 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058758351 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059464602 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06589652 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058919113 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06274156 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077640694 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058845128 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062418316 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06287587 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.062677973 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058858079 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062654201 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066570762 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058870978 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05835427 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062252598 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058477861 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065633466 seconds)
  done (took 2.668498447 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137511393 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064726875 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101631295 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074440855 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066533057 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074030905 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063907177 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063996014 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064385849 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06573274 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065843837 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065560223 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067851296 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0659151 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065747193 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065913957 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065223025 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065868823 seconds)
  done (took 2.544601818 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075130607 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064220569 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086721862 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065405686 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065026509 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064950221 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068483229 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068471317 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063407635 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063894077 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.06862136 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063408465 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063527053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065039894 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064234608 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065266701 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06447006 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065291362 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069344087 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069259807 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069019558 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06972873 seconds)
  done (took 2.722810106 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073374202 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063000489 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076438584 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064605628 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058351302 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058669333 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064670116 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064334444 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064972537 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063060051 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063038606 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.05938851 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064682588 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062970393 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064781355 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062916326 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062792056 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.063627023 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062453096 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059540078 seconds)
  done (took 2.519279941 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084596801 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061380664 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061458852 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080337101 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061270576 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060891201 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079794033 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06108888 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061201739 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082062073 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061062828 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061690958 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079417724 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080125915 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.061084661 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079806699 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079882993 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080471298 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062541052 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062603381 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084480857 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062589252 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081337566 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062714867 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062828374 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.062619577 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062426745 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081563065 seconds)
  done (took 3.207091579 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.062010477 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060744136 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061285311 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.061859341 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.061275335 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.061734596 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062331924 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061301129 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061403224 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061724948 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.061480038 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.061259187 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061564418 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.061227233 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061371042 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.061296618 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061648701 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062061084 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061295319 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061217454 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060886491 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061516249 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06226267 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062614293 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062067358 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.06084218 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06147673 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061627408 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061142402 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061414095 seconds)
  done (took 3.096527454 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.071865952 seconds)
    (2/2) benchmarking "in"...
    done (took 0.06993819 seconds)
  done (took 1.388861846 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060906504 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07426217 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.058280098 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068679262 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068301436 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062373943 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06887737 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067579859 seconds)
  done (took 1.772229561 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066009876 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.087934508 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.060689058 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060871716 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063916057 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.117524664 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074892705 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.070470567 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072881308 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.062300565 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.06069913 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072045458 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.062523037 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071969266 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06188667 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067906503 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066426398 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070922212 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071616972 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058377897 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071300652 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060613677 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058409358 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060761871 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059752057 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065913504 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074464411 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071450514 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067704641 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057626553 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.077808564 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058943266 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059589597 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067836192 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063367935 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058511918 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093906656 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059227093 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064315939 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058598219 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07044369 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078188308 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072124755 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.075566317 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.060807196 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06089053 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058743092 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060937993 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.062513993 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.06770611 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058670492 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065587678 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057817318 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060250831 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068771698 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059210486 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064973398 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067295149 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071325169 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068677105 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070463516 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073130657 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067178163 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067619746 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.05936191 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077145887 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060751931 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071154198 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072417149 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060570475 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071858084 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.05861018 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057513872 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.058368119 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090481715 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060193115 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059402027 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058332804 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.05848459 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059720717 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067426783 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064217716 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065203556 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062063228 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074018624 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067289057 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058290935 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066184317 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076039637 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061765437 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058574035 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074559473 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061735585 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.05805694 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07535325 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067840884 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.060495716 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.059723993 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062026087 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072379568 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059863325 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057245352 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066378343 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060083363 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061130006 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063028413 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06577354 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057936062 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067276107 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063417851 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059618081 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057012634 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061893149 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059321026 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057062012 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066556267 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057701901 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071269032 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063490311 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070624974 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071245798 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067135679 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072407304 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057501743 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056227825 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.074782731 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.196370442 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061990225 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076956114 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059411991 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.06948983 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.05918623 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060668701 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068762625 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058477033 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061785754 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059116285 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064673133 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060407058 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060867213 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.063309795 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067185119 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072067993 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.060934898 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067720139 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059406044 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073797072 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068489444 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063068032 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063707137 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060095253 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070673164 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064955538 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067818321 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058702694 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059867276 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059546916 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069188988 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067953744 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060637372 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067218141 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063174078 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060001069 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059785788 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060738437 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062200832 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063116253 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059519379 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067077592 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067388798 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073328216 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068006105 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066983703 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058055663 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058362687 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.063651897 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.05849317 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062761833 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067698201 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072924666 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069893128 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078498665 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058976429 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067737278 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060408456 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07502112 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071307406 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059865972 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064071062 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057747654 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06033435 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06787626 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069643154 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.072640225 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07262613 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063047361 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.063149294 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058729338 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072949327 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.05931282 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06670021 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.067862459 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063845235 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058725345 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061017358 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06760044 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.063289319 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059094787 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.073424838 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067169725 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059556427 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072096036 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058737199 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.069595418 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058654075 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.062001489 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063594866 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06092226 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067994594 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073278955 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057744519 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.059240838 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073444186 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061048826 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061131315 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066143523 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07266508 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062590203 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065529794 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068428896 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06769478 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062653321 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067797239 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059514956 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066965953 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061308168 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069466065 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058644976 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07517868 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.057037227 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.072027954 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058845045 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.068839929 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058897161 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067228232 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059543026 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.074785363 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060231303 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058424483 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.069056679 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056509632 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.066088328 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057482829 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.061595566 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.063405843 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.066572941 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.059319071 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.200579552 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062004426 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068286169 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.064426636 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067798305 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.068285375 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063770854 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059019006 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067156204 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070225814 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067007065 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.061093226 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.060719151 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059536669 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068248642 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060625035 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.059883969 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066454657 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063427019 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064161542 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060940633 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.061634593 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061027476 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067647034 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068383494 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07635061 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067015862 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066403859 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068023324 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058909209 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074183861 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059531796 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065744153 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.05814247 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.06598347 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068263147 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059145678 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077834791 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060750778 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066872353 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07230602 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068937156 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063403128 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077353364 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.062501874 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066730026 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066387875 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.063427297 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064964285 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060751885 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066019624 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067676406 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068992531 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059700432 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065433937 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06743132 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060767486 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067999686 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.060590435 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06654504 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061374499 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057719014 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.063162331 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069859041 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063706879 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063861964 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059304507 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057954617 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059126069 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066741067 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062960382 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066661824 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073215498 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057664431 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059623378 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058743242 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062033478 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075803111 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067958409 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066176269 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063175009 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.060767471 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060327808 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.06078532 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059329302 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063022028 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058306064 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059266923 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069288798 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.060564061 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06342405 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059347964 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060097834 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067947287 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.064144882 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060050064 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065343058 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.05899816 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063578706 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.058466257 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060581277 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063360488 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.058243193 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06234024 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.068774305 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.07454393 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064873864 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066605726 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.05957255 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06614023 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072919924 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.066645971 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059729871 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067148639 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057999096 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.076204655 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067339459 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066857302 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068139103 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.059734015 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074391483 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.062845807 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068256562 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073106267 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059528478 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065299732 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.057348702 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.072594005 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.062591038 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.057484745 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.065191458 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064931694 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.063339781 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.208693346 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061310781 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068195785 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066430047 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063647163 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062438806 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061495545 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068318246 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075385234 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.060952204 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06455051 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066605277 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.06747572 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063712415 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071469591 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068038002 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06095445 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061187931 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063072307 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060292007 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070813657 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060191928 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063526149 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063662849 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059083035 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065580984 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07471237 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068953092 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068838778 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058964111 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058549409 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075761253 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062264034 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063494035 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066742342 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067982216 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07120222 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068355998 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075367517 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059990757 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064441467 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071443971 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060449011 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.059202009 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062646933 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061291199 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067486482 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068833568 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066050177 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06120565 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065489948 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071323926 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060293033 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063305758 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064352143 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.05988993 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069071048 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066741508 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066975435 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060476615 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058871122 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06236736 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067163542 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065946421 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067301888 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060062009 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066465468 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072977175 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065731268 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062885387 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058636088 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06259616 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068159214 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064595517 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.058799501 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063975287 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062414501 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06725465 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068026276 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063421196 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059085618 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075306412 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067218951 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067770925 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061189001 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061139094 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059515998 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.05900507 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069817706 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.05897448 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060806246 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063507615 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061169155 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.076028931 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066552012 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074162756 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060190289 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.063178331 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058612118 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068208381 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063229293 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059835967 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068863415 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058570322 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073284232 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.070472393 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.064638129 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058430319 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063961295 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.066224505 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074713935 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067553238 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066600194 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.061951517 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067847506 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060414715 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.068684162 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.0583189 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057060958 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067415478 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066616934 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.070072176 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0576972 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067382878 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.059592601 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065160967 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065190759 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059794319 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.059298904 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.059107312 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066614869 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.198613657 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069352928 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065194576 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076217267 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.061176557 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07024402 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068307351 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.070084579 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072402708 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071306381 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067579795 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.060516361 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066263967 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067449927 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060693566 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063865225 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.063639628 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080602136 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061658265 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06074922 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073820059 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066969894 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.05953909 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066948177 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063675438 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.069213178 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.060846909 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069283391 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063558044 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061115167 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063216867 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063876292 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059073324 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058871209 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059618225 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06908527 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.064067616 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059688254 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077859072 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061004898 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067095274 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069767446 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065583538 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.061140517 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057801546 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.059952941 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071049719 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.07443269 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.062265091 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067194218 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060692886 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067665467 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.05827665 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067090814 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06671066 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084526441 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059168671 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059307395 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073166362 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.073678626 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063284609 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.068004248 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067803758 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060709459 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082750154 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067565945 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060572964 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069500442 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061402339 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.05824721 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058165087 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.060601499 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070533734 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059045628 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061728154 seconds)
  done (took 40.566502587 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097647915 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060106542 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059325517 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059243189 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070857225 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060292842 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058830937 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059761956 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060123753 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061993546 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058628938 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058947941 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070558134 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073119636 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069674969 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063060262 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058726652 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060043157 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058703073 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060112065 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069337485 seconds)
  done (took 2.706258131 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066148987 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074552325 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070796675 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075906343 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067458517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063480992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070593225 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064063677 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0715163 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068613621 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071139113 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063649695 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068902972 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069337699 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069037327 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063459359 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071051299 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067060724 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065270551 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071492027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064637754 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07219307 seconds)
  done (took 2.84443305 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.0606055 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.059373964 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067240526 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058298073 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058601105 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062588226 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058231192 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062673288 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.062581468 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.062945974 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067283004 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059420148 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058157863 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.064136615 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058546377 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059775711 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10340364 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060997219 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060640552 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059655529 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064019708 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068645488 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059602917 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059866163 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066755547 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06338992 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060182013 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.062909192 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060922418 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06416282 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060915083 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059295881 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068413902 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067754187 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064059906 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064022437 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061460972 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060779864 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059729539 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059522634 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067659572 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.06183539 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060063355 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061377218 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068559066 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059823423 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059495852 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068305565 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.05969263 seconds)
  done (took 4.424694926 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070851188 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108972429 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065127708 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091044193 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.073356081 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066032451 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064358044 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09064183 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059810759 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06067792 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073229227 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.073520349 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062223744 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063230546 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065838403 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061487953 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062411593 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06102206 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065041279 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061533775 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065396094 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066015989 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072048332 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072437766 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062874893 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060606082 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061142719 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063363248 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07364351 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066464295 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063977417 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064338292 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072994383 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066464124 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061813137 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061372308 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074868593 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06248485 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061476774 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060003166 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061269762 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06358514 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065969597 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073871329 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062065994 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066321701 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061978417 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059295802 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07254123 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062041125 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066509145 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073854237 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063174542 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062142736 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063357517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073084346 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062146978 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06056404 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062010034 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072542578 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060161344 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06265196 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073126561 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061475833 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065641084 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073808739 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066424362 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06302278 seconds)
  done (took 6.028703998 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069842835 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090850865 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07090744 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071065707 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069996905 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070123696 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070001919 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07000752 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.06945923 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070358172 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07010134 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108582307 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065560998 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074869432 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069637969 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06924122 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069545393 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069746703 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070770342 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0713371 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070762856 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070287138 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069806861 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070409105 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072374851 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065561865 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069231411 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069375678 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070327839 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069697797 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072503111 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069424344 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069833067 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070383728 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07319901 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069341838 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059825243 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069804099 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069549738 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06970115 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065788142 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070581153 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069576087 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06565715 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070514946 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069862943 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070511049 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07280645 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077876573 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070367273 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07000079 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07048846 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06949691 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070290003 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070366717 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.077703876 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070495521 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070356971 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069775456 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070443463 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07040215 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077757308 seconds)
  done (took 5.788069381 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074858865 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067088335 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078688581 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058601002 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058798087 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068680595 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059049283 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058647782 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069528197 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066843562 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068362662 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06838983 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070680204 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068680623 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068073456 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070555982 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068479954 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068075875 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066919424 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068419457 seconds)
  done (took 2.717051576 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071638326 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.076431018 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065341353 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068807921 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064364472 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068671103 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06345506 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064993253 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065277616 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064741166 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070019142 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072286517 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065383303 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068768721 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06985393 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068646246 seconds)
  done (took 2.444760587 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06592036 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.068088767 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.067080551 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061148491 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063899789 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059878523 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060422561 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058881167 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059147358 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073358523 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060040502 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071301374 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060131134 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059387357 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059289046 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06567387 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059259229 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060121793 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060020484 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.064782496 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066239483 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061151697 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063983441 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060064642 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06518947 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066899499 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061518413 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063800673 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060250312 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060514709 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065611883 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066391219 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059740354 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060179729 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058727771 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059866539 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059805247 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060432147 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065318517 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060336475 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058387806 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064756401 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.05986219 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061631297 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.05968449 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060466788 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059217755 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065339253 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060136171 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064899632 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059891678 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.061750947 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060639631 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.06707336 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062513467 seconds)
  done (took 4.786470441 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074301794 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064331551 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058519455 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05873667 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064174068 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065107993 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064065785 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064321971 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064432291 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059076077 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064477961 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063243396 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06438656 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063755188 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064755046 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064190677 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05854343 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063834074 seconds)
  done (took 2.514298304 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07001595 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064024787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068333748 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064069887 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06375499 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064165609 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060404372 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.060275055 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059507484 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063420433 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063588051 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064349958 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059869436 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063336684 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063574652 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064211868 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063360217 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059154206 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063701697 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059474431 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063252521 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059461441 seconds)
  done (took 2.747964988 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.087355114 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08314567 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.122133915 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.077140948 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085786487 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.069497906 seconds)
  done (took 1.888529882 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089323431 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101156133 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064236477 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063673405 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074049911 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067156068 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067371682 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066923835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073683705 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071837298 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067592805 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073323877 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073632358 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069393116 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073283596 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076453085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067479188 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068697524 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064960054 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078143088 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067920559 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074459969 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067224985 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066832825 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0675789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069363429 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076178823 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071523954 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066994327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07328262 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076289522 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06742845 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073550936 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07520493 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063801878 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073631555 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067403197 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076248726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073563606 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069370078 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063933187 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073932653 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073633069 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069760667 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077094184 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068163049 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069871352 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067604682 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067897714 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079474905 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074311164 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069760971 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0737778 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07696858 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076896014 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079389588 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072051001 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069265654 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073943294 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071718088 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070201752 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074148109 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069382555 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071889051 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076464667 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069183643 seconds)
  done (took 6.118874301 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096718087 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064275891 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067394889 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07268539 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069895325 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067507289 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067435369 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067537583 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06724483 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064390201 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102265469 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067514006 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069348816 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069509153 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067916142 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067445226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067439021 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070055803 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064363779 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079174057 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06783652 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069505283 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069496003 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069741899 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071894024 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076467802 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067433956 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067600092 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067439035 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067312036 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069312012 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066987799 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069224159 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064139957 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069113863 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067576761 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067266824 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069153968 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067343715 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073761927 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069281979 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076839061 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067613848 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067339829 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071820144 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06729705 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067364803 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064501594 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067493803 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064231989 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072191405 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072209277 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07191277 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069515397 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068069476 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067495807 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067462738 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067148505 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067369693 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076452549 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06956206 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067429126 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079114277 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067110056 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066988308 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069369114 seconds)
  done (took 6.002798982 seconds)
done (took 124.305269696 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205893523 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.182784935 seconds)
  done (took 1.742656947 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071920442 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095041684 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.073078719 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131883958 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06954719 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103251813 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102256133 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073558052 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069191014 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069365334 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068653964 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071509591 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134059807 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06946655 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069121768 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071592689 seconds)
  done (took 2.716006032 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103965434 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.1791644 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109521264 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066946901 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103857459 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074591738 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066677382 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077387542 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070769716 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070560312 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074184992 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072470974 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070379293 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071901777 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070397144 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073939383 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069697495 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07371021 seconds)
  done (took 2.876668365 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091978061 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084141032 seconds)
  done (took 1.558349939 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15357219 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103068309 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142394015 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.318445869 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.131834658 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.126939315 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.129743568 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125271234 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108453154 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121723368 seconds)
  done (took 2.837864019 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100854738 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173441502 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.304031153 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11720708 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073350689 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099361888 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119275992 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079361869 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077870094 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077283668 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077277819 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074287401 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095529487 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073812188 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07367485 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077335582 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098660046 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07328313 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07303051 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073662082 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09867248 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067857398 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073738378 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073444628 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075227102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075681771 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06965973 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067631594 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073847883 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072750777 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075671024 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096641219 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075189641 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.099230579 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071657816 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100830117 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07229526 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07180378 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073029535 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071404267 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075369674 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074778328 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076441175 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074500227 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068929736 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072329374 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069211558 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067280712 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07683101 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068379317 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076766776 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075740397 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.09926278 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068692275 seconds)
  done (took 6.018363813 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105605321 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104270587 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068700231 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111097263 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101708368 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067911422 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101482855 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096660044 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10604913 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067410766 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066822716 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066831496 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075003338 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077948251 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.112947585 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104950129 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069338784 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067447964 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104756269 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105093469 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066147831 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097556995 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096890101 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104021134 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066150716 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067523156 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065795002 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067841336 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073160696 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073643074 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066106629 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074583683 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.079191081 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073574189 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065561709 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066040704 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066072849 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074298209 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075389687 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074674574 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073042115 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065868887 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066103679 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066594548 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067261873 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065294364 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073790569 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07490368 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07317408 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066493799 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067001866 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065993958 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066713272 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073982743 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072831137 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074683506 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07427598 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065590758 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065805451 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068125471 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074866151 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074759581 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074392391 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067324851 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07486755 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065577414 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075613162 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079222711 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065680762 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.066390275 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066160965 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066161547 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066567919 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073065849 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072567666 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066515985 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066485476 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066005277 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075486901 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07299673 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065866221 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072315537 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065495258 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066082291 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066300258 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065905433 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072143986 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074210945 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066633852 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065802845 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065852018 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065930125 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06502324 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072439951 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073829467 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074311078 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073465484 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066164912 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073092747 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072966113 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066143642 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072920827 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065565206 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065900903 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065456814 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072200014 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071590238 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.073657786 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065168 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064710121 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072143712 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.208349115 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068253441 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074760157 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076841415 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074411029 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066604636 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077311131 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067291949 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075718717 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067248844 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076152265 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069493797 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07416194 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06667567 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065903952 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066936329 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073976557 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067405049 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067177987 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067601503 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066863714 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074317319 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077485571 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067536977 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074084257 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073673785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.06727785 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073533893 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066928097 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07518502 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066845304 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067214789 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066273872 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07671218 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066530796 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067168041 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066426863 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076283325 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066677096 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07523817 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073760879 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066454608 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076997923 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076553801 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0732145 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07583189 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067034604 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066112641 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065948454 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06646937 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072891702 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074006734 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067279297 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066288306 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072917564 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075350965 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065811072 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073000467 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073427326 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.073459901 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066440012 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066575732 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076774006 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075360122 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07335717 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073593857 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073897073 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066210288 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072992096 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073293317 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065848437 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078817944 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066572457 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077349515 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073787268 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073267142 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07396566 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075400911 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075323042 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075608784 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077783884 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065908745 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065993296 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073363696 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065885774 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066056428 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073254404 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066849716 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066676714 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078117135 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066799392 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075933431 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065698998 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074161955 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065758586 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066844465 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077952853 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065919573 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066231242 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072730719 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065801322 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072652738 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074798699 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072381505 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065886261 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065940488 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072581666 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.072491785 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06489192 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064741536 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065275515 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07106685 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07073557 seconds)
  done (took 17.763864221 seconds)
done (took 36.907117745 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202083925 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155737598 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.188970197 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.110996506 seconds)
  done (took 2.143015334 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.094237405 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.095401521 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076019025 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062950719 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.081093577 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062950742 seconds)
  done (took 1.897877252 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.271198587 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.189926193 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.17186932 seconds)
  done (took 2.05243727 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216187995 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199521573 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.469986276 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.290852593 seconds)
  done (took 2.696855763 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.130439908 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078253496 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061185878 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072029068 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.108637268 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.140274847 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.087160878 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11079823 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073644621 seconds)
  done (took 2.342888157 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.129014631 seconds)
done (took 12.712558703 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.100066165 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.197676281 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118029514 seconds)
    (4/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.218313859 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06972828 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07460825 seconds)
    (7/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.211297408 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.26306056 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066947821 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094571047 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.065908801 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118146396 seconds)
    (13/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.076969306 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.220927689 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.08164833 seconds)
    (16/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.126396647 seconds)
    (17/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.231535598 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074096759 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.147614194 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071710171 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.167779011 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.084122091 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.143309792 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167753456 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071571633 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.295054887 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.158534945 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.19599271 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162518879 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154989556 seconds)
    (31/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.162726794 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.215023292 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.093068321 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07482466 seconds)
    (35/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.181101544 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076071917 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083476745 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.180707179 seconds)
    (39/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074437713 seconds)
    (40/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.070823662 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.08717326 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.062447892 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168680051 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07068644 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070243678 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061391149 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064284676 seconds)
    (48/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.197006001 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.076080318 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.199659304 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.079072623 seconds)
    (52/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142101421 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.146944847 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070203825 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.212877832 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169661308 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170086986 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06397152 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.205137221 seconds)
    (60/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.084360406 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 0.064109688 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074940335 seconds)
    (63/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074434142 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063581623 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139533055 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062975629 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072055245 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202208954 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124050747 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061210765 seconds)
    (71/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.06160256 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.062157574 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074343514 seconds)
    (74/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070985467 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061182867 seconds)
    (76/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.060772367 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101117882 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070368083 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.183093203 seconds)
    (80/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.138611388 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.073014647 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.084745647 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.332735263 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189095709 seconds)
    (85/309) benchmarking ("sort", BigInt, false)...
    done (took 0.250749907 seconds)
    (86/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.065314306 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064233373 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.179515748 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06343923 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.076813713 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11524198 seconds)
    (92/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.072897769 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202171823 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077155981 seconds)
    (95/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140342231 seconds)
    (96/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.19665792 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063870367 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070391715 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070589676 seconds)
    (100/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071999115 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063160094 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122383397 seconds)
    (103/309) benchmarking ("sort", Int8, false)...
    done (took 0.168670998 seconds)
    (104/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.150070875 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074723206 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065095041 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.145900542 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063831187 seconds)
    (109/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.067610835 seconds)
    (110/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.075478352 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130164263 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148655585 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153116018 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121892979 seconds)
    (115/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.252908319 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077155735 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073266768 seconds)
    (118/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.064683175 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066565157 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.173464477 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080354016 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125655859 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064113695 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07349798 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062886844 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.063536272 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073138185 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062271903 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07614309 seconds)
    (130/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068064512 seconds)
    (131/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074868943 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086707651 seconds)
    (133/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.20068077 seconds)
    (134/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065817377 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072856319 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.091146694 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077480799 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.163340543 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.161753565 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.079002081 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072351968 seconds)
    (142/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.167976428 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067983118 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071506045 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.079742299 seconds)
    (146/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.064870637 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069086091 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063240457 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06345658 seconds)
    (150/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064574483 seconds)
    (151/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072001727 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063140849 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064097894 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.159255246 seconds)
    (155/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073871125 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090948897 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065182224 seconds)
    (158/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.210366118 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087224603 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070686157 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066171436 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08141401 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064969016 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073647802 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147915034 seconds)
    (166/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067391791 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074233175 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064934316 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 0.132949153 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.085303635 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088506716 seconds)
    (172/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.063449541 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.063224292 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149008341 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067500733 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062897905 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062522563 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.063944605 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064020879 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.06482695 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.063549607 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.207426381 seconds)
    (183/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067382741 seconds)
    (184/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.06232297 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063935344 seconds)
    (186/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070207911 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117937753 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086101294 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062303458 seconds)
    (190/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.062667956 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069954354 seconds)
    (192/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.221791245 seconds)
    (193/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.065583751 seconds)
    (194/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.065375806 seconds)
    (195/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.096543473 seconds)
    (196/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069327116 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.073007108 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087733055 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.077416021 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078702349 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.143993495 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06617802 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123370981 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063685814 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.076072797 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070903346 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07109593 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.202568025 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065439554 seconds)
    (210/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065183528 seconds)
    (211/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.06487794 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071632891 seconds)
    (213/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.065370602 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.074850252 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063622399 seconds)
    (216/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064538839 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075462474 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076040531 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.064424524 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064516073 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087035451 seconds)
    (222/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124174793 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143080464 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066059079 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064953833 seconds)
    (226/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.081486198 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143022412 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066061973 seconds)
    (229/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.062278019 seconds)
    (230/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.064943687 seconds)
    (231/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.145628674 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183663427 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087016002 seconds)
    (234/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064870218 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073044683 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089695173 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078404504 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074890097 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130590955 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076834151 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063766427 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06363005 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064838223 seconds)
    (244/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064116531 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.221318116 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092065128 seconds)
    (247/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.140156902 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088032454 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.070867593 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.15964241 seconds)
    (251/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.140174296 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062994994 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.062169414 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06248521 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063055043 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083220254 seconds)
    (257/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064891797 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064356346 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.06393059 seconds)
    (260/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0703024 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.063177486 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.062452738 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.065875717 seconds)
    (264/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064114699 seconds)
    (265/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.063964078 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.070154705 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064011565 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071344013 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063738989 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070783779 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063702118 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064445225 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.133829095 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062644435 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108038828 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062545022 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.133118451 seconds)
    (278/309) benchmarking ("sort", Float32, false)...
    done (took 0.132770712 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070933941 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.14042544 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063959332 seconds)
    (282/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.148335344 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090898806 seconds)
    (284/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06199726 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.06358731 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062580673 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.063005566 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073988376 seconds)
    (289/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.07745363 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146027974 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078279859 seconds)
    (292/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065536073 seconds)
    (293/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090830986 seconds)
    (294/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064067576 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.065242598 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.0639609 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064060739 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071460334 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062533798 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063128374 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11856619 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06391403 seconds)
    (303/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063640408 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062725883 seconds)
    (305/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063729123 seconds)
    (306/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.063743112 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06456039 seconds)
    (308/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063521395 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.061411834 seconds)
  done (took 32.467230414 seconds)
done (took 33.905942224 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084652815 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087960663 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07099144 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083805155 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07869494 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093734584 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071501489 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076292639 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078217188 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077582451 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.076993904 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070137803 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072310729 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072843732 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072871168 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088654187 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080534673 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073364097 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073322671 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064339977 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073652244 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063819144 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062550578 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070014273 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075149274 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070330261 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072562712 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.0727593 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063574571 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063705107 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067921828 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072040869 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063235941 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075615559 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071575639 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07223628 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076282437 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076371114 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062355567 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063550515 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073952022 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063694415 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071836601 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070412603 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068580231 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070448427 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072159144 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075481351 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086423839 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067656207 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074245954 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074497199 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074900858 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069083575 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068419985 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071803611 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069629472 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08609965 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.071926798 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067555784 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073599293 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072477015 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070110954 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071413447 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071834779 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074696262 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075348387 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070396648 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074190719 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07087024 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062994323 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071482185 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06800311 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063280826 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075106913 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077131454 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062277483 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067757322 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071342825 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072067311 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063101351 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067185589 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062236738 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067841068 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067224439 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069767372 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068924271 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07082116 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062315248 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072540786 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070760167 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071170931 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062043112 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075572114 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062747689 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069531157 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063628897 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063409138 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062765125 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068365471 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062964861 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067096809 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071204439 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061770092 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068059251 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076295137 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062933005 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071030311 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062216433 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06255593 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.073792451 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074185908 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063283752 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067957957 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062652844 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068764284 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.0625186 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06296418 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063138691 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.063338888 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067879956 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.063338034 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067200279 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068927035 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075881901 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062947519 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068061411 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067229526 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063345236 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069546434 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063389868 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062935562 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061881281 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076072055 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066440599 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062621763 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067717501 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06623331 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070389061 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061153505 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071262576 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.06794557 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.206882672 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071154942 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063249812 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075489984 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068124391 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068050055 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062896609 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063540693 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062858193 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063491611 seconds)
done (took 12.331947329 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065191096 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.092607205 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072054402 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079929499 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075848087 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064979028 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067694459 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080821738 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066968834 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08332521 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086668515 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084749277 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090682428 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062556229 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063897913 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064465786 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062465277 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.071215577 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078742652 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085517865 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.092986996 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06349365 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072103496 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.079754139 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074973427 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080473368 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06562177 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064359059 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066692708 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081098729 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088031012 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.06350424 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064627143 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.07787236 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077634085 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.070206311 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065169229 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068117521 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064777161 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063809262 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066090365 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.07764137 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067478444 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.067578406 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064583414 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064483938 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063958962 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.06979091 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077295382 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067620726 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072135354 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075492465 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06590968 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063839574 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061922147 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067903202 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063838917 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064372681 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064385855 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063597876 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.064222682 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.066233558 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064942975 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064686174 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067568998 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.06677109 seconds)
  done (took 6.182250568 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082345562 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092541619 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080986611 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080994074 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063835393 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065200195 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064649543 seconds)
  done (took 2.070012551 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.065184717 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077380089 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080675272 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081070322 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073441776 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082307244 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.064534772 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094709817 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063867844 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077001208 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109833433 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082107816 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068302787 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07591045 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064373165 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071978463 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064693321 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072514827 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07253582 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080148981 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068464065 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.092519986 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077963888 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.064768081 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.08477861 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068579798 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063461145 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064644039 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065482644 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065952855 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065598852 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103534626 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068591279 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076100845 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065312168 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063627293 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070291175 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067548011 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067297986 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073058701 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069981188 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065677042 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062974661 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065991752 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066939052 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068759098 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.063071199 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066251482 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065273095 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076430653 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063742022 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068130371 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067918795 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069245894 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071079015 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069158842 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072907914 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065415428 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07633907 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072300317 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0655689 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073037618 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106848832 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069995036 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.07258652 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068601035 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068782758 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069926375 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065253029 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.06654666 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065672232 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.07235667 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.06345058 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066732642 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067501452 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066408794 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068890153 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081303411 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081007727 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076932002 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066289292 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065871315 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068219332 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08123247 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069556181 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065270955 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067770153 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063744425 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068748795 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066016123 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070604024 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065474611 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.07301149 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066474204 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067933286 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072638702 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064109326 seconds)
  done (took 8.451664888 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066935743 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065637314 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067269091 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065583034 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065239107 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06544581 seconds)
  done (took 1.967440748 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088271148 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065191334 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079351846 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.065679067 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.100550375 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072012328 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.071929071 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073548242 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078094416 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078038265 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071712059 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074524027 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071359777 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066388062 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071113903 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065523473 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071698712 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067997519 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077091727 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066640798 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077656443 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066621173 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066821982 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.076731491 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067466698 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065793286 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.0655427 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077429552 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077011164 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073738066 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066380829 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067547645 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.072690257 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.076353938 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.071759115 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072456901 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064981476 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070546743 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066655049 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068114346 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073959128 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067057238 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.06728946 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070307367 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073440067 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072811713 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.069858241 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068596989 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071523883 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070057767 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069936648 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065605643 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067696406 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070320127 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072527696 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073522812 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07006899 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071517873 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.066336189 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073225167 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064573839 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067383866 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072955827 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067706644 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068165447 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07051172 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072776877 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066864884 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066552881 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064933289 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070220869 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064603291 seconds)
  done (took 6.647795257 seconds)
done (took 26.843345663 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.956608717 seconds)
  done (took 2.473691357 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.564673431 seconds)
  done (took 2.121267962 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.722510028 seconds)
  done (took 8.272484328 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.295488487 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.338401272 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.725383654 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130703788 seconds)
  done (took 3.073348016 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.713517117 seconds)
  done (took 2.274857555 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233738485 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223442109 seconds)
  done (took 2.032059487 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.345998688 seconds)
  done (took 1.897678302 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.100720254 seconds)
  done (took 2.653117536 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.224224427 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15718177 seconds)
  done (took 1.942425148 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.471496008 seconds)
  done (took 2.025981672 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.352702575 seconds)
  done (took 5.911947588 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231207009 seconds)
  done (took 1.832892744 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233400101 seconds)
  done (took 1.796374391 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.719309665 seconds)
  done (took 3.277656534 seconds)
done (took 43.1491177 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080626697 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083857918 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083374977 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078378379 seconds)
  done (took 1.862471743 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.07179798 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06758733 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071214623 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071158975 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069080965 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070935857 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070613717 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067200498 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069170768 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067118816 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065710569 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067005522 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070241939 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067281476 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069925846 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071203412 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067027238 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066864812 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070232194 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.066603797 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070173018 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066973647 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065410575 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066941713 seconds)
  done (took 3.205086703 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075542254 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070399269 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073507839 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069093585 seconds)
  done (took 1.856769368 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072938236 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082111837 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083641769 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090908832 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07258202 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073133846 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080462759 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081311405 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062999449 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084468108 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065586877 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064300109 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064409418 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084688047 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080650322 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060868307 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062074578 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073331371 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072603402 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074633351 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066168 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063527674 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.072600831 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072328774 seconds)
  done (took 3.32830404 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077180251 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063804629 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076589151 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089808482 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092798098 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063436117 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077402265 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092054692 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.124797146 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063435217 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069443573 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063561075 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104793967 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063512134 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078254552 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105980195 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108060926 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066814271 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096044354 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063922838 seconds)
  done (took 3.214930375 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075604997 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067442198 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.068506979 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063935967 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075641713 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071053818 seconds)
  done (took 1.998094852 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066145705 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065744783 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066337209 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065223677 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069890734 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065384377 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064057928 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066190008 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065654552 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06536138 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064562392 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064321192 seconds)
  done (took 2.357999241 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.160077019 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067142434 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068874058 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063806818 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069795292 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064801058 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078444124 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069381962 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.081952547 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064577419 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064638743 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066793398 seconds)
  done (took 2.490287038 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093650141 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093284947 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13066484 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11012432 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090124294 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.088367494 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.144561566 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.133286524 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109514894 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067438313 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081144143 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102441742 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098848299 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137405541 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107817502 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070283964 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.098162359 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079314899 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.102522588 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109712732 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107101475 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109620691 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086636539 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100133885 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.101964026 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110809776 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.06916254 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.06797037 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.134561808 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.095862522 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.08743159 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09056559 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108316821 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.066683547 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083619655 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.09720143 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082660329 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100661662 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085653191 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093960138 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074734621 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.123256476 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099258779 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104435188 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119596513 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091117949 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103468172 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098115096 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081016641 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.113004207 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093682223 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089820726 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074241928 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.15259197 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089416587 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.102403315 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10916026 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079335564 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085772767 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.091282004 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.119444926 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.24408508 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108641467 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102709015 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086744137 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090418803 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.131626089 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083894592 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101175157 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128729649 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.088383677 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074832973 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090040106 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068343636 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09610119 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100281727 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094288749 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108954421 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075138486 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120230792 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.111187742 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070560655 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.111140339 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091460429 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153983776 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096967861 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099457972 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090368403 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.144137789 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083896562 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078780849 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093142904 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132767203 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089253135 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094771207 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125216307 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088759319 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081084536 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073053825 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083314525 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093099464 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108282505 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096605432 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088180388 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080436081 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088285501 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073173435 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.078996205 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.095185409 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087223908 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117042395 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102245975 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113316435 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.07599827 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106794991 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091136855 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.132809937 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.115990915 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083550772 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108703905 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132295806 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.105361943 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081873895 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098009103 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110589859 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101631274 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.236362485 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136496005 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115029916 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087444681 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089517903 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091662889 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.104998251 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152081095 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08969141 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.106378934 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136610701 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.104744913 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092495745 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081778186 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.090582137 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108058005 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.138467159 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.09062901 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.068539203 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09443134 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12922273 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075132012 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095056444 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087681283 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083323068 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08079613 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.06610141 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098266192 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134359192 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111527755 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100978036 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094847694 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070784279 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099061884 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096495724 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149155018 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115154963 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097790912 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.091282052 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099657447 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078338614 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.130927534 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.129907074 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09406355 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091362695 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126716992 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089284654 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.101983337 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109373626 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106416877 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.096340486 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.139010038 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119349052 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.11586603 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102993025 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123584197 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07936297 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106118747 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.227107631 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105912473 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076876108 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103603937 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077559982 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.110622696 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078843848 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100538296 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067681358 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.074766871 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.104850738 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087837225 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08513848 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.13183115 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.122686724 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080354502 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0932693 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100198434 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097653197 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106411715 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.08550071 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092425639 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07732151 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.079464549 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090420455 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095267733 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103854922 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076950013 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073030355 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140923165 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103106811 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091348363 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090693237 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.115000267 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082530562 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081454944 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105611207 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.13672634 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.117292042 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078939494 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089797459 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.067331987 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.08250129 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.073560128 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110047987 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072593939 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112994355 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066788852 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.130312492 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086930293 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100736332 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092471902 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123475983 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084430189 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12491103 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087151789 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108959306 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093963698 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089125007 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.105931019 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.090849749 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098522933 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104509576 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085084581 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088113056 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119777485 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106041205 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113726202 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106219517 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.133252779 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.261984961 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.0739142 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105504339 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092221753 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.154604596 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100687858 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084293462 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088403239 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105852525 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082690931 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14208219 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085977749 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.080505665 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114986462 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.091089528 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088913408 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075364783 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102700704 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086099726 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110669623 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.096353858 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.09161329 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105466297 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107365497 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084534687 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085781791 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124121737 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.127997243 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101358538 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08647454 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086960957 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099187487 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093838153 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110390183 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080323515 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074460043 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066157472 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069889002 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.118392318 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104358544 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093921933 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093448656 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101983617 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069757165 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086983501 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090893825 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.082972949 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088885909 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.111960429 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.103159755 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.130408601 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102056418 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093075589 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.13969987 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.129006492 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090158502 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093357865 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096636329 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.072839662 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150299936 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11485041 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07584607 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.082347529 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075645997 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08363471 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068126063 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103314378 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102400764 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073819074 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.252236402 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095567777 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.119639001 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092837724 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076857819 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08044742 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07321751 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074055211 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.098893627 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076705413 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076831167 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127220268 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10443499 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106190855 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080186053 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074871447 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13380563 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067293835 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133626707 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08295629 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109458382 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.07902557 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078635091 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090295521 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103545548 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107178887 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114924085 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069471162 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103135056 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.151337467 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075299401 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074042264 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073287051 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112515858 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087836274 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150636146 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092476665 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089527852 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076207371 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124637252 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103135819 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.08150561 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124416905 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078929394 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070271352 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081206222 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108110052 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.069825405 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.072878147 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111849847 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.623570243 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090448273 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075717301 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083198747 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126003113 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081507167 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108947665 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117684057 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107051675 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.180216048 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072050335 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092308892 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.105204974 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.097229424 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089749672 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077743985 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.085461184 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086560803 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077666116 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.258488438 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080709932 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.087638689 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.07991783 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104776341 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.131702868 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086842364 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099497184 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088343879 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087112207 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099161481 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108000582 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.102444919 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.085843853 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08771134 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.105509449 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081556393 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078538903 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100102115 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076088819 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075936912 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114204505 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084398914 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091957057 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10466793 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.084146948 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110403125 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.119569338 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113327544 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097093373 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077236499 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084695661 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086922976 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072582744 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078551046 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074329621 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.068641208 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108209348 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085988863 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080890337 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100731539 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.106488305 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100298394 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.107881162 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09005472 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095774017 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.100777588 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.127755272 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152945809 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099069282 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.118963436 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.133559729 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076459313 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.075143587 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079109132 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.133254488 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.078937371 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091030936 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.229815739 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07630735 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08019875 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092809988 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109016379 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080686194 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079641869 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097713902 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110497352 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082581376 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079923614 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091289574 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.257098061 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.132418199 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.090506628 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076415396 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111004723 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102681945 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124628345 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.072336646 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081637151 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.129556176 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087086279 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.101437031 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078179889 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117893412 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.134310065 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073783232 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089848306 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071737466 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087533068 seconds)
  done (took 50.276560767 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.153053211 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.147128522 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080031328 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.095243378 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.191148562 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.208471834 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117668816 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092426648 seconds)
  done (took 2.782967359 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065792686 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081077813 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100325387 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081553934 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064207166 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06610528 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.197210938 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080708498 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064441843 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104455761 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074252167 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066159649 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.36297392 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063968951 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065273396 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.072505111 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065222506 seconds)
  done (took 3.356390223 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.357856325 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.594436954 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.323651226 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072861208 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.984848903 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086126744 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.279642017 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134638696 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.079561967 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.561033778 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.366066482 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132697507 seconds)
  done (took 18.662784679 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073533053 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073388356 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076587886 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076070735 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072460537 seconds)
  done (took 2.05998418 seconds)
done (took 99.051672049 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079527574 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.168480647 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066250452 seconds)
  done (took 1.955756453 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081914057 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079514904 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079385808 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.078313497 seconds)
  done (took 2.012296349 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072690614 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073368968 seconds)
  done (took 1.832831534 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.242317035 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.162340222 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089615157 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079941656 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078398 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077635383 seconds)
  done (took 1.932439033 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.069743218 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.069893762 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070242539 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070301422 seconds)
  done (took 1.965793976 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065893245 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064719182 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067278244 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070235843 seconds)
  done (took 1.955047292 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081326358 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.081543787 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076279275 seconds)
  done (took 1.925726843 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100775567 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096372202 seconds)
  done (took 1.885003554 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077870432 seconds)
  done (took 1.766120619 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.08657657 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.09222257 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.150367369 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109342577 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147690417 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.130962862 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075572224 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077075941 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071945831 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070675514 seconds)
  done (took 2.7012354 seconds)
done (took 22.191612408 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076706657 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369228422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35735293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084278084 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67048648 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355551238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993063689 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088532886 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096675827 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065766196 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082277253 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646563566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983329497 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323223725 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.968819109 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327820341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646869451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066222637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065606392 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066286315 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975080961 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065504905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065743239 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066782521 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647521189 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370662115 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067125361 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327410369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066540633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068596028 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35370146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06715675 seconds)
  done (took 16.140187408 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068226057 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119756918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070386042 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081792882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068549629 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067337956 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068878849 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066660663 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106828925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066169099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083060321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065704053 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070609412 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067595948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086386522 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067334945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067947649 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067626446 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066858409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067738515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084504181 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066017659 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067892656 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070057493 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067580485 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07999646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067644346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066613141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066830272 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069094599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070036927 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068577096 seconds)
  done (took 4.040283087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120953987 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125245406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071917376 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.106945952 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117645479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068163215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14953122 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09204487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116176706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069499397 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085053103 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06778342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102076055 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068075695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086828355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066702286 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068747012 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067748477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067134955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067590204 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085388435 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066897435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067099784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067613546 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068061367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081597274 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068305873 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066798409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067060596 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068954395 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071161938 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068163018 seconds)
  done (took 4.335401541 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.06734271 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.06937134 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078010572 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079292537 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066658149 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069062813 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070693451 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06728991 seconds)
  done (took 2.272634335 seconds)
done (took 28.489186493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076804601 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066908755 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070387103 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085967176 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073452923 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071288217 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064687219 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073870928 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07122459 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069243659 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.070516931 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064839486 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067689869 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063251303 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.06977036 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065132124 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.072999054 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069390724 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069494984 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.070669685 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067018652 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069723986 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073136927 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069272386 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069196318 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.069851333 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073798881 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069485151 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.065018119 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067538555 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.066523637 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075320693 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071331532 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071721336 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065086116 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065039293 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068950648 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066715973 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071630112 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074428147 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066168096 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073551478 seconds)
  done (took 4.610118579 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083092177 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087625764 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08037683 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080673406 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099451339 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080438107 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086488033 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078469541 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075771011 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084207961 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071716519 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079388429 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077425386 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0706379 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076237778 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.072416786 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.077734228 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.071645827 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076595853 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.076707051 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085286223 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070514711 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077750134 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078220553 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.071687352 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.077982215 seconds)
  done (took 3.763688092 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070624538 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085252822 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089818983 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145964579 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110266235 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080372904 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079865169 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095551615 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097785814 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066044045 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070326422 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093415364 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092969908 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072603864 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106306687 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083759236 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.077273748 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067801078 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073284893 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099135583 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087611984 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084624799 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097859103 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084843839 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065016402 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074223331 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072146399 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.0802174 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074544484 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078496191 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072342132 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071209268 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068227043 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077467455 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069843393 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06363069 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086599364 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0778457 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079034824 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105006441 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074847717 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066882681 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094464587 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130245583 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065924913 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069080894 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070199726 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08010718 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068391281 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096489577 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082485099 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067465333 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.086191327 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06850183 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069061738 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083065012 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067470775 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067437692 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077838909 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071729192 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086624699 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072220162 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088020293 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067745073 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078528143 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06668281 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066854883 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064368939 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099204872 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072395933 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115452634 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066904904 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064568707 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077731063 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07690301 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071868006 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065760474 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084536479 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07748631 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069226117 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077034161 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069974008 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070731799 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102111175 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066659728 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06542389 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06575575 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070261629 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070132093 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068265785 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081457993 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067038457 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071386287 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.08254705 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067178141 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068421186 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.0687862 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066989657 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065192457 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078072178 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069922115 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066939257 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077282099 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06634321 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068640659 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079808649 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072765998 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064736204 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.06686193 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070517894 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069339462 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071617924 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070975945 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069599208 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073438367 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074918991 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073332631 seconds)
  done (took 10.785463883 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161057643 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151481922 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068105021 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14508434 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07598081 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070873872 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145019038 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.087813846 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06865012 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069091822 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.066241125 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.09419287 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.09045079 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.10512486 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.073246085 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068946227 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090521327 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098366563 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.1498819 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14646179 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091794737 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.074957371 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070958357 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069716828 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069823122 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074905341 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083802715 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074048968 seconds)
  done (took 4.393350434 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075127211 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.092167053 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070255884 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077439153 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086400297 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067548833 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070168196 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069275384 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08054203 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.075618411 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066588306 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070426438 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070245042 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070866676 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068596491 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074863779 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075233932 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067511194 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070555385 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070725483 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075607177 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.0918287 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070977128 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066236834 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068368766 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065852074 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074205879 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.076960613 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06596122 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.083774525 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065339868 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072101564 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081887594 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067179678 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065608528 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066484645 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066013741 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066215169 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066101348 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064012192 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063770689 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07080874 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064828402 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073092275 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079466711 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073025908 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067621629 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068410604 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068736948 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.063181108 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068745979 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068883334 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068970344 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07359023 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069616984 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.06875676 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067105259 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090865267 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071256878 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066252412 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0654965 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067921439 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069173476 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.076788613 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083785677 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069222456 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066801769 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068061942 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073545131 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081523863 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067457851 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072739701 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064766349 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067888566 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070097439 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070473037 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069321628 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06622998 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067734667 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067397618 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067692526 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065695062 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065467069 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068076122 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064187147 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064394498 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066590075 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067455053 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074037436 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065112735 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069135492 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067215964 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065122523 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07066168 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071810272 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069295395 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081690236 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078214173 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067145024 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06547216 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081916648 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070201145 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067346613 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074429247 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071752136 seconds)
  done (took 9.1903598 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088061687 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067495293 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085420127 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090783434 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076410801 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.071561372 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077016598 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066960266 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081982689 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065210328 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074829442 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064769752 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07676101 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074911201 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067235306 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076192365 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068429466 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085709751 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081596111 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065732863 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075186625 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077983583 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080337495 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082622494 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.0828777 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083674833 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077779159 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069462875 seconds)
  done (took 3.8996547 seconds)
done (took 38.341389207 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.777621579 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.957943361 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.779902256 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.955834563 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.003609347 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.938677197 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.822619732 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.777138678 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.060613341 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.812981246 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.090532657 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.135136852 seconds)
done (took 66.890935888 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.795833038 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.937396025 seconds)
    (2/2) benchmarking "String"...
    done (took 2.003906933 seconds)
  done (took 5.653026359 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.934033002 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.410630178 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.045483639 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.776159021 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.782951214 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.23955014 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.57169446 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.224964917 seconds)
  done (took 30.764215743 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.963025942 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.013215202 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.476955848 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.511398373 seconds)
  done (took 15.720944498 seconds)
done (took 63.676150416 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.807743798 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.777679726 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.802721239 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.811384358 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.784087501 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.778886612 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.782492902 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.781543988 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.797502281 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.843630198 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.783052472 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.793116604 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.779543918 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.780168716 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.380365174 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.828313344 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.797556936 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.78182836 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.798888679 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.810307342 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.782388796 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.928962586 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.271790761 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.97854926 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.39583277 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.162547715 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.377977512 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202345466 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.788084885 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.778528678 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.82403972 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.124151258 seconds)
  done (took 204.8301779 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.779090818 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.772282362 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.844002146 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.808422212 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.229599002 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.972751761 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.885664234 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.310104874 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.781483833 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.790859986 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.051035096 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.77848737 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.068357555 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.792092773 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.816213572 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.818160446 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.888659833 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.053287668 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.818690955 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.933198747 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.802351329 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.866091262 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.815289486 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.014780053 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.781102277 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.803342905 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.806949646 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.810705038 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.975931748 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.87970285 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.786092114 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.82674966 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.954878113 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.65085614 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.8068334 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.802334777 seconds)
  done (took 170.292950377 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.987363193 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.78872252 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.780670694 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.835742369 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.90351342 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.783802771 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.43887889 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.789439524 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.170878199 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.785060487 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.780522581 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.780263575 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.781380755 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.793297964 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.859212665 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.782430485 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.795569427 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.782554718 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.806674796 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.784836388 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.783964762 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.780668296 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.780911281 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.780580747 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.781245277 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.781725187 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.781296131 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.01303411 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.021761062 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.78364894 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.782677468 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.348920511 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.79553726 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.781525689 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.783321426 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.899205222 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.876650453 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.837505099 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.891256725 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.781704767 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.004366993 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.782919164 seconds)
    (42/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.856690792 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.783335049 seconds)
    (44/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.782603965 seconds)
    (45/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.846514984 seconds)
    (46/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.796429686 seconds)
    (47/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.783436211 seconds)
    (48/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.78427588 seconds)
    (49/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.788072559 seconds)
    (50/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.846728659 seconds)
    (51/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.024006737 seconds)
    (52/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.783581996 seconds)
    (53/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.905799828 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.267021484 seconds)
    (55/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.783450305 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.78395481 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.783612949 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.365528222 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.787807707 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.78413581 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.790343271 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.790604802 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.783448883 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.786417323 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.180451081 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.855288556 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.108721129 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.011419026 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.784790007 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.928551273 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.872573147 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.783296224 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.783775293 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784644824 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.786056161 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.784782203 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.783895634 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.786406944 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.910026676 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.795073769 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.903026256 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.865207911 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.911768607 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.784260019 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.794134853 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.606805949 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.856041515 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.820831385 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.604659517 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.785542868 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.157111786 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.557383868 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784756552 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.785672543 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.797321632 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.785855075 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.78480823 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.786489558 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.864904811 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.785493854 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.913652253 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.504421558 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.93649423 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.786462486 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785843136 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.792016904 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.866100283 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.913424423 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.789222155 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.854852809 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.791739876 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.787955921 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.868968293 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.78692418 seconds)
  done (took 400.841810303 seconds)
done (took 779.727140186 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.34956648 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.33012089 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.420688941 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.339641043 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.31563489 seconds)
  done (took 13.477414757 seconds)
done (took 15.200106334 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.805630176 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.791386776 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.844872145 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.869684564 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.802933556 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.806661371 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.870972542 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.80595787 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.836883562 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.839797041 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.873633729 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.874158084 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.812245514 seconds)
  done (took 25.556939542 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.795539299 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.937353541 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.020079311 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.828802539 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.796514805 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.009443265 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.851808513 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.92530789 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.930356045 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.012394113 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.017762579 seconds)
  done (took 22.849610594 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.795344924 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.933774744 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.01328694 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.831798043 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.796919507 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.014729162 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.861395891 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.943146539 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.934436253 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.020235042 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.029888393 seconds)
  done (took 22.905326397 seconds)
done (took 73.034444442 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.791073335 seconds)
  done (took 3.514281741 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.808183279 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.957390221 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.792415954 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.790250606 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.791791397 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.790821892 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.789053692 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.793979568 seconds)
  done (took 16.238281295 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.791636444 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.791905158 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.792085276 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.79206066 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.791713486 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.79192642 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.792446779 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.791064865 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.791882924 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.791471933 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.792435225 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.79195023 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.791987445 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.791986991 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.792637195 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.795777556 seconds)
  done (took 30.399744877 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.793955701 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.791979479 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.793164479 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.792938519 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.792714964 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.793171522 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.793680686 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.79255184 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.792649982 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.792517632 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.79315287 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.792525733 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.793224223 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.794667024 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.794346119 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.797522098 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.794222075 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.793305952 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.797448638 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.793879819 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.793766563 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.793161427 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.793708367 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.793750779 seconds)
  done (took 44.775148233 seconds)
done (took 96.660925346 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.55650264 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.766106307 seconds)
  done (took 10.048931689 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.796178152 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.794767808 seconds)
  done (took 5.322464122 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.794845754 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.795115567 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.795160695 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.794911503 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.794484578 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.794952649 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.794593536 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.795467702 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.795397683 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.795627161 seconds)
  done (took 19.678256964 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.794877594 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.796290308 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.796383244 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.798098586 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.796461921 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.795392587 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.795569994 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.796459545 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.796128163 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.79526629 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.796372355 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.7953165 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.796013071 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.795483754 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.796011345 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.796461952 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.795514381 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.795664632 seconds)
  done (took 34.055846575 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.796263471 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.797863631 seconds)
  done (took 5.322392147 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.796280955 seconds)
    (2/7) benchmarking "second"...
    done (took 1.796476685 seconds)
    (3/7) benchmarking "month"...
    done (took 1.796349317 seconds)
    (4/7) benchmarking "year"...
    done (took 1.795647155 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.796269057 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.797029959 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.796383098 seconds)
  done (took 14.302676385 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.797202973 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.959332211 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.012970133 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.601900626 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.798183944 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.7999174 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.082596857 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.800139656 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.801013752 seconds)
  done (took 20.382256322 seconds)
done (took 110.841477621 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.62537838 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.796925511 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.017171491 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.932402181 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.819145754 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.133847995 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.806836769 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.443976156 seconds)
done (took 42.306024224 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.79486016 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.794568594 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.827357188 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.827573807 seconds)
  done (took 22.17940142 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.79678527 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.100927666 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.821185782 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.633621524 seconds)
  done (took 22.103837846 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.175774385 seconds)
    (2/2) benchmarking "read"...
    done (took 2.147819994 seconds)
  done (took 6.0577457 seconds)
done (took 58.868139442 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798480627 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.797892044 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.798122711 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.797712317 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.797963115 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.799052158 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.798581946 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.799030799 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.798053691 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.798022754 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.798118108 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.798881231 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.799442853 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799047944 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798290639 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798725422 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798090853 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799476873 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798386853 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.799335537 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798209205 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799202926 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.798475637 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.798808225 seconds)
  done (took 44.896448251 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.79927966 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.798555474 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.799123009 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.798409117 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.799768325 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.799262699 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.79835186 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.799559879 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.798925017 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.800041825 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799863222 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.799804898 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.799758311 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.801860184 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799038487 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.800036756 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.800165962 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79971447 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799455157 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.800690993 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.799222063 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799660709 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.800165623 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800063028 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.80103416 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799954308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.799721514 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.800598551 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799977257 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.800594203 seconds)
  done (took 55.72527249 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.801541552 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.801669831 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.802324765 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.801773653 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.800695416 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.801825695 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.802102553 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.802257457 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.80238911 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.802069563 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.801684789 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.803318982 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.802612931 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.802487113 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.802510679 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.802917409 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.803558818 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.802288587 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.802725822 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.802960133 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.801889064 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.802144946 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.802360194 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.802949057 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.802893764 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.802439178 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.803202417 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.802544046 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.802732634 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.802988211 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.803149291 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.801694606 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.802994669 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.80400653 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.80265418 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.802525012 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.802709635 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.802996496 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.803077078 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.803062594 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.804264852 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.803369861 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.803821299 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.803397074 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.803116929 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.803607003 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.803953916 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.803189613 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.804705072 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.80416584 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.804450845 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.803515616 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.803005284 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.804556683 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.805330607 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.804234478 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.805184592 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.804163557 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.805677324 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.804691827 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.804300646 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.804279536 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.804599919 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.804868838 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.804724887 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.805420331 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.806926738 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.803625612 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.805400986 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.804497277 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.804829296 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.804785543 seconds)
  done (took 131.578263576 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.805321065 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805557687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.805041449 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.804764869 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.805359508 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.805750704 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805704404 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805897075 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80517883 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.805870116 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806272255 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806609532 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805223987 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.806285131 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.806300806 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.805189636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.80593611 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806610806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.805485902 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806290101 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806101147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805588663 seconds)
  done (took 41.463805991 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806604886 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.806358427 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.806529553 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.808530642 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806158859 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.806554729 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806357008 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.806694913 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806657659 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806725882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806207578 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806367964 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.806959722 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807488086 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806785203 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806526503 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.807138031 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.807627157 seconds)
  done (took 34.261055439 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.807522665 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.810161715 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.807732127 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.807601179 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.808008559 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.808224992 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807743339 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.808045046 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.808147105 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.807752724 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.808276715 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807761764 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.808763024 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808193303 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807939452 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.807583965 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.808594217 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810034426 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807717207 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.807044069 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.8070311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.809154003 seconds)
  done (took 41.51939391 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808326246 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.808749982 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.807901202 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.807827432 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.808139299 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.808315968 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.808976433 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.808554905 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.808318071 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.808938474 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808192254 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.810114779 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.809396635 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808425188 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.808956168 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809728834 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.80907365 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809717334 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809478191 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.809278038 seconds)
  done (took 37.916893187 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809721229 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808421436 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808857648 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808587938 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809442195 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.809482477 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809405521 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.810606152 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811617112 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.809616088 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810186354 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.810414097 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810534139 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.809608778 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809296894 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809814642 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.810443529 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809715751 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.810053519 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810123919 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.810173151 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809649376 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808991121 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.812301276 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.810235023 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809510757 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.810836515 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.811089705 seconds)
  done (took 52.421115778 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81118003 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.810609777 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.809359863 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.811081307 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.811143834 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.810515181 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.810679082 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.811945886 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810622181 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810912197 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.811135843 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.815316494 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810708997 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.811259614 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.811671917 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.811164143 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812237433 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.811388381 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.811992143 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811217056 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.811684717 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811753796 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.811606596 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.811607254 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812129041 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.811778547 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812636508 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.813728648 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813019517 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.813076556 seconds)
  done (took 56.09272387 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.832903236 seconds)
    (2/2) benchmarking "in"...
    done (took 1.835294167 seconds)
  done (took 5.411949981 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.812943484 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.812034326 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.812039333 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.812528009 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.812983296 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.813012851 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.813239088 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812891165 seconds)
  done (took 16.245868363 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.812523236 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.818965839 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.81369074 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.814186968 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.812890887 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823041029 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.81478418 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.814588698 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.814789225 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.814656394 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.817034922 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.81618994 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.821292694 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.81829984 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.813815773 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.814000315 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814469023 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817059819 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.819719775 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.813677588 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817564458 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813934325 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.814740666 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.81448551 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.813948427 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.815383777 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.824130084 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.81497833 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815299187 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.81400283 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.821459755 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.816230657 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.81378683 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81594418 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.818224051 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.81526881 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.822212908 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.814997524 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.814992636 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.816430689 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.816717014 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.817434852 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.817751581 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.823971358 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.81501505 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.815263232 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.815203194 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.814551895 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.815438123 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.819486829 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.824313541 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819889253 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.816697744 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.816104437 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.81828578 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.815917187 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.816587628 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.817481636 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824644482 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.824222433 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.820073793 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.836525417 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.825869782 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.815618537 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.815766225 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.82553566 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.83944481 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.819670892 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.817720491 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.817329135 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.827276141 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.816703013 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.815951746 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.817922089 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829337297 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.824497831 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.816457914 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.817195552 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.816203185 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.816562082 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818020717 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.8168853 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818313865 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.81734721 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830183436 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.841682801 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.817157807 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.81755593 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.819910679 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.819458417 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.822593964 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.820387782 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.816885773 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.818186485 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.819250636 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.819754314 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.818097151 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.817276202 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.817650811 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.828630897 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.822942851 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.82026047 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821774341 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.826762223 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.819384568 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.818993689 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.821077971 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.818439801 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.827122743 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.819270571 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.818441856 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.819066506 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.82025904 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.823568995 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.819147598 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.822901038 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.82753926 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.833206793 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.821416759 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.824050781 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.824116068 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.823116378 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829411982 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.843914735 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.820408642 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.823580816 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.824910409 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.831030406 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.823982383 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.820440682 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.823659425 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.821102705 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.821967956 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.827638276 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.82082115 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.819722867 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.821565447 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.820800077 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.821151437 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.819384704 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.823283065 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.821671577 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.82257746 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.819423513 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.825485363 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.821017314 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.823325128 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.829835233 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.822625735 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.821493249 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.82510543 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.823497754 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.822715329 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.822171063 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.821183502 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.821993584 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.822101304 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.822121528 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.823938695 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.821963428 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.822886555 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.822807124 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.82652188 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.821386849 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.821401371 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.823295399 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822539401 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.822282166 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.82302311 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.823401059 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.824324398 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821725299 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.827714979 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.823767075 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.822526183 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.822214953 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.822239756 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.821435213 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.826073204 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.834654408 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.827066113 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.83305834 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.823532606 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.834183633 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.823194661 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.824540073 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.824907634 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.822797101 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.823108275 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.823437773 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.824390037 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.826684954 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843511017 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.834845682 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.82500665 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.825452111 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.828839457 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.828371282 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.830684449 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.826415956 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823959314 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.826203184 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.822860307 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.823160021 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.823924893 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.826827654 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.823931986 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.82452784 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.827946864 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.82461996 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.824848618 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.825240621 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.825463322 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.826539692 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.825289182 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.825743463 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.826968979 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.826215824 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.834269316 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828005064 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.826585378 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.824834294 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.82628109 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.824485767 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.825029209 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.826348155 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.828503309 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.825517944 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.825970585 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834558036 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.826091202 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.825507502 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.826819578 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.826597546 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.827412831 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.825464655 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.829114033 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.834399139 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.829136936 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.825838128 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.832170028 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.826297993 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.827655952 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.826573479 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827346098 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.826330201 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.827392342 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.826097635 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.828867101 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.835378437 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.827287101 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.826054011 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.827430382 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.830245645 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.827254607 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.828864089 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.826185836 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.830111705 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.833992865 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.834505327 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.82837161 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.830228946 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.828457214 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.828787562 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.831546687 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.828748337 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.841160871 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.837618852 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.828539972 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.828520911 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.827366541 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.830336965 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.829233299 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.828001025 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.837567727 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.829210245 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.829330037 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.833529834 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.828673593 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.829192651 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836277535 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.831493121 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.832731893 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830939464 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.830667522 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.829277976 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.829190901 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830861927 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.828894598 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.830136621 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.833206301 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.829296539 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.829460726 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.829617078 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.838745081 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.830449098 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.82963668 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.838003021 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.832214053 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.828949336 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.83089548 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.829121268 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.829690888 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.83033717 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.829752966 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.83160817 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.829179961 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.833211752 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.840457265 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.833148142 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.838235192 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.832057609 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.841371643 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.830131672 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.831712939 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.83082932 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.833386188 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.838172573 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.830456789 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.829150308 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.839680361 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.833542886 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.830648815 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.834813576 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.830905095 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.831233147 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.830375722 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.832204575 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.836285942 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.834319225 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.833438856 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.831383508 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.831545877 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.831279605 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.834746826 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.833227335 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.832394165 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.832376722 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.831262935 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.830742875 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.830377628 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.830672324 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.831219802 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.831694214 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.832463633 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839930619 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.831737259 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.834158808 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.83553323 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.831816468 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.841549748 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.832066346 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.831138658 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.832987887 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.83343612 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.83565865 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.832285332 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.831904595 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.832080884 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.833396933 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.833599669 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.845465437 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.840474442 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.838306086 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.835074478 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.833116096 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.832707974 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842857654 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.857086187 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832918847 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.835117741 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.837881449 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.840785855 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.836384645 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.839593214 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83826857 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.841661342 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.83481913 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.832686023 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.836945771 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.846747234 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833734957 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.834498721 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.833828972 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.838583643 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.836788319 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.834032871 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.835914463 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.838072177 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.835678736 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.847688651 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.836506356 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.836236116 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83423423 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.835151272 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.834778276 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.835754729 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.835984401 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.835925523 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.834793979 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.834279942 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.836600401 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.839515796 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.834294819 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838600196 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.844744619 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.835567963 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.835261895 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.836920582 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.834993061 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.837951473 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834699305 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.835917489 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.837156088 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.836300595 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.836535412 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.839479011 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.844026337 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.837242489 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.835614188 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.836197604 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.839698221 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.834772836 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.836244418 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.837361604 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.846111528 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.839620339 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.84733539 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.845917327 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.838346883 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.838677232 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.845257646 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.844054995 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.836878151 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.835938033 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.837246593 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.839364269 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.839908011 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.837608431 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.838133686 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.837921481 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.843500309 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.837726204 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.837791894 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.837702683 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.841227721 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.839730324 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.840760554 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.84387296 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.837910618 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.839120307 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.836181263 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.838528089 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.839436768 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.840651441 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.838692714 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.837841631 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.840060312 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.840633882 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.842620047 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.83875383 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.839800487 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.840585175 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.838776116 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.838724036 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.838440076 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.838902574 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.839318974 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.842321486 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.847555132 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.839568995 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.840148563 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.83995793 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.842834263 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.838724032 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.838445122 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.838261893 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.838702865 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.851979331 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.840232515 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.838839624 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.839583044 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.83987196 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.845982378 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.840690869 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.844339799 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840777884 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.840431174 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.840946368 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.843790316 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.84901225 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.843843884 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.843474701 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.848116206 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.845469423 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.841069678 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.840485902 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.841068088 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.839709755 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.841478088 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.843974452 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841335548 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.84248092 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.839503719 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.842513067 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.841452614 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.84292928 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.841666562 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.841006398 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.843789858 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850382505 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.850692088 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.841823527 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.842102404 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.840210444 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.844527712 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.853300743 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.841744196 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.840994476 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.841509134 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841550176 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.842278532 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.848180899 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.850016493 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.845380098 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.841236442 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.8462979 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.862973735 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.844493445 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.85079999 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874031461 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.844222537 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.840901145 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.842499602 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.842751673 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.841612112 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.846141386 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.842294692 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.849745925 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.842079443 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.843667798 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.851369828 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.843760409 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.84637045 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.84343251 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.844802332 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.848241811 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.842569795 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.85208376 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.843914461 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.843461251 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.843481149 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.846095221 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.844151142 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.843841677 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.844130198 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.846205696 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.844585668 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.842966521 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.856023551 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.844455666 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.844504579 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.856764806 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.856616534 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.844321584 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.844378412 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.843842138 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.849283164 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.846571363 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.843974559 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.847168874 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.852976431 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.848012342 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.851948014 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.845166399 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.845964202 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.846107406 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.84469302 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844349392 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.857122793 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.855611862 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.844943793 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.847087004 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.851298727 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.845964861 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.852504345 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.852669612 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845207336 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.847397047 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845534573 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.845563865 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.84609045 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.848342094 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.848633434 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.85421842 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.845153482 seconds)
  done (took 1093.649583499 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846776281 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84659806 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.84696619 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846011486 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846451657 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.847352814 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846707488 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846751854 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.847052041 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.846464948 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846848011 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848786501 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846125035 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846517042 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846508272 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.847754676 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846627315 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847406078 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.847752934 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84665318 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846951599 seconds)
  done (took 40.561961352 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.847550752 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.84622328 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846586649 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.846115476 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.847410413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.848959265 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.847458843 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847620769 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.847275804 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.847790176 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.847418487 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848137316 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.84727919 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.846305267 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847186084 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.846882222 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.847115179 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.846089372 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.845972107 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.845512316 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.846179521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.847237959 seconds)
  done (took 42.411801137 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.844511 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.844589281 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.846735343 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.845712846 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.846732233 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.845510192 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.845897204 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.846670409 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.845249328 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.84644639 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.852872667 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.854508258 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.846306605 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.848034188 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.846479502 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.847445232 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.991748719 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.84468662 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.844714108 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.845384376 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.84533102 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.852858658 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.844860075 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.844734567 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.843849739 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.846877138 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.844047504 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.843120093 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.843752144 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.843798686 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.847689617 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.851692765 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.844776447 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.846826912 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.843993019 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.844512398 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.848717131 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.837807855 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.838888655 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.838935295 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.847890851 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.863456896 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.841131777 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.837464203 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.847329484 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.839749859 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.838522711 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843175721 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.847541273 seconds)
  done (took 92.361740966 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.838501017 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.840352708 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.838794383 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839432915 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.837426408 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.838473005 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.838306005 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.83890398 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.840004673 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.838580515 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.838466648 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.838615126 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839359516 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839809618 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.845338463 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.839973055 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.840733992 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.840771327 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.839420366 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.84174446 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.840051265 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.840074856 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839943953 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.83979347 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.841758122 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.838774616 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839386649 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.839622307 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.839439255 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.839585153 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.841436752 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.838047331 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.837807738 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.837426062 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.838097176 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.838076457 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.836149969 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.835768414 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836780263 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.837179404 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.836779312 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.83826256 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.835081037 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.835348635 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.835835958 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.836252502 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838102518 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.836399626 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.835879294 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.83548182 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.83595086 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.836814284 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.836183678 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.836712436 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.83628703 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.835781297 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.837145396 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.837536353 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.835934028 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.837467885 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.836771915 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836521699 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.837473563 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.838587337 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.836231513 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.836208633 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.835060369 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.836752899 seconds)
  done (took 126.762230615 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836522343 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.836868806 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837057011 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836239315 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.837752195 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.837772863 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.836012147 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.836567638 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.836775952 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.837239525 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.838969501 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.836877733 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.83706552 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.83671978 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.837237676 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.838364756 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.837678495 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.836796208 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836485978 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837241463 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.837355346 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.839905597 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.837289492 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.836948749 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.837481676 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.836965839 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.838407573 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838794099 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837247692 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.837808062 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.8386531 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.837864452 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.839682604 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.838141726 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.838403204 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.838552199 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.836513724 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.83919432 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.838972627 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.839801921 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.837952528 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.839003859 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.83845102 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.838337868 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837252077 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.837558904 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.838288363 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.838109862 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836463548 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.832982061 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.833325189 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.833191729 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83295451 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.834344536 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.828551189 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.827511162 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.828693663 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82883147 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.82897485 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.831057279 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827491686 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.828546418 seconds)
  done (took 115.612994404 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.82904265 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.829068612 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.826583672 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.827315816 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.8281704 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.826830791 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826909132 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.827665373 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.827007622 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.826985883 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825922025 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.826209783 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829286817 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826827147 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.824684394 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826258494 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824844873 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.82482856 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827265659 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.825027589 seconds)
  done (took 38.294877679 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.824286598 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.824446396 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.825613103 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824013647 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.823793965 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824991849 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.823467242 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.824693903 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826872351 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822992399 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.8226748 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823192663 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823629251 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824698951 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822929307 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.823392866 seconds)
  done (took 30.940050491 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.823511276 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.823256265 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.824345334 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.823335616 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.822742467 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.823177803 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.824125913 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.824746449 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.826607708 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.824198443 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.824502312 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.822868203 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.82387626 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.823077827 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.8230102 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.822841757 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.823733921 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.823664248 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.823918707 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.822725232 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.82472534 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.822950208 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.822510139 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.823783194 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.826048003 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.823717135 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.824136282 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.824041505 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.823987188 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.823745499 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.823452409 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.822761736 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.822229198 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.82361988 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.82346647 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.823182131 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.822987863 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.822719706 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.823293831 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.822847871 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.823488453 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.823499312 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.822022072 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.821920985 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.821915736 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.822207996 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.822507594 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.823557839 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.821797368 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.822136916 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.822489982 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.822423525 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.822973406 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.824106536 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.822445108 seconds)
  done (took 102.038678484 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.822134713 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.824014424 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.821749292 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.8216289 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.822296413 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.822515251 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.822718733 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.820929392 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.821706012 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.821955231 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.822132766 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.822246443 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823865051 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821665796 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.822711789 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.823044372 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.82339338 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.823728285 seconds)
  done (took 34.556548835 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.823159705 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823009668 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.823300927 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.821610065 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.824535471 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.822688831 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8226179 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.821981955 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821499842 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.823279183 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822261847 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.821393927 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822369657 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.823158378 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.821917118 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82567518 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.822923423 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822268408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.821623562 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822998732 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.822866914 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821852422 seconds)
  done (took 41.852434198 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.82121308 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.822147665 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.834764661 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.843589556 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.840840053 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.858197446 seconds)
  done (took 12.772719665 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822902822 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8236099 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823574901 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822546231 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822526832 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822459175 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821128833 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824783361 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821975623 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821434411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822762903 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822004113 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826216495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823690675 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824809141 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823759918 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82227614 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822765231 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823480859 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822557567 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822732469 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822085214 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823262121 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822404033 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823122057 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822324084 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822145484 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823175891 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823218396 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82267656 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821032145 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822016534 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822245043 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822452467 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823588626 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824724734 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821468731 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821230556 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821957294 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823576138 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.821974947 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821410833 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821929696 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822332631 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821863633 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822952081 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821527491 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822672107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822868659 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823282982 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823328304 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82360849 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823253951 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821471868 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821502508 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821769701 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822676178 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822503343 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822969606 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8216723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82271085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822486412 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822272216 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822770881 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823818338 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822335662 seconds)
  done (took 122.04981036 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823633821 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824676543 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822708351 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822222925 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822595835 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823192109 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822262117 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822567315 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821940563 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821823088 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822131397 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825005823 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822089122 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823519571 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823740207 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823273256 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82485983 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82547155 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825096584 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823546803 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823419913 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822699781 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824093042 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822432465 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824258238 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823951152 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822447625 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823865223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82338501 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824560922 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824080517 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823318097 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823285679 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824215571 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825807732 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823490067 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824613117 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823013586 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824287121 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823280013 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82438003 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825144497 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824000034 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825324112 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825118901 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825461956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825409312 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825118301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824350032 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825796887 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826520174 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.826465473 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824946515 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825025106 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824579908 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825387674 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824013518 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82539918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82544391 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824713101 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825861764 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827921713 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825743007 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825619512 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82623235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82527285 seconds)
  done (took 122.154260783 seconds)
done (took 2535.292562025 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.869360602 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.936663881 seconds)
  done (took 15.565485884 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.990347169 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.941419382 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.827889293 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.876358004 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.828979594 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.846300708 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.840635929 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.826304871 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.827912172 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.827656849 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.825393127 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.009367196 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.825762967 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.826199791 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.827174069 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.916841082 seconds)
  done (took 51.624642037 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.831692666 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.83235756 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.843114074 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.833812083 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.83155503 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.845024163 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.86146607 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.835255038 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.869753421 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.848069105 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.904491657 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.843828675 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.833560026 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.883431343 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.847295625 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.845839027 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.931356142 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.908003898 seconds)
  done (took 35.182678856 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.90872736 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.836320817 seconds)
  done (took 10.506813772 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.828036313 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.843202723 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.84142337 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.841438722 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.849861886 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.831059923 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.844613467 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.833294432 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.851084838 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.833909246 seconds)
  done (took 70.155866629 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.835463686 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.833202509 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.83378533 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.830759723 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.827321114 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.833137342 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.83127925 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.83075396 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.520866689 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.871008188 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.840951829 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.840376399 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.829850728 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.831510682 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.828063686 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.857341106 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.945857272 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.827416323 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.827957799 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.835907948 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.833739044 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.895228351 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.844981089 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.832734327 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.865112749 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.516778022 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.843480908 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.836617126 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.952896199 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.830491687 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.832257509 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.044888715 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.836014714 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.313403834 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.150043869 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.83522144 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.840571639 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.839429049 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.831823352 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.966803031 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.83121914 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.836146395 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.741510659 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.119397347 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.922675758 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.877980575 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.177565935 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.840436007 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.830800182 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.868158492 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.833389202 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.837218173 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.847709812 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.334061562 seconds)
  done (took 130.912205623 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.827842303 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.181311737 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.995371742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.830948827 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112360598 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033183569 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.831041805 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872898979 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.838349378 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.057037607 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.080929288 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936302616 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.831367794 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.833427478 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.828626892 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.829223662 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.979152623 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.900733178 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.833694535 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.832240531 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855933816 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070281011 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.948221641 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.832462676 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.858411929 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.035540106 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.94987098 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.931002095 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.603118683 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.832576457 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892841791 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.831630212 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.830472492 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.829166627 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.985576324 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.922977263 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910541192 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.831624185 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833382612 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.831669629 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.487053688 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.030245438 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.925093328 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.955005968 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.082155538 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034762647 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.609643579 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.831165173 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.584075277 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996991768 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.058026173 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.063269335 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.949880836 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.835876355 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.087360859 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83355865 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.833096507 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.075070097 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080743718 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.930653369 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834487388 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.840197157 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.831840825 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.069983885 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835676018 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.924705533 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833592921 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.833670588 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.929706128 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.931954636 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.079631794 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043559637 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.86174583 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.166678871 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.331094147 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.078429617 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.896577369 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084609873 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.833436126 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834424377 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.916736288 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.674771203 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.091828395 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.07351115 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.073100076 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.865481534 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.555934376 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.831989277 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.059804471 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.052899326 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.084934566 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.078117777 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.06813761 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.150995797 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.834351027 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.836579207 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.091269615 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956168234 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.835972803 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.176666039 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061919845 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.389723975 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.868767306 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140074802 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.960337052 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.834227988 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.462894782 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.84068455 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.058002088 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.871850172 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.835248543 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840287858 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.053638389 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.809183163 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839998841 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.481218408 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.893813698 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.838053448 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069568711 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.837982639 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.100213842 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83792079 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068508551 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.272039675 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.869376156 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.008964404 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082833499 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.838387246 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.08358162 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.071157151 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.948269353 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.056737676 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.538368354 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.838171675 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122066797 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.836222882 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.839087195 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.005469883 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.836542455 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.005594031 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837735586 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.119986201 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855914 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.068276661 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840186642 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.090524978 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.865957367 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883283315 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.83743432 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959336886 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.838659579 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.674226332 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994306019 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.835349515 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.837100044 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.383022874 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.837203321 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.989506646 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.058116787 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.858068523 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.90917862 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.50270081 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.839827099 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.923306077 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862363532 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.224681092 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.841276197 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.090262738 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.840972195 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.841838635 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.841911655 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.071621488 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.018689719 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.844092896 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.838015292 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.736442283 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.841466776 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.841515506 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.0218959 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.7920391 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837586776 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04013259 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842640549 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964841613 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.844170687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.914094388 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.171981657 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.839673689 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.843111614 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.844599114 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.845487321 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.84367952 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.048280337 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.862353531 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.357276044 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.977636118 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.104634049 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.148763738 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.080742967 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.884435851 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.843782176 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09122291 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.845446644 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.90049555 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.845193313 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860700897 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070847402 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.845019018 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045527604 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.11448326 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.701720305 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888774933 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.846276207 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.845431781 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.844358119 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.986902035 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920005759 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.848372837 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.845589869 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955429504 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959617963 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.050157561 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.850529251 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.931199776 seconds)
  done (took 895.389945383 seconds)
done (took 1211.097025308 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.844263691 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.846464042 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.845686728 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.846735422 seconds)
  done (took 29.154200716 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.845322669 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.846458131 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.847728835 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.847482224 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.849012793 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.848187923 seconds)
  done (took 12.854174089 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.864247556 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.846496548 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.84510552 seconds)
  done (took 21.326473934 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.919947846 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.251899084 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.986386094 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.268126666 seconds)
  done (took 10.19735906 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.847154348 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.849565766 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.846603514 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.85207776 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.848949814 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.849159296 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.84771962 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.851241992 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.849688523 seconds)
  done (took 18.416586748 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.987555906 seconds)
done (took 97.709911279 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.987372182 seconds)
    (2/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.179934176 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.861269641 seconds)
    (4/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.931790469 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.917916683 seconds)
    (6/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.086323703 seconds)
    (7/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.084585703 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.684053376 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.029967603 seconds)
    (10/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.875849688 seconds)
    (11/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.847783446 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.255628317 seconds)
    (13/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.984228527 seconds)
    (14/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.178512796 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.847462122 seconds)
    (16/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 5.041538107 seconds)
    (17/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.133657427 seconds)
    (18/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.867386676 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.97816328 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.998225339 seconds)
    (21/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.091212405 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.184215662 seconds)
    (23/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.952270892 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.85059586 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.876002793 seconds)
    (26/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.871039298 seconds)
    (27/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092503622 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.229582076 seconds)
    (29/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.994996149 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.103816633 seconds)
    (31/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.290821412 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.848372481 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.462129874 seconds)
    (34/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.941986445 seconds)
    (35/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.093640709 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.851428456 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.291889358 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.051750996 seconds)
    (39/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.937416358 seconds)
    (40/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.976910325 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.857751304 seconds)
    (42/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.939516921 seconds)
    (43/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.854542133 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.016512345 seconds)
    (45/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.953341868 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.938721113 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.850261219 seconds)
    (48/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.920918054 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.07244717 seconds)
    (50/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.164654629 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.277077416 seconds)
    (52/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180543927 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.068632729 seconds)
    (54/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.986234093 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.759469504 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.056733271 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.850245896 seconds)
    (58/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.236627598 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.166318649 seconds)
    (60/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.54317566 seconds)
    (61/309) benchmarking ("sort", Int64, false)...
    done (took 5.498104152 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.10400009 seconds)
    (63/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.323036837 seconds)
    (64/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.469608678 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.852958021 seconds)
    (66/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.010067081 seconds)
    (67/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.87307695 seconds)
    (68/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.85185617 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 3.919434367 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.955369557 seconds)
    (71/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.948261578 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.00127619 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.857079157 seconds)
    (74/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.938665985 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.952868778 seconds)
    (76/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.934935241 seconds)
    (77/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.738255915 seconds)
    (78/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.883760941 seconds)
    (79/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.227691181 seconds)
    (80/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.020512652 seconds)
    (81/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.974885368 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.711802583 seconds)
    (83/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.937227078 seconds)
    (84/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.157601779 seconds)
    (85/309) benchmarking ("sort", BigInt, false)...
    done (took 6.859960535 seconds)
    (86/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.303530103 seconds)
    (87/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.321726886 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.859684789 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.036027175 seconds)
    (90/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.326653641 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.985550004 seconds)
    (92/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.245093457 seconds)
    (93/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.162842301 seconds)
    (94/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.858272486 seconds)
    (95/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.240702788 seconds)
    (96/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.222005267 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.857823698 seconds)
    (98/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.926671109 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.120942864 seconds)
    (100/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.005535986 seconds)
    (101/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.038735762 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.861255691 seconds)
    (103/309) benchmarking ("sort", Int8, false)...
    done (took 4.844879174 seconds)
    (104/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.977412819 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.386557698 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.266507015 seconds)
    (107/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.95743649 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.151779585 seconds)
    (109/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.939568897 seconds)
    (110/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.015524462 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.988382471 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.892592477 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.858490439 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.859262463 seconds)
    (115/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.677079079 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.149193646 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.877284945 seconds)
    (118/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.247106494 seconds)
    (119/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.835716251 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.925632393 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.861587573 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.989439371 seconds)
    (123/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.031250567 seconds)
    (124/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.889120367 seconds)
    (125/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.063214323 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.090695756 seconds)
    (127/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.525352579 seconds)
    (128/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.161133171 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.1079296 seconds)
    (130/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.916450948 seconds)
    (131/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.860499033 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.78596366 seconds)
    (133/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.102577952 seconds)
    (134/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.264411867 seconds)
    (135/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.992663033 seconds)
    (136/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.168783335 seconds)
    (137/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.109119104 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.016649156 seconds)
    (139/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.121183108 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.173637232 seconds)
    (141/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.999020363 seconds)
    (142/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.054343509 seconds)
    (143/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.916521913 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.879087569 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.188587786 seconds)
    (146/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.170858275 seconds)
    (147/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.968944276 seconds)
    (148/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.964536371 seconds)
    (149/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.041866841 seconds)
    (150/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.860693527 seconds)
    (151/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.904876702 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.874510837 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.014035451 seconds)
    (154/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.045711841 seconds)
    (155/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.448144759 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.819422792 seconds)
    (157/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.264982753 seconds)
    (158/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.85942882 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.788890254 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.880726144 seconds)
    (161/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.145949678 seconds)
    (162/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.639830153 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.200148853 seconds)
    (164/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.882836483 seconds)
    (165/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.859880501 seconds)
    (166/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.942928997 seconds)
    (167/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.876082755 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.858906188 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 5.614400703 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.863413018 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.603127465 seconds)
    (172/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.380754294 seconds)
    (173/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.859756828 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.881221112 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.997791826 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.188281083 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.259352731 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.16861663 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.455173054 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.971939393 seconds)
    (181/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.01969029 seconds)
    (182/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.11496084 seconds)
    (183/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.734351486 seconds)
    (184/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.068399925 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.923037688 seconds)
    (186/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.886447823 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.634277442 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.827285342 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.253678469 seconds)
    (190/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.968701016 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.975413807 seconds)
    (192/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.604077364 seconds)
    (193/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.991480555 seconds)
    (194/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.545824677 seconds)
    (195/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.89394223 seconds)
    (196/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.945892222 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.923577876 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.902694454 seconds)
    (199/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.437643154 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.170032913 seconds)
    (201/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.85994188 seconds)
    (202/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.921473592 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.985564931 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.170923452 seconds)
    (205/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.866589703 seconds)
    (206/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.864538334 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.085442662 seconds)
    (208/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.10158514 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.167105772 seconds)
    (210/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.058055839 seconds)
    (211/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.630224912 seconds)
    (212/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.873704008 seconds)
    (213/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.861034418 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.443236577 seconds)
    (215/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.158905337 seconds)
    (216/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.344570682 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.554239627 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.171404633 seconds)
    (219/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.861054923 seconds)
    (220/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.888016949 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.997639543 seconds)
    (222/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.86057505 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.859472229 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.862734358 seconds)
    (225/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 3.673482565 seconds)
    (226/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.739179825 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.859855081 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.951588196 seconds)
    (229/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.866315879 seconds)
    (230/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.294963317 seconds)
    (231/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.118396621 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.860669652 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.005274397 seconds)
    (234/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.608356099 seconds)
    (235/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.884027843 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.532515977 seconds)
    (237/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.869800393 seconds)
    (238/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.929905547 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.004111732 seconds)
    (240/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.503670767 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.129176062 seconds)
    (242/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.174804612 seconds)
    (243/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.166710978 seconds)
    (244/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.082469399 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.866817145 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.861430514 seconds)
    (247/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.94774558 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.454350353 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.893375998 seconds)
    (250/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.938394497 seconds)
    (251/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.950079616 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.041019505 seconds)
    (253/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.951664058 seconds)
    (254/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.994550845 seconds)
    (255/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.959704873 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.803391558 seconds)
    (257/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.176503649 seconds)
    (258/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.506184432 seconds)
    (259/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.085122517 seconds)
    (260/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.884338973 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.180062346 seconds)
    (262/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.945509482 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.353261685 seconds)
    (264/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.168876129 seconds)
    (265/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.498507422 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.874886293 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.074318035 seconds)
    (268/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.887458123 seconds)
    (269/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.50224804 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.996853142 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.118769528 seconds)
    (272/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.166370296 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.867553116 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.947951716 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.986275533 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.961212039 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.995260485 seconds)
    (278/309) benchmarking ("sort", Float32, false)...
    done (took 5.530387081 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.896077846 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.998462099 seconds)
    (281/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.864564383 seconds)
    (282/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.114698559 seconds)
    (283/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.615653495 seconds)
    (284/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.053773939 seconds)
    (285/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.863165546 seconds)
    (286/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.189041538 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.272421029 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.722625022 seconds)
    (289/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.327068926 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.89281579 seconds)
    (291/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.667676858 seconds)
    (292/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.953408706 seconds)
    (293/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.86582008 seconds)
    (294/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.072575413 seconds)
    (295/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.984348224 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.259108358 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.868729457 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.951306808 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.333760938 seconds)
    (300/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.031612346 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.637751914 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 7.064718843 seconds)
    (303/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.014022482 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.077848845 seconds)
    (305/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.03488145 seconds)
    (306/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.978211653 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.9755507 seconds)
    (308/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.329826747 seconds)
    (309/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.977321578 seconds)
  done (took 1007.215148466 seconds)
done (took 1009.069179477 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.896611094 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.884443105 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.869061989 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.889833602 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.982194088 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.915254242 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.882403107 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.871414995 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.918489126 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.918821438 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.867961287 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.911753421 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.866724044 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.868144784 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.8734893 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887151056 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.170901486 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.892516597 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.886642209 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.881949436 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.886733259 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.865428904 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.917235606 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.91277726 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.872562702 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.873500603 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.87423917 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.889560685 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.9847835 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.87506348 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.876439487 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.883405488 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.171271239 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.891639333 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.86820819 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.890311654 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.88224791 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.881613387 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.876096765 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.903754058 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.302724728 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.871520302 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.875567318 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.870981313 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.871334444 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.878122157 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.876434764 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.879526622 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887090915 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.888949022 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.302573478 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.890430918 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.87522819 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.872632446 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.884978553 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.875223951 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.876654427 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887084706 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.891314217 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890222606 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.161512939 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.903715997 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.876255284 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.88915882 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.880202517 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.336290585 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.876097197 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.879767992 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.30405376 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.883934518 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.340015008 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.883896304 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.87514473 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.887557988 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.906111455 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.169530411 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.893401067 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.87190614 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.883691664 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.869919821 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.885426176 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.886541511 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.877167183 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.871331449 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888168143 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.916189013 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.886050063 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.872438112 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.886830588 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.89307318 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.881602518 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.884929052 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.878596761 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.873276364 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.88720195 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.88294846 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.88041813 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.881480941 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.8776984 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.887899052 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.302202951 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894473485 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.871540891 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.871350414 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.874548152 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.888234639 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.299110311 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.878824467 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.896640591 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.92239892 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.875776352 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.165554642 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.896008672 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.891139593 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.889008985 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.87647989 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.8719026 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.16243815 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.32612085 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.8948002 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.875081292 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.873564688 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.890563703 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.875535745 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.872340673 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.174866494 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.896834373 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.890861669 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.997821057 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.889657597 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.906785714 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.875376523 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.879308601 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.921122639 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.891709624 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.9082992 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.879418114 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.893218249 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.896184494 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.870791311 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.89008134 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.889925287 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.87551747 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.886052342 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.874042781 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.922701514 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889909762 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.895559801 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.898450284 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.000731089 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.874382862 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.167528912 seconds)
done (took 294.488595998 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.952389384 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.872812811 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.991900315 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.875584188 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.967640965 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.948317618 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.875499408 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.876239263 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.875920456 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.37007677 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.876656193 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.881930342 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.875921712 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.877547378 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.949137866 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.877781832 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.877656683 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.316843861 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.877518611 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.961622916 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.876122435 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.876776902 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.8753013 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.375810035 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.876563225 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.87977471 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.954561226 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.877174851 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.324452341 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.876091505 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.875992345 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.326483157 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.95839514 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.904139119 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.887193809 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.884230392 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.964068046 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.890747679 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.944268243 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.943154143 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.99407687 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.909385901 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.876621939 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.87836762 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.883084867 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.878990639 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.87870304 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.911279244 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.877548602 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.884210771 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.319254605 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.884063495 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.884542471 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.876679681 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.878672406 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.905230158 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.87997915 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.878126319 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.962935138 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.879975839 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.944903764 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.377749234 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.372573823 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.88041132 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.878760601 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.878073658 seconds)
  done (took 185.808227538 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.944235225 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.94951841 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.944190974 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.885029992 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.930481255 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.943708537 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.888821128 seconds)
  done (took 15.292364787 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.888137884 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.880184118 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.930641965 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.930611612 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.881151407 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.066360717 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.891768279 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.887077612 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.908199461 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.882510049 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.528485367 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.931233371 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.890306167 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.883060005 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.89180544 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.937480443 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.880513566 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.881382038 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.992791486 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.029343508 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.888435201 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.888661513 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.905711238 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.891217113 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.884534934 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.881720771 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.882440569 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.889749953 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.884375106 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.882360748 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.880260697 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.935147316 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.882411404 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.878912913 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881478338 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.882129751 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.883082297 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.881663745 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.882590852 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.880993528 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.883810715 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.883376557 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.883165772 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.883329099 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.88621029 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.90985254 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.8855074 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.883733512 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.882403613 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.881879239 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.908195674 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.884214536 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.881462697 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.886468009 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.928941881 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.89063533 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.885941682 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.882091511 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.885354205 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.88159726 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.88531059 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.032091005 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.932114979 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.883175577 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.933389948 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.033014392 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.88465147 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.883487169 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.885395362 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.971684785 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.884075083 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.933060076 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.884258608 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.997502502 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.88359872 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.067010864 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.908466507 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.887217148 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.886244278 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.883427893 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.89300479 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.885639988 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.886027391 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.891247552 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889546132 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.884005841 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.885796646 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.887488101 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.891067968 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.886329217 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.934220823 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.886171708 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.884241305 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.018340148 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.88705486 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.993966568 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.91293843 seconds)
  done (took 207.268324735 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.891218904 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.890583824 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.88607666 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.900951504 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.886341832 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.886373391 seconds)
  done (took 13.155680598 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.889412878 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.889240483 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.886614705 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.885668557 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.885429287 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.885325725 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.886189076 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886827782 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.888477717 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.884520997 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.884261404 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.885849333 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.886808571 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.882507247 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.887185832 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.884962995 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.889408206 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.886102176 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.888464965 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.88735448 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.093131168 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.884570737 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.88515293 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.887471362 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.888238406 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.88732479 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.897920804 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.886207758 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.884462813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.893730387 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.891535353 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.888182139 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.890052752 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.893317228 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.889307492 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.890325644 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.889163642 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.889318306 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.886711025 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.886438433 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.886494283 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.886748019 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.886673236 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.886228936 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.88778981 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.894479234 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.8900708 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.903431743 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.888461308 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.884615594 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.887171171 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.88658688 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.887285089 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.887565288 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.892186795 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.892229777 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.892040373 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.889321821 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.887957977 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.889634845 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.892182464 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.887439187 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.889705207 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.895932243 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.895982538 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.887750756 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.89081686 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.892363233 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.888943932 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.88848645 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.88960688 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.887981064 seconds)
  done (took 139.003177491 seconds)
done (took 562.342198585 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.794900768 seconds)
  done (took 9.612683477 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.064844085 seconds)
  done (took 8.883585337 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.478946318 seconds)
  done (took 10.29425659 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.902500152 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.913555206 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.896131576 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.893625565 seconds)
  done (took 29.429349568 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.194731303 seconds)
  done (took 9.009900572 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.898568308 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.88653977 seconds)
  done (took 15.676854892 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.046306069 seconds)
  done (took 8.862299674 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.260321829 seconds)
  done (took 9.085817421 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.906903471 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.885243457 seconds)
  done (took 15.629751241 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.892014313 seconds)
  done (took 8.704407478 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.191926407 seconds)
  done (took 10.074567187 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.90095033 seconds)
  done (took 8.756052516 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.957056414 seconds)
  done (took 8.769720703 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.067231806 seconds)
  done (took 9.88038607 seconds)
done (took 164.48765333 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.893174341 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.885586289 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.88560661 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.88493876 seconds)
  done (took 29.363993091 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.922699335 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.924184479 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.931443982 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.923659298 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.915228435 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.914389139 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.926586941 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.925680249 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.916812128 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.920819837 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.922766349 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.920748195 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.924314557 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.933927444 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.933387951 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.921293427 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.923195648 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.923192575 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.91393644 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.932046516 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.921140822 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.92292121 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.888156237 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.8901353 seconds)
  done (took 47.906633126 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.080518498 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.954166389 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.042660079 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.93386097 seconds)
  done (took 9.824696993 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.890669763 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.953786363 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.940779922 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.943091277 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.94040671 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.991895622 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.942141722 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.027789452 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.017807511 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.014862929 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.896853927 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.911082825 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.911067994 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.940885612 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.995928556 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.891895754 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.890018417 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.006817712 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.951787806 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.07565443 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.890977485 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.945346892 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.940907157 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.942649559 seconds)
  done (took 48.669669142 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.890984965 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.900989906 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.899512151 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.891532801 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.891002895 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.89390347 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.898254354 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.89249343 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.911959879 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.893997791 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.891111736 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.891348085 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.897858343 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.891478951 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.891516608 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.903542266 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.906454351 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.889856352 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.894855604 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.898465861 seconds)
  done (took 39.735999144 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.888519577 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.735902283 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.233444783 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.139551532 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.889431352 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.88843489 seconds)
  done (took 31.590046446 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.900859985 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.895591822 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.891741373 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.942087559 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.024650894 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.893444 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.888396013 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.900491797 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.931548677 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.952615205 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.906873932 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.914204031 seconds)
  done (took 24.858293396 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.889750312 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.890976046 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.890189415 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.903370093 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.899437711 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.899751729 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.89728771 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.889710476 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.904742198 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.908674992 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.898604601 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.90306937 seconds)
  done (took 44.594519097 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.105055875 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.115079117 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.116272948 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.260094286 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.873914245 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.791909176 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.618460033 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.650414458 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.201188724 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.874669873 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.855825986 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.792159831 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.132479863 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.891836559 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.15942498 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.82592934 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.889737488 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160932243 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.892791325 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.894856456 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.191091312 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.949276347 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.104925826 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93118128 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.107099233 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.138304394 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.127822549 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.149277113 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.233914135 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.953635562 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.96070593 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.930551976 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.903899183 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.905538319 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.896139198 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.907196499 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166165206 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.894830047 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.89579051 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.001448141 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.818534985 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.294517287 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.01215231 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.31789996 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.023491208 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.136227098 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.897740406 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.844395778 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.943764589 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.23247589 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.006203543 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.105668792 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.819178681 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.336224557 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.024569708 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.897032042 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.900699944 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.591486327 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.134690986 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.975887531 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.309110485 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.013410761 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.894354106 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.986697209 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.892578899 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.007519156 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.081158612 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.899618695 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.892560599 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.901115252 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.991847161 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.109141798 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.894668725 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895757353 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.914526701 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.897290227 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.249013966 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.223026765 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.874998569 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.452972801 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.149064146 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.852243341 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.13531897 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.931659887 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.184967754 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.113191748 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.976640366 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.138899292 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.758519765 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.902457986 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.701907987 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.981294735 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.959885101 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.897182626 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.846283671 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.276178771 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.018842656 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.895366869 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.82235388 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.905512754 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.09753601 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.143886982 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.944620419 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.896747446 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.894960547 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.899148527 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.89885054 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.912417006 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.908855605 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.815221531 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.1863025 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.017829401 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.165463808 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.895497366 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.581314897 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.17365605 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.029011281 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.515432361 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.031268676 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.743452856 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.032881247 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.904400855 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.899343034 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.086056735 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.309752154 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.852230773 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.13109058 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.010767089 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.928413485 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.902152203 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.977786267 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.124428876 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.897365926 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.15703788 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.147918276 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.536842247 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.006886753 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.97030679 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.908826011 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.116670403 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.979908159 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.43359117 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.122854064 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.248935112 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.871316903 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.497017948 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.242433478 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29180455 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.913728229 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.850260151 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.923452734 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.604427146 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.826296883 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.903656671 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.23605646 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.937832079 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.979883816 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.900545524 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.902852694 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.907070737 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.980074594 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.97202829 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.970643722 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.825080062 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.901196132 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90127791 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.899436225 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.436572854 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.687732315 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.197335148 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.899344365 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.971772964 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.900622223 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.485893807 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.904927547 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.081611123 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.908018313 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.810296666 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.931455988 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.237915196 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.320540994 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.025031983 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.900747583 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.90361279 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.59940818 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.908946737 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.600942796 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.191293282 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.910541972 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.365005191 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.968120541 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.982568737 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.914592173 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.901953696 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.906566642 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.904640264 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.104894702 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.410558511 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.30891629 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.257077058 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.982456202 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.180333992 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.09519691 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.144142315 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.593089018 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.428398005 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.127599012 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.904777061 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904121444 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.481059552 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.909262103 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.117637119 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.10542097 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.182548036 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.217660261 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.320442483 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.908744112 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.916112214 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.145176196 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.900665376 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.334414716 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.021398353 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.336932876 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.720304503 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.183812869 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.973160783 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.913436171 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.562384267 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04604521 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.854341678 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.029729292 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.826953489 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.677286392 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195499997 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.186163855 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.891427317 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.251357928 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.202406493 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.238291675 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.537421884 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.772823993 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.953043145 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.985777252 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.909248264 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.205102404 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.935975576 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.962114911 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.90864319 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.904046432 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.9034298 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.586170675 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.982372192 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.037486103 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.693953404 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.187436014 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.806659893 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.179528758 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.963644767 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.362035099 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.952774324 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.115424649 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.90966417 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.240692416 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.944329435 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.18973088 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.861613839 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.115983356 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.126717179 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.926701412 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.908634671 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.831595346 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.744848626 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.909922378 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.864163766 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.782613403 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.909840849 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.2067827 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.293478738 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.935521001 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.908147091 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.313020948 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.404566965 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.097044838 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.914200416 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.121200384 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.032025928 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.825448921 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.390523212 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.485190815 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.607882419 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.920176312 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.108604303 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.322273347 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.971660569 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.937016489 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.979247842 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.1827981 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.89262863 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.90822832 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.428101234 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.0047292 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.152702843 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.228282399 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.201463322 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.388280207 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.158049059 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.904909312 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.135700821 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.283647801 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.159891328 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.84376527 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.006035957 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.124456159 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.206971949 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.797104797 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.619563931 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.155116179 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.915830424 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.837556755 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.118572311 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.41451707 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.281187048 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.451667228 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.865565639 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.934025221 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.394487871 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.927161696 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.847064663 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.913928311 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.862672622 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.128434563 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.860973461 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.942871712 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.469175441 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.255125779 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.327417359 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.931403462 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.943956405 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.835700964 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.687505121 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.861978058 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.034797794 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.952500883 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.981435609 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.914497994 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.113608838 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.351290363 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.967561581 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.45113242 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.128460269 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215616606 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.186904826 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.230669531 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.874187097 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182338552 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.865537272 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.17179679 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.993603969 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.987130206 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.91267175 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.914234644 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184183745 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.323569505 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.277882558 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.940588428 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.328354532 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.018991947 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.91327569 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.916528825 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.174226109 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.141168942 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.126233822 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.988948221 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.113448517 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.984023687 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.425340324 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.917617097 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.915673928 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.05003524 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.774735406 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.720944979 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.218380347 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.660858631 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.114230395 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.432126392 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.765813968 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.862728454 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.950245448 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.911960626 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.91198341 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.022032239 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.150732235 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.193325838 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.678196999 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.916094127 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.913917318 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.746909229 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.642405699 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.150359267 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.923645878 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.949962044 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.915151451 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.030136087 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.911945721 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.192580093 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.972325339 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.913182549 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.918929009 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.1277908 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.426818702 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931949041 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.613736874 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.116107178 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.917488873 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.396935449 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.384297302 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.943477027 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.948374903 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.874523293 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.168308891 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.446537192 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.869635139 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.906723975 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.138579084 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.916093994 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.184744311 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189114348 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.915018962 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.128593549 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.211599636 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195921924 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.926334817 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.765839038 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.915490401 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.200065651 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.978276859 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.915129234 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.924344201 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.915192316 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.656749444 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.399763488 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.075968119 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.324501165 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.768868415 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.67767235 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.919310926 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.919686418 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.696788451 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.639410377 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.131869325 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.19738076 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.86034898 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.117987176 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.621552573 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.7939372 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.178696259 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.840183508 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.915868816 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.191872355 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.179752938 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.857559422 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.917553444 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.479675403 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.914071807 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.996560458 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.914656183 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.041648541 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.194826203 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.380680188 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.041703024 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.557872062 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.708884623 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.858277794 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.971390631 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.723871122 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.474189145 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.698751148 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94144356 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93509225 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.839829485 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.914863843 seconds)
  done (took 1651.235661351 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.951735181 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.962366403 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.922149605 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.923786318 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.929024331 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.972141758 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.934054892 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.919919648 seconds)
  done (took 57.351971866 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.918124328 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.929039569 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.919906181 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.912961626 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.921566398 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.909805935 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.07154546 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.919987565 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.916152938 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.915442997 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.911490686 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.911032227 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.645600752 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.941977025 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.922267723 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.917070906 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.929968244 seconds)
  done (took 75.356436233 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.917364128 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.279399233 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.971701406 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.913787243 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.949615272 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.918107783 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.901283823 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.919876278 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.914298355 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.143480729 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.203948512 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.938746461 seconds)
  done (took 90.816012371 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.912413138 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.908223842 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.908198304 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.908520672 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.912505212 seconds)
  done (took 11.390614679 seconds)
done (took 2164.543804307 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.16894273 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.968685822 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.008622596 seconds)
  done (took 5.812521571 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.054591734 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.099454343 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.211540486 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.977859019 seconds)
  done (took 10.187206922 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.16413042 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.275097033 seconds)
  done (took 6.274102958 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.298235735 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.91712648 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.283730916 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.909247027 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.912301261 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.911593167 seconds)
  done (took 22.573214078 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.908938006 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.909198784 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.908730634 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.908273 seconds)
  done (took 9.470489391 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.906266007 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.618977036 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.911486527 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.920822642 seconds)
  done (took 21.193155029 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.049150232 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.020542862 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.046592359 seconds)
  done (took 7.951387378 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.12803117 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.74743018 seconds)
  done (took 6.710617943 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.052081811 seconds)
  done (took 3.887993696 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.937060842 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.179263708 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.401186391 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.454859023 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.532248931 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.692265785 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.25284397 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.177994613 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.347013234 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.368516142 seconds)
  done (took 25.179285262 seconds)
done (took 134.745167249 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.288952499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.948995896 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.128224822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.297481288 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.163265249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.126379387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.15136676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.295675227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.979765273 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.960999607 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.294016951 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.160218953 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.088905192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.947216738 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.099812703 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.946116007 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.161344411 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.305313803 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.979370609 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.201317455 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.156426178 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.940593723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.139487858 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.953988922 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.163586602 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.082204878 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.484682897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948829003 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.125067816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.497614292 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.087635506 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.341762748 seconds)
  done (took 170.301168856 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.928717673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929620954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.928031381 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.930560915 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.215851946 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.930398692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931895821 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928804473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.126148501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.122444518 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.930148672 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.210561033 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.932175688 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929109488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.929876704 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.929759144 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.284770343 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.930001515 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.930083873 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.930085638 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.930321324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.077251064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.929144135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.069341523 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.274506592 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.929742635 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.930677104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.929651553 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.930584453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.931186752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.92964671 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.932810667 seconds)
  done (took 209.560781573 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.930539169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.933995937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932978626 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.93430994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.931901294 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.932765915 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.931467892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930531777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.678115536 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.663567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.930485327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.931808458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.934011188 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.931340671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.930275611 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.931522204 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.932384771 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.932852622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.931834137 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.930985915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.931540761 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.650748352 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.939885724 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.785303818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.93143664 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.935577492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.932340338 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.932057317 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.929841516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.931012552 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.931653262 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.924380497 seconds)
  done (took 222.732428507 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.164021567 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.9248241 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.924603745 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.982723696 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.927023849 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.921725518 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.932398699 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.173871114 seconds)
  done (took 19.801815559 seconds)
done (took 624.266309047 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.249262197 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.110713145 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.102994292 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.948327322 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.202413927 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.998081394 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.936321978 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.003393474 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.786068527 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.015340866 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.598900433 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.959470492 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.690245609 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.96500108 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.066472848 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.994930941 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.503425551 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.600591908 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.079791898 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.996933579 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.127058977 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.886189313 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.01459583 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.824316472 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.611718484 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.928350411 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.00036786 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.504557644 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.948796847 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.096236165 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.574686878 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.236901563 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.95504644 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.93742009 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.986399752 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.967844508 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.172341512 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.949755201 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.067418485 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.684959297 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.01514394 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.696811146 seconds)
  done (took 104.845123359 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.926150131 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.924867819 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.922557585 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.92276385 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.932325175 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.922846773 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.923020506 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.925482539 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.922563982 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.922942831 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.922203905 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.932616884 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.923700125 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.932439834 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.923057141 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.922661442 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.922902017 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.935759429 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.922812377 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.923205817 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.922799715 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.923392627 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.919643385 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.924102913 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.923885734 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.923807156 seconds)
  done (took 51.90525046 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.919438061 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.078362253 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.172608192 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.943470021 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.91940087 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.925013496 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.942116766 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.92845937 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.924111512 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.922480771 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.014250847 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.927945705 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.939176172 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.170108397 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.938889929 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.920770889 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.919525769 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.921656733 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.084993922 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.937101174 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.940794121 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.928337283 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.939873946 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.939024969 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.922598486 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.921276799 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.925121571 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.420589906 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.934287844 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.017673947 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.989014779 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.944937366 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.338969678 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.183156734 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.977268097 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.929776901 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.923021493 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.020668711 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.933119306 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.922162866 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.940258125 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.932100689 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.170825889 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.457943459 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.93845013 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.922273898 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.432094107 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.034769304 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.968030749 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.93178577 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.177437344 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.940994328 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.92337395 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.924988456 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.960463152 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.9370027 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.925830359 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.290042776 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.941629495 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.944051601 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.931842713 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.925223047 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.094904611 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.937707855 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.081114872 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.93668715 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.930940332 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.925358075 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.175616745 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.940752343 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.471639131 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.937912098 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.924852823 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.018529031 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.088424211 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.459017046 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.937383677 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.092286355 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.353783302 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.952358947 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.936967209 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.41064027 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.955543962 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.935925689 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.924634352 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.924492169 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.925207018 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.96879932 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.939432947 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.38957063 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.471404052 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.309033673 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.955434326 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.940707895 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.928806952 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.291971271 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.937941598 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.925278613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.164655129 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.482915125 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.941279605 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.933266893 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.446960962 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.942744501 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.944660596 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.936023997 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.182499813 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.941770696 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.968737838 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.927104209 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.931931469 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.928947256 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.944979938 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.93671041 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.925775556 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.438600224 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.038738151 seconds)
  done (took 239.192320059 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.926904648 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.924448133 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.924543204 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.926485891 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.92362564 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.926728779 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.924462067 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.924989553 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.926654834 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.925126373 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.924338155 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.927398252 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.92768676 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.930616964 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.968387989 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.927885943 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.415886835 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.928137895 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.927293187 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.926735257 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.4843575 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.931907171 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.926572162 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.92853541 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.925588922 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.92511066 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.932732886 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.964719925 seconds)
  done (took 168.934175608 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.927279967 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.042323495 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.944775776 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.957111387 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.934627426 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.92767319 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.027377963 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.946639997 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.935064282 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.927852105 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.929327947 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.989695021 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.942817362 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.03293263 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.962590987 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.04215541 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.037195122 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.939874705 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.933336019 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.933125498 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.96106689 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.941623389 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.996123405 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.060425295 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.953921155 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.043767684 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.951330816 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.935584668 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.934683662 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.046690765 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.951718798 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.995129034 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.961423868 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.952447518 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.051644473 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.04785806 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.038551315 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.038546716 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.94005359 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.934060142 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.933189402 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.932897929 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.045532261 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.950973359 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.93662381 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.04893017 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.953381977 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.93475275 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.935120454 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.933887592 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.946836735 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.95101074 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.999662337 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.062882154 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.974536676 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.959987801 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.034138058 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.057313613 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.936557179 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.033005891 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.93970909 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.047064951 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.957655931 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.936946399 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.937013567 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.939573817 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.963908507 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.045050493 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.040253595 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.942079794 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.035885957 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.970871082 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.947370368 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.938003393 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.935225386 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.048371551 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.05673633 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.970081209 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.974091621 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.968490369 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.943462625 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.937026737 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.936326617 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.952279659 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.943201608 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.04899785 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.052082071 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.943811184 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.937852774 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.938234097 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.937607925 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.960965833 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.058558446 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.975165201 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.044405545 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.00272988 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.010402944 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.955025603 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.949027848 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.941355573 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.998657927 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.955907393 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.949494722 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.220684916 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.995765585 seconds)
  done (took 209.652017892 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.315101729 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.981810664 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.99194636 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.265916436 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.314214552 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.885216255 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.983156159 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.98549454 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.005890261 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.208472671 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.056407697 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.000732732 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.97300717 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.957937135 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.981139904 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.008080272 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.988294942 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.334460419 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.190562731 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.464060857 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.9760404 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.288350402 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.308926891 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.562644303 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.040876309 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.380567755 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.59286281 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.144238006 seconds)
  done (took 65.057987696 seconds)
done (took 841.437746906 seconds)
SAVING RESULT...
DONE!
