cset: moving following pidspec: 30373
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.372363143 seconds)
loading group "string"... done (took 0.550489442 seconds)
loading group "linalg"... done (took 6.854859957 seconds)
loading group "parallel"... done (took 0.156597209 seconds)
loading group "find"... done (took 1.195754974 seconds)
loading group "tuple"... done (took 1.800045663 seconds)
loading group "dates"... done (took 1.211336391 seconds)
loading group "micro"... done (took 0.298302049 seconds)
loading group "io"... done (took 0.910732729 seconds)
loading group "scalar"... done (took 38.439344917 seconds)
loading group "sparse"... done (took 11.754342732 seconds)
loading group "broadcast"... done (took 0.926777723 seconds)
loading group "union"... done (took 12.4651059 seconds)
loading group "simd"... done (took 4.338945818 seconds)
loading group "random"... done (took 8.923998364 seconds)
loading group "problem"... done (took 1.898529281 seconds)
loading group "array"... done (took 20.349264501 seconds)
loading group "misc"... done (took 1.69121365 seconds)
loading group "sort"... done (took 3.227445684 seconds)
loading group "collection"... done (took 16.795066347 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484503195 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124007835 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114004427 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118081916 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.140409836 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11464229 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121429761 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082975941 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.844387369 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139872703 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117543584 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409924342 seconds)
done (took 4.995391112 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174087401 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082805169 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081944386 seconds)
  done (took 1.305815467 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065521624 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120994438 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067364125 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066955332 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06697264 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066814754 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066056756 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066202646 seconds)
  done (took 1.662742291 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072669807 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069151472 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068609341 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067601041 seconds)
  done (took 1.419277517 seconds)
done (took 5.780875211 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763095492 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198855085 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182532501 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.391172463 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.126785304 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.162606689 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636989076 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.340630417 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182850347 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08025957 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102609875 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319976325 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.1064008 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633761803 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074089881 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089941898 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137657306 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.409526081 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067143796 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082151758 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088965487 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131411836 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087945339 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075310586 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143950361 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067884851 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128292872 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080469781 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066472368 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206449236 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173268973 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658700516 seconds)
  done (took 10.176638543 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095910313 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097056496 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068491367 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123367614 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099088118 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072027772 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073314773 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069326743 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089104734 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131110727 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091460613 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.102824206 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065992558 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.06919288 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084132828 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204434763 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079848623 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081151194 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070513041 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075545124 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105778463 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077847894 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077602516 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077211389 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128590532 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179733129 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096145607 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097735521 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066837573 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080162057 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11567636 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12610391 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067930943 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068232803 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126622293 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097385144 seconds)
  done (took 4.612185125 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.902048678 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138726803 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089739917 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160654293 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067825637 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106493008 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083876827 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065333436 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085378465 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.199145648 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.104260317 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.432029827 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110889133 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065106394 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.08450407 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067469213 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068637819 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066991301 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.352083674 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109843403 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112353369 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083783059 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073633988 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072775096 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341426821 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066961958 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066522929 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068085851 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058038262 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090508854 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112049984 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068616528 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.974216329 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.087412833 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06739535 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100680335 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163637927 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086745859 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133593175 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065598926 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065063776 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.146597753 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073478336 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065954896 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081959482 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102107312 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.102339186 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.20263846 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067368559 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161285808 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067319148 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083706925 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.736267965 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153133403 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078862715 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068212151 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.245402712 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08497401 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0672184 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064590414 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.205558298 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129258374 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067590303 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066379669 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066499423 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068456327 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350598923 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067203381 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.01644574 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067397891 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07808045 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069055716 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066804843 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072643043 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072514263 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064744986 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085061683 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066736972 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068539754 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066259069 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066188643 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.06892171 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083544764 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.190197162 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066647787 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067966567 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065006843 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08635231 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101952113 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069303726 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065381393 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100529546 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068371428 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067798136 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101620439 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066839641 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083851643 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069500469 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113528025 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066185401 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.123698955 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067339412 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098892997 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072781763 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099374254 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.169225711 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067963873 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.225380611 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065230879 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065074691 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067024423 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065392399 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067752866 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068943407 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079462688 seconds)
  done (took 20.273779796 seconds)
done (took 37.106104469 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272735896 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074469353 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077362128 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074486651 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075163607 seconds)
  done (took 1.801003265 seconds)
done (took 3.008821827 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.118921153 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097924434 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064037637 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095029024 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064559595 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09972648 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099020253 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081497107 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099340835 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064968711 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096001061 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064420614 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064472459 seconds)
  done (took 2.33713329 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08307622 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08332861 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069981136 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082559139 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063838049 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082155501 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08039406 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088117703 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080595303 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072301832 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064698065 seconds)
  done (took 2.054232369 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081367434 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083083392 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069646284 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082508876 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064230959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081527027 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081736994 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085255656 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081220044 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073037371 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063916651 seconds)
  done (took 2.047958674 seconds)
done (took 7.636979695 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07761842 seconds)
  done (took 1.268907874 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.583833373 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.068911972 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081185654 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111422616 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182566685 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118345434 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274546649 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086618513 seconds)
  done (took 8.879399254 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101341812 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067973401 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072489586 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068926115 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071165387 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068244785 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071701662 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069435681 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071744972 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068410239 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069439607 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068792292 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071368747 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069122553 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070389646 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070819182 seconds)
  done (took 2.414503229 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09212069 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089543201 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073801795 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07422642 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071826159 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071981623 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074286329 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073118353 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070877675 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071998454 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074741919 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073097241 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071210974 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065348764 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074090314 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075183977 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070834221 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073889405 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074921769 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075009472 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074578904 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064432742 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071616453 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073618602 seconds)
  done (took 3.074443083 seconds)
done (took 16.837014028 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111459799 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071619369 seconds)
  done (took 1.382879661 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080947692 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082977331 seconds)
  done (took 1.370791842 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082070113 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065894919 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088728332 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077724945 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066081409 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066434077 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086561476 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066243442 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066149135 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066280068 seconds)
  done (took 1.939451203 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068287704 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077378616 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070274606 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080656358 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07337265 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064548931 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073056914 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067928041 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077486255 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063238103 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070901885 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081792376 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070978909 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083622396 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072151159 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068462499 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070264572 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067138519 seconds)
  done (took 2.51300429 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065841143 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06748173 seconds)
  done (took 1.346491673 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066671653 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0637891 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066161801 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066242687 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063541211 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062861276 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063442657 seconds)
  done (took 1.662525441 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.37187833 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110416356 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.296236328 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07286911 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083101416 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248831796 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065882686 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070364375 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070371531 seconds)
  done (took 2.642314778 seconds)
done (took 14.071829882 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078575605 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084719716 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094655694 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.339896255 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091859271 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065915268 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113898092 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186589547 seconds)
done (took 2.277547917 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209261094 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.563189024 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.380731333 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.201565033 seconds)
  done (took 2.361572251 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.31516935 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093210212 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061265933 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069122535 seconds)
  done (took 1.76025062 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066346908 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069387643 seconds)
  done (took 1.356317199 seconds)
done (took 6.910025915 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066324968 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084016566 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068441181 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066961865 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064815937 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067331693 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.065751748 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065615085 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067838617 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068343419 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071159473 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068064162 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068126605 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067976 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065785935 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065825901 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06814182 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065597221 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065661008 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065490913 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069016485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068070984 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065390147 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065677732 seconds)
  done (took 2.880034727 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083083757 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06623707 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07112152 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071832465 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070610148 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071357199 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071068665 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066699068 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071415667 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069442752 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072241985 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071468567 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068768325 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070472332 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068663496 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070123586 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072821991 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068237438 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070778607 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072461245 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073004605 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068797367 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071934281 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07226041 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069950646 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069612288 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068547834 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06624884 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07135734 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069921533 seconds)
  done (took 3.350422555 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070285619 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063900111 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064692785 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070524828 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063340868 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064827007 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063595061 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064207541 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064724527 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06389488 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065532246 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063431626 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063955549 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064574502 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064855957 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067472906 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078910392 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064353102 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063880355 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064421859 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06737065 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06373149 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063621685 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063746678 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064582622 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065592549 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066214399 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065527612 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065683081 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065619748 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068505995 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068641618 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064127674 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070484961 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067052042 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063645393 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067175035 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063434498 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063976179 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062939996 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063316948 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063426101 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063839312 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070519139 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063704488 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065176687 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063400917 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064502413 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06417376 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065909758 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063612116 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064239536 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065770437 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064606182 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067584154 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063195022 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064567536 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063211745 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064332562 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063617983 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063322141 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063655893 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065840253 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064567243 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078250323 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070281823 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063547075 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065283659 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064917748 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.06610996 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065044055 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076877395 seconds)
  done (took 5.958899682 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.202653994 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086590373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067020442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066918819 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063799878 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068097994 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069458767 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066214491 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067981955 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071791689 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066448975 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066985348 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067039505 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079047803 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066420362 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06638907 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070972654 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064139854 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066108522 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069137491 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065929941 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068890747 seconds)
  done (took 2.889270072 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.15339589 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070597024 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104462566 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072722931 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067900493 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073063619 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069534995 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069256366 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06946732 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067977944 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068012194 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06962466 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067338612 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06806293 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067915756 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068155953 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069897104 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06841299 seconds)
  done (took 2.602663298 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07641263 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066352571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08592515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065951257 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066328598 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06807057 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070380313 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074191485 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068374587 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066189844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074332005 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068256342 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068597625 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066085312 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068505336 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065893256 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068119307 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06571879 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07489016 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072312454 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07124389 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075691927 seconds)
  done (took 2.784419528 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079058981 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068389043 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082556027 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068522357 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063567569 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066596635 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072245348 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067828351 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072011736 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069923555 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067895917 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06596617 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071574833 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068078888 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071253015 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068234684 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069326202 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067727379 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070031343 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063742295 seconds)
  done (took 2.632726145 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086420724 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068457516 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067885923 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075234439 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067765872 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067598352 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075152154 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069107566 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06956398 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089156619 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069166543 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069507223 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077025155 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073023729 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067503371 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074705975 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074811926 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074407498 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067274738 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06696403 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086744968 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067506583 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074683525 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067241998 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067439727 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067728578 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067281538 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072509633 seconds)
  done (took 3.261195633 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066766029 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066143926 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06347494 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063337414 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063906148 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063645189 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063841456 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063978625 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06600218 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064103905 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066490179 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065967669 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065735778 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067431462 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066185753 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067750146 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067823723 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065351526 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064996236 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06530244 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067046412 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067161743 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067326583 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065399656 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06525983 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067475271 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065099197 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065421719 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067633345 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065194613 seconds)
  done (took 3.213322471 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074772877 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072831392 seconds)
  done (took 1.391697789 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.06352007 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080123175 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063280569 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069870065 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069406591 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067283691 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07305022 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069871778 seconds)
  done (took 1.794911933 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080765374 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077069259 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067452297 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079229172 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076450358 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082763317 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132402226 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066919914 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073012594 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064825809 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079633553 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065633757 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071625871 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066250545 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071906245 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072156052 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064065923 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072076477 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068419803 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064862379 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067603744 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074579254 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068400388 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061877273 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067421564 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087315964 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076682565 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065967888 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068823432 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072718485 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071370308 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060336952 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065371825 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066217724 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064186216 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075621434 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080951176 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068905636 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074463382 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067139474 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076338381 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061607817 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070745867 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07251266 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075603497 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066491842 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066449162 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061449531 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064257398 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068043611 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06195643 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066122711 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060654334 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075440398 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069407724 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075925216 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064659547 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067294908 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06921393 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069711267 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072449725 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067863155 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068771662 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06589376 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075948966 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07061476 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074923217 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061685142 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061544434 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066268308 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078106023 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089267788 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072334522 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06671347 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067171417 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064722263 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070439188 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068421755 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072154561 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072527041 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066531145 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071617642 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074353896 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067198947 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069430438 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074791138 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065032783 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069303233 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064674597 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08250441 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065798674 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064810505 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064600686 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076699159 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07047941 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066404859 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064240445 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073477831 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061099177 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067091183 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067904539 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068256179 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076446048 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070739681 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071049558 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07420888 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072734102 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066483845 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070264201 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063183217 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066499803 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064655249 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072299553 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060041212 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067962873 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066299411 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.194611231 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075986993 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065993091 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067339087 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074242783 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072514352 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065973843 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063833398 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.06989406 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067893558 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072127513 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076395216 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06785291 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063912031 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063835327 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072549809 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067253328 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070347607 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071827202 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069402116 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060965376 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065426487 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072687135 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074961991 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067353687 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06750861 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072165719 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068045727 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066525067 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072567347 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069549289 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066164231 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071795526 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067650004 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061935165 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069139479 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0692749 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066046419 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070550998 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069266148 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069027846 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066993691 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065436967 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074585462 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067886276 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065646113 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067204507 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065473278 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076429736 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068793397 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061911146 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063827615 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07517016 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065095834 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066478255 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065969721 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069176668 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066926551 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064721918 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06618788 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068694779 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076362589 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070044063 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067556406 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071332578 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077745298 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066718994 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069161807 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066106139 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067326453 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067036517 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075074906 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071876481 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07144779 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068887383 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063203797 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071690758 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073736944 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065922369 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064004156 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065762155 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070687741 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072263997 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070733611 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06701803 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064658263 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067111353 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069685104 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068611775 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066253556 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065775136 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07317484 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064873474 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073104035 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067294731 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076005237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069866641 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061718112 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069605652 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064679166 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072544078 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061610516 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064177037 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065959985 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067506535 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065636772 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069121489 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06077883 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072491162 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072841578 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066065406 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065328484 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065422179 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071698065 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067051195 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068944262 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068629239 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.07096619 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075374775 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065559072 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068936351 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.208566796 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067389321 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061805856 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072521665 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065640767 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066399673 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06616198 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065429331 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069841455 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075139611 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073812562 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06092096 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068992147 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065795082 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065880685 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062232577 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071397753 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069355284 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068011317 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073713081 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068494777 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067544873 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070693216 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066603097 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068196504 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06771687 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069516912 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066938367 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069117882 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066885109 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069722613 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065659564 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064961461 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068540689 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06703704 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067207094 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072232597 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066314434 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066798261 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069034766 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067744372 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067048696 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06722831 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065969348 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070291443 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067603185 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066575994 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068998826 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061943254 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07372356 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065862179 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07406869 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066600347 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063753309 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073697944 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069559044 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072056085 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067426796 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066785731 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06755356 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066525761 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069567678 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073598398 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065124464 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077946749 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07484037 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067242084 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069293534 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067387557 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068212612 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065717811 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067173988 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067043414 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066709304 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066618222 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070923547 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069056072 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066882778 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06812176 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067457557 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066770739 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067415932 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060981717 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066340448 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065997912 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066439434 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075899218 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066781041 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066061119 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06520024 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067849442 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065551823 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063542979 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074722545 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075306278 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067104549 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073609946 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065815165 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068028331 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076565934 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061111747 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064878054 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064655996 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064586194 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073347497 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067356033 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075282195 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066617481 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065576635 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063629461 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066406637 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064581288 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060441513 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063707166 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068953157 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064670791 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064210688 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065282533 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067995087 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06570005 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073937638 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064819255 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.0661657 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.200529698 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063665659 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065687277 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066523149 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06903932 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067867581 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064816608 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064313225 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065988047 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068194002 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069830311 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068758601 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06912603 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076052461 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06675971 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070130549 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070401866 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06162022 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070122053 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067392116 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066193126 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066301329 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07033086 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070531698 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068206399 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075097818 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066453907 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067723212 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066537753 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064262197 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066744163 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065998123 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066081998 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066310529 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06749428 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0750295 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065285363 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069866343 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067470442 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066871434 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07378579 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066873347 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069625734 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072834024 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067189362 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068275852 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074926302 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072024905 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070112282 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069249199 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070113808 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074654002 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067923837 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.0738094 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068340942 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069988976 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070617594 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066897397 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068044197 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067199016 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067556325 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073402346 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067650231 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066133719 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065928239 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065348154 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068309622 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069846733 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074333612 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069350717 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06962641 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06241385 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063890527 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067672772 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064556019 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069499628 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069227123 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072065891 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068796656 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067032007 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06575581 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.07567999 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072041322 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071039491 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064484448 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070043882 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066728055 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06879319 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06758432 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066821272 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067800189 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07047141 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068113054 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065734217 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073352624 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069798386 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067191306 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067983449 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067412388 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066794438 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061950374 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067347605 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06881053 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071960107 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068823075 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066515381 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076431585 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064130105 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066756901 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069047415 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065322365 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071433001 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061588728 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067423641 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066722277 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06639086 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061129314 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064735125 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063270088 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.0671049 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064655883 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060377791 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075008553 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073511803 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.202611991 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066218615 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065727105 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062467392 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062702431 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.06569682 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067622404 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068708462 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076561207 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066237328 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065611218 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062535889 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067414509 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069425048 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070461414 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065242055 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062540849 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066221497 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070945365 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073416753 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067038104 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068544751 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071870909 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070663823 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067009742 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07247427 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064246264 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072208578 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08037465 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06708297 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067924622 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072978516 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074421143 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066775019 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061704887 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067082785 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069576637 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066967695 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067081822 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067861503 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080269884 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069460099 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065281936 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065204748 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.06892689 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067184848 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074223542 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067269966 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067008342 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071053296 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068888613 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074880352 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069761537 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074327695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071003106 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070220335 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065634394 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067402242 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065004484 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065694393 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067789528 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067595172 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070957775 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075481154 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066434831 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076798241 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074871489 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069191545 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063517239 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066712407 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06603592 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061818244 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067173965 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066640066 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06650044 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066340579 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0676684 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069187161 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074117521 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069609982 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06963736 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068242502 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062780468 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071149243 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070989599 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06965063 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065061791 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06831276 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067881655 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070485057 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069429001 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064188632 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067802537 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067875363 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066805454 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061946356 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072831962 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065081151 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068571756 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065907411 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066450086 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066844494 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069678439 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070943712 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06746188 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068515191 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069908733 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0683343 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064612623 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063870957 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071456887 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064425695 seconds)
  done (took 42.720685164 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100030917 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063067612 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06165331 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062043338 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07347294 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063366037 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062355616 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062896532 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063208365 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065169355 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061951721 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062397796 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070715891 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077222261 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073584018 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066622649 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062029454 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063121416 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062011211 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06303656 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070811811 seconds)
  done (took 2.747168084 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073348011 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070170402 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072483802 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075927477 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067461404 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070538607 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072283357 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07096141 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075356505 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066914193 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075421248 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070485341 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066902822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075265515 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067309421 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070649493 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074941709 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067161404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070168365 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07222129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070160287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072124216 seconds)
  done (took 2.878482714 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067191751 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066408994 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06782212 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061775572 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066774998 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061365011 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06925822 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064103344 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069249297 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065314762 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066722366 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067875225 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069311711 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063282503 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06822748 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066387014 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108736795 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069017518 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065395919 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068337855 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063629043 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069433955 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06351168 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063961771 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066829603 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071207673 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068203973 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066466541 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067556303 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066954339 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067804785 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065651788 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068647704 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066605466 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065577257 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065163696 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065843969 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066026045 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061799086 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064224039 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066573798 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06190664 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066792199 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067162794 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064193215 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064195151 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067412419 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065343686 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061785686 seconds)
  done (took 4.596475271 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078897202 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1081453 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067886166 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087965507 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079268733 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075719606 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069988904 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088498124 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063722242 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064027011 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080835399 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078844344 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065598925 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069878864 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069278122 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065615797 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066740003 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064961442 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069274026 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06568662 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06963222 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07205605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079502017 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079126993 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069416579 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06473651 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065679875 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069967019 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077741125 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070207743 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070589401 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071523421 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080139904 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071043661 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065051416 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068128422 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081432156 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065777308 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067978101 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064110275 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067703189 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069456837 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071827713 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081085235 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06607257 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070693696 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065563019 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06300286 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078128477 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06815343 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073289331 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079828371 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068885977 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065638001 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069971866 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079755372 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065487595 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06377545 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068658506 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077884594 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063464469 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068956611 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078826871 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067860093 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.0719823 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079288015 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070872665 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068998713 seconds)
  done (took 6.338717112 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075129104 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071679686 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080655725 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079462832 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071964394 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072243027 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071960779 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072093906 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071809564 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076525983 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072046392 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092365146 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067521039 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07435579 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072095882 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072412427 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072122234 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072336048 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072162177 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072225652 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071893742 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079156166 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071632649 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079371127 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097667066 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067543482 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071885121 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071780516 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079511836 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071680685 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079044053 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072112077 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072012603 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079508565 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078765205 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072219621 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065607299 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071879729 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071905495 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071919643 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068123288 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07948057 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071869159 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067901349 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071956639 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072494381 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079444902 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078717246 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074494029 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076397644 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071993792 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079438599 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071756094 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071826071 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078937355 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104074465 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079289178 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079596754 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071695864 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079359587 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079542833 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085318764 seconds)
  done (took 6.012802138 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082708882 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07407901 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075491553 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061620995 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064346306 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06976444 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064191186 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064575225 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074282319 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075410508 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077377462 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069337231 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072319433 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076290233 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069392127 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072174087 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069428044 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069416607 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073928899 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069495456 seconds)
  done (took 2.764863758 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074077602 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082688543 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066951299 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071725269 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069018119 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071510045 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068408309 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068682246 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066847805 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069020963 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077918857 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07778913 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069321636 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07324459 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075425894 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071709046 seconds)
  done (took 2.484253269 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07456565 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071924193 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079534247 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066161702 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06407076 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062394693 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066190538 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061576934 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064647303 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079795143 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068155221 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070145758 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06789086 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065770551 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063237675 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069356541 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062688003 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063605453 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06618558 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077966627 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076436754 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064526526 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066516724 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066078943 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06617681 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070994341 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06535271 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.0637903 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063233859 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066523228 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066612595 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06958286 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063303519 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063988458 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064707919 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063442361 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065557176 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066492916 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067919529 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065790522 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064382835 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065124605 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065134828 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066741614 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062502595 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066042355 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062511644 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068122122 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063604886 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06647724 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065302083 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068415567 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066518834 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072045447 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068597329 seconds)
  done (took 5.015281124 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07887935 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069521273 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062570561 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064129941 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068995629 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067695864 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069886942 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067461202 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0675993 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064235485 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068022657 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068856663 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067761421 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069902789 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067596186 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06974404 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061901513 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067820098 seconds)
  done (took 2.565631199 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070848136 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065743453 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073155761 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066624993 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06625698 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06884345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062584373 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.0645867 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064666429 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065964463 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065780229 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068272187 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064697229 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069889731 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067555037 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06694154 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067929836 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064519488 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065996143 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062005862 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068195598 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064546369 seconds)
  done (took 2.801491582 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071538867 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091999907 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.138178329 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083084575 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081125234 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078821975 seconds)
  done (took 1.881611465 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090902468 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078190667 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066582771 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088125173 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073098595 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067279467 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067228233 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067841679 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075749735 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075923566 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067849352 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076003544 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075544676 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075272242 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072957245 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073107457 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06738889 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067130788 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066458509 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084109666 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067679115 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076039637 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067641459 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067603696 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067942033 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0750167 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076338447 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076536655 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067445835 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075709916 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073505408 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069902581 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078286673 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078012779 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071354228 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076862745 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068159939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083998847 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073266916 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074981321 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069338903 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073355221 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075515836 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072341405 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075721435 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067793645 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072342888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067642876 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068367993 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085541849 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073500817 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075004371 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073200674 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076321355 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075727954 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085342171 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075682353 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075202849 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073519085 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078553462 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075499739 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072879129 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074841697 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076162694 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073059009 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075000772 seconds)
  done (took 6.219667005 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082024332 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0864023 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067709644 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076492468 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075277215 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06777785 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067829217 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067730023 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069470923 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070027466 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109037956 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06776576 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075120523 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075207277 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067716533 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067937275 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067766162 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075540617 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067590478 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085412826 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06756712 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075103475 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074991619 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074853653 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076252596 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073137822 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067947573 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067676129 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06765803 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067493837 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072443136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068323323 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075297195 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067240943 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075098149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067855326 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067677428 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072956961 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067605733 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073164289 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075269032 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083310988 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067825302 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0677699 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075647198 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067460819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067645627 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067143667 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067491707 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067316895 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076104634 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07584948 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077083209 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077672162 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068670265 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067732962 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067760371 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067573174 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067929557 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072926152 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075033035 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067226789 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085343562 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067463129 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067614478 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075239969 seconds)
  done (took 6.130213944 seconds)
done (took 129.135994378 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18375286 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169856211 seconds)
  done (took 1.686422371 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068199381 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095488244 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076587052 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128087144 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067405922 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099963298 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098968873 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078545209 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066764119 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067052363 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06684905 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068072062 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13080819 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067186482 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066468295 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068609064 seconds)
  done (took 2.661235263 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097927754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173922161 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099056026 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065627562 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096803863 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07328711 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065607393 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074747062 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071068035 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065411738 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072699623 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070772129 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065227111 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070601437 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07101714 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073075086 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065183723 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073081456 seconds)
  done (took 2.793238764 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099549866 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091027406 seconds)
  done (took 1.539748257 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154450088 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105146862 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.150167537 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.335464766 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159666099 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230358809 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127448488 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125506909 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11692242 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122362474 seconds)
  done (took 2.972144067 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098510331 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.147553179 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255793245 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115394218 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072738579 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090986979 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116342627 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078001108 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077909298 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077264151 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077412426 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07617686 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095898747 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073563069 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073936229 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076198124 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098738002 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07240339 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075143195 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073992612 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096272429 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065962718 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073613458 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072793128 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074784987 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074491861 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066087855 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065870429 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073890464 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074120536 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076999291 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089450117 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074807746 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103907852 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07087054 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104809062 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076359107 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071478676 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073669805 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071687281 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075464301 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075694251 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07284377 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076074361 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066073081 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076421029 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066171001 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065656969 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078316076 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067333881 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078152158 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077099337 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104178038 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066788507 seconds)
  done (took 5.899088361 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.662146121 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10327258 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070196089 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107844973 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096454216 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07233109 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.690449268 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093100343 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.176071957 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092124211 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088038149 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070228794 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080783027 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083245744 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109055552 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101153073 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09361423 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071339011 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100843669 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.098265744 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068075727 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093274822 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090367644 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.375564695 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067239638 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069757618 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067725679 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070102024 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.109780843 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078191891 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070442709 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119888933 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084269604 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.120653728 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067361999 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068212139 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068085344 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079360134 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177297143 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.132222154 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.129031045 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067560381 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067853774 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069038937 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089552737 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067550865 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109618316 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080375687 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117537687 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07021938 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069885698 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068348574 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068837248 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079719774 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077222839 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08055822 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.223825921 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068444802 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067872684 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07101309 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176655614 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079115557 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078729594 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091892602 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.129101485 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067849081 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.692919922 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083955039 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067424718 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068988455 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067141668 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069417571 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.199439361 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.119518547 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.357413648 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071142364 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070063722 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069285659 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.149099301 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079002755 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068865055 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.112002107 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068319354 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068927642 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070180674 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069881083 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.117928722 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080703097 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070033614 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068496046 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069929503 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069093944 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067358926 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160579009 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08011482 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079225119 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.159142949 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069321205 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111037562 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080056707 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070892995 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07940469 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068491522 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070992063 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069597879 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080850064 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.09752822 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079915975 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069925962 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068285908 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097558332 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080770995 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068940951 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078535437 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.398337842 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079079776 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06822365 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080749248 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068632571 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.110997777 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070310404 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.17960299 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068993436 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078636554 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069079368 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067575362 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06867034 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.109672757 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070192243 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068485065 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069227578 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070131584 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079243494 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.132937809 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07055455 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160658659 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132565006 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070632837 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118264559 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068698723 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115884777 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070520814 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071014114 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067250927 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.687497646 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068271398 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068774675 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069716588 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136266276 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067559427 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078627175 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076637152 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066315534 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.702838055 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.21065199 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078005796 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079997167 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070827401 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068700151 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068234835 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070542494 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109954892 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144512322 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070941161 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068575055 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078727103 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.111010294 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067840914 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078080907 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07862699 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078501701 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069354273 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070435224 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080297357 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117222705 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.07830005 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.13349543 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.506847697 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069121405 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077938452 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.141778004 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068751802 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084969144 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068442607 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082054262 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.112122322 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077229253 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.225972306 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.113276619 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137662346 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079894123 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082868082 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06814356 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068591261 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079298334 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068462078 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070461916 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078429441 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07035305 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069944092 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083833636 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068837725 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.173640511 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067572671 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079046538 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06788812 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069858122 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082952369 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068734063 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069755626 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079098484 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070107128 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077386206 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.784431411 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078017075 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068195258 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069872362 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.134279749 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.112645567 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068223841 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068266777 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070689449 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.115891665 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.158339839 seconds)
  done (took 28.220554702 seconds)
done (took 47.130832914 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207206807 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149402879 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200019902 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117430204 seconds)
  done (took 2.120733368 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120721131 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100733625 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094554046 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065226629 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100909844 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065483654 seconds)
  done (took 1.935004151 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.305599843 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208143135 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179860218 seconds)
  done (took 2.077941095 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195578994 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.185191375 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.389988957 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250531566 seconds)
  done (took 2.511540174 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141296535 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088700293 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066913488 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08274339 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132286312 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159220907 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100313558 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124821821 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077995865 seconds)
  done (took 2.407737094 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143071942 seconds)
done (took 12.592173118 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.236171199 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.112370289 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107841464 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102875349 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.108348516 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.127794157 seconds)
    (7/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075326083 seconds)
    (8/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.184987395 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.226127545 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075808313 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.0785797 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073959158 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.157108849 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.10214461 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077860292 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073330151 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.161976841 seconds)
    (18/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.185729666 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.184468792 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.171697876 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177486775 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.146495603 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.061626339 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188851983 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072877326 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08774871 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112590151 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.179430737 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145120329 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071655102 seconds)
    (31/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.196350969 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051084973 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.188281654 seconds)
    (34/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118423682 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.190958689 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067961541 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051881571 seconds)
    (38/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051450424 seconds)
    (39/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.109382114 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.097801447 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.169428672 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126382829 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072332727 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072438304 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051236615 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131429837 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094881068 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051358403 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17606737 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095358005 seconds)
    (51/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.207883857 seconds)
    (52/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.08838315 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.146694665 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110020255 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07386101 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067469739 seconds)
    (57/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06092666 seconds)
    (58/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078567029 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075735724 seconds)
    (60/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052546012 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.193857781 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067210381 seconds)
    (63/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140107106 seconds)
    (64/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.193066121 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.173746722 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142786582 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.0694971 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.135663422 seconds)
    (69/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075447795 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.144037095 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090905181 seconds)
    (72/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.117096492 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086704825 seconds)
    (74/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076314934 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175293586 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072102282 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094134442 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065242179 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.145826812 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051227513 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089865747 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.325307108 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.066770275 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080076812 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053632699 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051589534 seconds)
    (87/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.110478521 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06875044 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09404228 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073325634 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.080091207 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110258641 seconds)
    (93/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062179478 seconds)
    (94/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052781468 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140076043 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092792684 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.14739872 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076180956 seconds)
    (99/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.101804351 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066607147 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.097471398 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082610129 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076019849 seconds)
    (104/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074602614 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064803967 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118960585 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.138196676 seconds)
    (108/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07033116 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075235766 seconds)
    (110/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070675379 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052356355 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.356958777 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065881693 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072417817 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080903751 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065939802 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.149927835 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067318481 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071713438 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143565081 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075753457 seconds)
    (122/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.113955326 seconds)
    (123/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053070487 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072543142 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066940354 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051279175 seconds)
    (127/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071489871 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070565795 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.133083649 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073489035 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073466706 seconds)
    (132/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.072761388 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076933775 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072110328 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053938719 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052468609 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088195538 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052355346 seconds)
    (139/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052673152 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070598932 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065011234 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071898612 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094507175 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134197208 seconds)
    (145/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061221612 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072833116 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052668491 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052648175 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072151209 seconds)
    (150/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.109036433 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065259344 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087358108 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065224197 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072441308 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052439418 seconds)
    (156/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051946567 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.16893938 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053506784 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087261448 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088912398 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.07245315 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051044779 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073075946 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050969182 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.121727523 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051600057 seconds)
    (167/309) benchmarking ("sort", Float32, false)...
    done (took 0.127548653 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07232348 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.137413247 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100024098 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086626802 seconds)
    (172/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.053015821 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145240382 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075044914 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093184567 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.133227775 seconds)
    (177/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078171326 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164420376 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097185385 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.162020154 seconds)
    (181/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051947194 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164912807 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.137424986 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071590362 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065025157 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066498249 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075715049 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072871787 seconds)
    (189/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.096065802 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050715449 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087499201 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066562882 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065935031 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113760306 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.33599661 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066139662 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068761062 seconds)
    (198/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066188503 seconds)
    (199/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07356644 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064904042 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.136729148 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053085687 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076006463 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08763397 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073433227 seconds)
    (206/309) benchmarking ("sort", Float64, false)...
    done (took 0.125184835 seconds)
    (207/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110511538 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072293516 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074460104 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072802026 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.172354405 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071224263 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051808111 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067060407 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066904251 seconds)
    (216/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061494391 seconds)
    (217/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051734429 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127458813 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071768401 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051244419 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052892166 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066069854 seconds)
    (223/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080457178 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067929516 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071243719 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064109265 seconds)
    (227/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088085184 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093460525 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080040008 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051134212 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066610613 seconds)
    (232/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067044051 seconds)
    (233/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.051529072 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079137209 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051571323 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06671509 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091640784 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138187392 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072818016 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054307973 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.0923136 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06527475 seconds)
    (243/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065508723 seconds)
    (244/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070182018 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06684032 seconds)
    (246/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.134311891 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051100391 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051198545 seconds)
    (249/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052473261 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066158902 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088485328 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076156964 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079275541 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.136863719 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065160747 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13700979 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073347614 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051254538 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063296301 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076323634 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072226376 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051370856 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062208073 seconds)
    (264/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061023557 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067093952 seconds)
    (266/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.098021383 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072520644 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066733837 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065356006 seconds)
    (270/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087299933 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087324141 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097594046 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052187753 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 0.137479714 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051044532 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06183412 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.0524242 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065099941 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065544692 seconds)
    (280/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050995069 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050809581 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072249899 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064270171 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052058082 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063750471 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064341616 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.0727242 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.105688341 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065391501 seconds)
    (290/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061064831 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070577593 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06544138 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110328502 seconds)
    (294/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052846175 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071892169 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071193727 seconds)
    (297/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067484035 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052263044 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06695561 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.107423175 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06530733 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.100401035 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070674603 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07365838 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052484515 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065754637 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070974122 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067935467 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.168115373 seconds)
  done (took 30.207073792 seconds)
done (took 31.601573632 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084157177 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092644715 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074639849 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092291366 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080045751 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076441157 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072295683 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077790385 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079440305 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08114689 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07787545 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055384165 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073622218 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074027998 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074231412 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09025021 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077641192 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072384788 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072281929 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064385695 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072717697 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065612722 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067179051 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054957281 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077434281 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071392028 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072101399 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073485873 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065282227 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065569239 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068315989 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072979278 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065322144 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077144709 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071472238 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072781979 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074210408 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075729332 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067268555 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065486566 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073821533 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066005863 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072741533 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072685212 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071116641 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070976896 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072855087 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077004825 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090550655 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068051424 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073919563 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076195767 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075810069 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072245154 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069341407 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072988799 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070863128 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090081522 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07333714 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068032391 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073436275 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073829982 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07062556 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072841616 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072632164 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074844593 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07512021 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070819675 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074177471 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070726229 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064914938 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072954236 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068510727 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065366407 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075508635 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076550236 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064381145 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070936998 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072164722 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070857094 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064800667 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068286744 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066778999 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071625965 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067496538 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055020914 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068761813 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07135294 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064488929 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07303903 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071766254 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07183829 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067437812 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074967397 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065070496 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070729558 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066009195 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065860758 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067563807 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069393131 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065367748 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067818262 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073828481 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066478277 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072246543 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078363682 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065350758 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071495931 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064652293 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064894629 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079227189 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074100243 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065718685 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06769942 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064567796 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072039931 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064047543 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065045306 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064978799 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065016072 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070148138 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065071874 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066452308 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071514933 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076332788 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063731898 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067664149 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066027789 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064392834 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069244745 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064502613 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.201574691 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067656506 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062799911 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067626325 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065770777 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072607161 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067646325 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072478757 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067388063 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073902839 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070417703 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071096544 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071239199 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064641857 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059527317 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06882631 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06764288 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068140352 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065656396 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066586298 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065936282 seconds)
done (took 12.409014395 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066378477 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140901321 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097223457 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094315554 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086161942 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068744493 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.078739945 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102976896 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067624809 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102302856 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087146222 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084843533 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111166488 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064552624 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065722067 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069503869 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067405147 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081245775 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.09999162 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086053078 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.108459762 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06556419 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093612599 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089390647 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086507219 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100697781 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066773912 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069768386 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06943117 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090453282 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08640082 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069608123 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066432013 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099781746 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091658755 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082599446 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066460826 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082116744 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066595153 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066430854 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.080507378 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096770604 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079616885 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079656436 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070015339 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069194101 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067307882 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083039887 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088385431 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078114495 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086250826 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102025934 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068667365 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065906009 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064626823 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085049975 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065715751 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068853672 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066473035 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068289677 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066468272 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069359739 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080599082 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086536756 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06958627 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080128261 seconds)
  done (took 6.784290202 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083088672 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089630472 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082544829 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083346392 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065923027 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066337067 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066635515 seconds)
  done (took 2.02328858 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066971268 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088463987 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088462208 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091674636 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087133245 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090134567 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078593999 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069182806 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.083440866 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069646915 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089726554 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104340344 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068893144 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073624215 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089889272 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066330513 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089673582 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066407716 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069525808 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089561272 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068598799 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081540682 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070154289 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066762824 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080090823 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066945783 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112429743 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070556557 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068409258 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069482417 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064466264 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105268265 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079626668 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075453666 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06697159 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080499228 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080698718 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066445334 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08521153 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074832593 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083326495 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069485153 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069893759 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067005878 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073592469 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079245365 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068624838 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067073277 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069135678 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085865235 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067276605 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079696582 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072068716 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068778862 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06771 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070366132 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076277133 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067745267 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086193109 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068086283 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082833013 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082596223 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080182581 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082674804 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069510282 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079981425 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080683463 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069132072 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068469453 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070088203 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082096423 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064651333 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067593108 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076470314 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068247666 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089118107 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08873115 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06770047 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075557736 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067207739 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066990118 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066414453 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08841566 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068602596 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066086335 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070222455 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06941824 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064588623 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065728994 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069947846 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064384776 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068074364 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069388069 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069992171 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069365897 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083101341 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068821168 seconds)
  done (took 8.791441879 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068982302 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067958901 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.06850149 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067886529 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068056407 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067881094 seconds)
  done (took 1.923991093 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092923388 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069131346 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080222633 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071995007 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104176382 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086543134 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087073976 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078455854 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083563582 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079061322 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086302096 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087985974 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092660954 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072566817 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086091597 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071804739 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086445608 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075561258 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078199559 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072786121 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085936428 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.07257634 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072783593 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080901027 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075534248 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072104978 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067199588 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078536935 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078161566 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078446811 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072619974 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075363206 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070411239 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077922432 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086180264 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070653914 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071757717 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077077314 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072518231 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075330591 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087389481 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072527803 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074771903 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07682786 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078127668 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070496475 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077252397 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075881838 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086151554 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077038441 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076712593 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071860372 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075025453 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077480117 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070899523 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077825479 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077025965 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086593412 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072270208 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070199392 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068694376 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075407128 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077480429 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075075125 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078015549 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076901421 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07072348 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072349963 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073031269 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071750551 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077059069 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069304828 seconds)
  done (took 7.065637954 seconds)
done (took 28.065513637 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542564387 seconds)
  done (took 2.022757767 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.609719862 seconds)
  done (took 2.115755839 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.408111014 seconds)
  done (took 7.906521625 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404636642 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.514814185 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.714394878 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130622044 seconds)
  done (took 3.312953272 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.669799249 seconds)
  done (took 2.181920906 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.210623733 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196510968 seconds)
  done (took 1.932039953 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.368411961 seconds)
  done (took 1.867535817 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.093129527 seconds)
  done (took 2.596233107 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.259375647 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.162491448 seconds)
  done (took 1.929663179 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.465916361 seconds)
  done (took 1.970142356 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.831100077 seconds)
  done (took 6.343492825 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21264237 seconds)
  done (took 1.768355881 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238494207 seconds)
  done (took 1.74799849 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.730741469 seconds)
  done (took 3.23864081 seconds)
done (took 42.444667869 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079894155 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080735373 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080848503 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078441944 seconds)
  done (took 1.815919164 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077212458 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072609268 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076257522 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072281331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076596583 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073029093 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073678367 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076589431 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072459665 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072796752 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072624843 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072165929 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074938797 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073908329 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071077348 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074677645 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075532776 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07218165 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075231534 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072633896 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070506109 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074471649 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074869329 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071705987 seconds)
  done (took 3.277753873 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07735357 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072660893 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074260933 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071791147 seconds)
  done (took 1.814176553 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077860259 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091170887 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088705572 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077161967 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091343415 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085709797 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068737904 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069101378 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073292398 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076659482 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067826881 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09575097 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087271352 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076210031 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078992675 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066234577 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067909692 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085940091 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07642435 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077616024 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069489273 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076477743 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067805365 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087362042 seconds)
  done (took 3.395258788 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077362457 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102665752 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076581317 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087169503 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089153672 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065361514 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074358442 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088636492 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121994991 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065526356 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069793299 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065513068 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071993894 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065338782 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075902824 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104139991 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107510507 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068245419 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095202662 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065425403 seconds)
  done (took 3.162257806 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072727805 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070414205 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066287191 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069118629 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077246813 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072440006 seconds)
  done (took 1.952069284 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067846606 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066881742 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067495441 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066432835 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072304099 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067233651 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066101771 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066752131 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067361528 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067519357 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066553382 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065804043 seconds)
  done (took 2.328476475 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.333302211 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068766263 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068701156 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065853923 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071042597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066474233 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080025134 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068040528 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090084242 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066428212 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066548285 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068636165 seconds)
  done (took 2.636099484 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202527717 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075890101 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234162829 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136139877 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110684636 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114566302 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10340723 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112561875 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141945787 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100476089 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165130334 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163014015 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10641176 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135284549 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088592049 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097824227 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153254412 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160700585 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102869939 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163544316 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142240885 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123473881 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145652963 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100347328 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104520232 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120867721 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070764754 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079708096 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167398856 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129707544 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144576172 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109986073 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092786754 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174015559 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1687915 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140475465 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13275284 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08357357 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101403051 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.131223262 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195140849 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088528242 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159108564 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248209536 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080971727 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13956586 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119494953 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119501017 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105267401 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089391113 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143977001 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178920571 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140443881 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089717071 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11145933 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113853054 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115149261 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102928732 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178973989 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158708302 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126596707 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070627702 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099090585 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151662986 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130123873 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107960055 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124552226 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092119454 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132478614 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152685079 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11725095 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140926427 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128363385 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088438552 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118026733 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138326948 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126862685 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167911538 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123090055 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072369095 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123234088 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102696659 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081154004 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142222649 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075205304 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173410248 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097939707 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105392868 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112433117 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108278317 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109379285 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158119109 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28579378 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104107819 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065880254 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10353563 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118964739 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146260442 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086595622 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107109668 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115260042 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077174277 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136857507 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074421049 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123032132 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076648661 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125074779 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130821997 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075960899 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119631458 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100093873 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100113951 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131576535 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158332786 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087941557 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08238354 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164109562 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120295797 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103507029 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14219729 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153559135 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098378664 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101990701 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147763907 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177432399 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088924493 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161152376 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106852696 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083409241 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.086865238 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123140705 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112493113 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124817163 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083691744 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118772205 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166734292 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074958583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095061125 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132688601 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079081389 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080674142 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101826579 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099652333 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094265301 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099706408 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10250557 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137444049 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12087762 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24999711 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125068279 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097674547 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168254214 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088259685 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100547076 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103123222 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070014151 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13592639 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154927156 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079320866 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161613757 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122447693 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104693405 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118064263 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082929497 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138955177 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078686952 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069842173 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142225852 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109518556 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109489889 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148239429 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103275099 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125517631 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117118019 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133780405 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130637531 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127028145 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104590857 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087918977 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110265126 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124564632 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072926754 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090558026 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079789092 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102896075 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095063158 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083060308 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141040408 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123256418 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099518654 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110277243 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095554613 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145836565 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076281716 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127832901 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118477228 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092942453 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149746275 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150285653 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129190278 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097940391 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141555326 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069522849 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219036926 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.09003538 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123256982 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083624082 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083649636 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116900664 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145477705 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127934599 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137077876 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110076353 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120548593 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152581937 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069328372 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114164712 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145385452 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120228732 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103688034 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088970349 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097997151 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14090295 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10705439 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178259138 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111809535 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125022758 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151047341 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099839253 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07916497 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1023214 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133870868 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108308341 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142252085 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098956464 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087542244 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108733572 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074384831 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098797807 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125417865 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119256992 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134650481 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113437704 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131055845 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076571172 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115858137 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11974508 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120817137 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064003898 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120003766 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158284074 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092807038 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116887556 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150255303 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078251703 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122838156 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32088569 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145087508 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086501365 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114214867 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121625941 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131623154 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121317602 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141216773 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113086754 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134401698 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10829905 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084788983 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086802975 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096596433 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104390507 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093552685 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106499563 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113340294 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094661422 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130324157 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101895779 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108180668 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116619898 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09642749 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089413558 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095790315 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171629279 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117479726 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168340232 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097904059 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.142718514 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161337465 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07445262 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07897491 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077249486 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138376329 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083634411 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128949492 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096863246 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106976094 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123591876 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140616212 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094488571 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068745462 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108402416 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132862239 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111470836 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097301997 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102882401 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159843663 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099526777 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078942564 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112195999 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103188908 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100884177 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.315499339 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062850585 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097840656 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075802409 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080216821 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126689308 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152059142 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080350007 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1028377 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118577812 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10987777 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125513802 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101344963 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100213218 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115610003 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151924222 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129280591 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089319227 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11211174 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128076655 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17116958 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104207098 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09515341 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168616488 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1508336 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.158032491 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088391585 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113077085 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11291193 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107243855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137640839 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083062193 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162062392 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081646511 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134092444 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105705743 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089169673 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129311649 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098723903 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087674884 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146077338 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116883391 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082075283 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077378018 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117950166 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118957796 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105293484 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075147474 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136535554 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072552788 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130611889 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165330486 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228167167 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104489716 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096125161 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079540681 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107708443 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101893167 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089856828 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.098368267 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1723267 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087451644 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147835116 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13874329 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111906408 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135621341 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098938663 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633820266 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077528695 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149983693 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115236762 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169492561 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096472973 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117070946 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108097036 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12260491 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141882027 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103929836 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176995065 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130205581 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116028941 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079513593 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101370687 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101458636 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088417115 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104078497 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112066585 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115056266 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092450648 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115130298 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12239996 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081991488 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094864169 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154237892 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115993648 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142303769 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139071278 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084143501 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11580704 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136427403 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079557598 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120349101 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148760356 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.250867892 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097592377 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081459542 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102302654 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169494018 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074158569 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161609487 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118348206 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107911163 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112031704 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116478905 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134193593 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110021747 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120800495 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092891084 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108991285 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11041022 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081215004 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076544277 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103315819 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11121772 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096566451 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097193322 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098606577 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148535424 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071406278 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09596106 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10298242 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143245424 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171504367 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088083413 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082284505 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11734833 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111879881 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111932074 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119347891 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078760119 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082100791 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081324887 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077210968 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107546161 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111253583 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103296464 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11026981 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161786226 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081902667 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222168432 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094809829 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103393332 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069542714 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078526446 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09513644 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09661628 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107012411 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098840924 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165494582 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093825129 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088075614 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090598667 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.219503604 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083381846 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12713223 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109914946 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117881773 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096588077 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063178754 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107636585 seconds)
  done (took 58.424949687 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108009452 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082998188 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096880487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149521881 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121897186 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211368022 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156926544 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198608244 seconds)
  done (took 2.751357165 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067855607 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093878306 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098539762 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082872108 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066631987 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068972383 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223755522 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080715677 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06633137 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.08852009 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079899454 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068718312 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.395897874 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06634025 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06793403 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062587638 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06716961 seconds)
  done (took 3.362778698 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.374971741 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.36585344 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.37101041 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072903679 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.664771491 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089145183 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.091155779 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096024908 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071450134 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.267964364 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.713960028 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092082037 seconds)
  done (took 13.901016549 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074467522 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068868544 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084806774 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085792081 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074505218 seconds)
  done (took 2.015370232 seconds)
done (took 102.398196241 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07977984 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.303999606 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056230071 seconds)
  done (took 2.016760915 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082417612 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086329955 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087785851 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085947459 seconds)
  done (took 1.978835073 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073413323 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076641674 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084494405 seconds)
  done (took 1.865959101 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225705718 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141706641 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089363907 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081261926 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077875348 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078163643 seconds)
  done (took 1.872376597 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072011398 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074753598 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072711706 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075388158 seconds)
  done (took 1.923126039 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07618128 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055390803 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057433151 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058592666 seconds)
  done (took 1.876550948 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085539176 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078225401 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078042032 seconds)
  done (took 1.875006912 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106086176 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084790522 seconds)
  done (took 1.821674997 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080902773 seconds)
  done (took 1.712767892 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098920452 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.11270956 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128519615 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108519386 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139467393 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111999848 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087691165 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087360933 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076942124 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086580207 seconds)
  done (took 2.669562651 seconds)
done (took 21.779848572 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078619704 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.460268394 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359950322 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090098523 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668402067 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.015629486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09581072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126672788 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070111113 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087447434 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650027572 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.974249953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.422270578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.958416129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318852382 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65202002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068404032 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067680769 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067949369 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.998786317 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067601148 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067773673 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06803476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648141108 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370900361 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068052735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318523882 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067903875 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069706285 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354675898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068599009 seconds)
  done (took 16.375558395 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070465487 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.11723342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073662337 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08427455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070224742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069433367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071468182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069690077 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124437923 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067664806 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08447615 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067964579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071427883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069089228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087058087 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068664339 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068809853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067989335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068162763 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068622631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086846009 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068088283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069368777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07121089 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068240898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07965652 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068510884 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068226642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068268094 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070113689 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070908756 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06889308 seconds)
  done (took 4.0429994 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113927357 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124979486 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074767014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102614106 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113168746 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071168525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142456157 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094613496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130202338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070044282 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084352499 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069905787 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100769206 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070865098 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088932168 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071059974 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070888988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071583447 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07131622 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071421171 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090419777 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070888751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071373574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071586197 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071911974 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082575482 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06889318 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06834082 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069402469 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070107376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071595303 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068729828 seconds)
  done (took 4.329395942 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07175427 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075214775 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083036069 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083194887 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.06950162 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07205573 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072603797 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06945429 seconds)
  done (took 2.246038352 seconds)
done (took 28.632284963 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078574752 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069078337 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072372018 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081062961 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072779321 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079780967 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068242233 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075027186 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.074211348 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074884608 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077350375 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069823556 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073292131 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070331859 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076616636 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070138781 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082217665 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072291267 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081365569 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081095851 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072384928 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.075601833 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077229271 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082226475 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082159569 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081906702 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07987716 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075502622 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071918935 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072907602 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079690508 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087256293 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070548084 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081787704 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070191659 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070226441 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.073505509 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069895506 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081588726 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.078858995 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071658487 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078196547 seconds)
  done (took 4.813886806 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087677692 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094576508 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088889289 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064335321 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070482645 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.067992399 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092615352 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062827558 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062898553 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091373559 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058536785 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062363513 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065132928 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056560444 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062199356 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059563078 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064618803 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057598391 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.05939027 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059438273 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058366058 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05446523 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060023674 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065457318 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056359259 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062197551 seconds)
  done (took 3.403165917 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07458546 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084261864 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088571991 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127149656 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104106002 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07854004 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079456534 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087690107 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085356399 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067021885 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070894286 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093889471 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087732417 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073521842 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067066562 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083212054 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081742637 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070620035 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075343978 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091424815 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085744993 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.07943545 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095044343 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083254792 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068084756 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070440197 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072492773 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081288909 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074341535 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079158119 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074080319 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072462878 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.0692815 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078369938 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070850243 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069278455 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089169895 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077081388 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079566783 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069074026 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072025772 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068377608 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088992539 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12223711 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068580683 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074380455 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075676802 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078244301 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068650527 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087790403 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079551034 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06806699 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070776356 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066399569 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067682454 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079971655 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069517247 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069434168 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076077523 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070282132 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.079861338 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071403269 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082110243 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067477929 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074607328 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066652282 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068546969 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066749755 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092361756 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069176366 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107901875 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069330164 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068476215 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076122353 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074758343 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073368095 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067853164 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08221949 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077526496 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072600078 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076298369 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07239983 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072558572 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089470539 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07209055 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071491912 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070501927 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076094738 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070599772 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068940861 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080655714 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069741328 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073149873 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086918525 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06924272 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07064983 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07341477 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072171316 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067174277 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078807284 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073323631 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068836112 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077161973 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0678995 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070382467 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077528038 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073799754 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066529425 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072518474 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073113667 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068458236 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069339899 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070372527 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069447914 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07708212 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073682653 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072354494 seconds)
  done (took 10.604834521 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159343622 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152068882 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070682143 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.1457297 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076658571 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081588865 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151577333 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098281444 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070206897 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069626871 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069412742 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.126504515 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106145926 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.127248953 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08141377 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069685261 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084609127 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117832761 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147429878 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14160601 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083347364 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076705785 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070089208 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068643285 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073730702 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082256862 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090395576 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076441983 seconds)
  done (took 4.459825303 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080360267 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100675405 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074010655 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089655274 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090380375 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067897239 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070356961 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069775649 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080946777 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078509925 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067478954 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073415522 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.0742452 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073701386 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069018677 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074632327 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074783299 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.06945329 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070948477 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072945092 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079658045 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08291858 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074555204 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069932737 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077086587 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069890827 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066809356 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086791434 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069674779 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090867205 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065837744 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074908561 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08133824 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068684356 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068385614 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068233504 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067318134 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067417581 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069540484 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066776991 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068036405 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.05840065 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068386914 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079497893 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074455437 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056670208 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072181478 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072624994 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072588107 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065770371 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070758218 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070636499 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071332488 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07504576 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072852524 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072676041 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068663404 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066427729 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075347276 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067547068 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06503134 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066217502 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072312033 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065973354 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075630885 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072555031 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066427691 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067558615 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069603529 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07403098 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067753876 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070744 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06526 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070000404 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072403759 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069410722 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069763924 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066018159 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067620383 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068489145 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056318012 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067898038 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05433224 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071323393 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066148556 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066839868 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06766755 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072999231 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079997615 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069448755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073622363 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069078014 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068303765 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071851822 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060853896 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071512301 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083745638 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082416477 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067776481 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066106566 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082692085 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072607605 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066847004 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056985232 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075290833 seconds)
  done (took 9.196987471 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094465381 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088726452 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069869835 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083706017 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091311336 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087279518 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075168923 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077927854 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071272069 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.084784914 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076260338 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078099401 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069893904 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077158298 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093879197 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07697378 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069754123 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077249404 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072062366 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.102553347 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08284799 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082412042 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075750853 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069866715 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07741122 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08127852 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090108521 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080197974 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079052997 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075811152 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08009333 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090355258 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.07436588 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071966339 seconds)
  done (took 4.426221911 seconds)
done (took 38.549559297 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.727330246 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.990168082 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.727465987 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.138348808 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.883744317 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.728794823 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.78518408 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.743477498 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.954725413 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.767390245 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.983928323 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.744448703 seconds)
done (took 64.838193135 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.741141102 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.864948025 seconds)
    (2/2) benchmarking "String"...
    done (took 1.995383021 seconds)
  done (took 5.522624285 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.066878748 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.254610159 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.965946461 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.721062617 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.727109577 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.016817337 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.524971078 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.247766212 seconds)
  done (took 30.124363077 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.952334662 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.929520096 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.398511206 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.439160806 seconds)
  done (took 15.440209835 seconds)
done (took 62.647250234 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.746926313 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.730953662 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.740391881 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.707568834 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.78122964 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.727633903 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.035468241 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.97769157 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.722574722 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.715149603 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.723734443 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.156306177 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.730242213 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.939228246 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.72208738 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.73188615 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.742158501 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.135081633 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.881868971 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.734838928 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.730342132 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.734709784 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.729411793 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.732458255 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.782257005 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.722071257 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.146935663 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.732139169 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.534435406 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.726065752 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.76735587 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.128187917 seconds)
  done (took 203.515021639 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.722159756 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.84109142 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.891602064 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.773999618 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.247278685 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.925310548 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.848911636 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.147227422 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.728704442 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.745291862 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.915013132 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.721934136 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.928152748 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.67410592 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.736781458 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.829902204 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.890915977 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.929290569 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.729008361 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.952428971 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.718568421 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.770522505 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.701259971 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.88780073 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.739343924 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.71944726 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.742648791 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.73563235 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.912201097 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.863375435 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.729972237 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.734617524 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.927002856 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.591056898 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.717810903 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.725971049 seconds)
  done (took 168.063133072 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.115763764 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.716303711 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.714802656 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.715916294 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.723360752 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.71622187 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.71531557 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.840243712 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.847720372 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.168509315 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.231785424 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767417356 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.555438916 seconds)
    (13/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.717968458 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.717021214 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.782900772 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.728011349 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.71988002 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.731140947 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.744674221 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.719389983 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.715801354 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843762314 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.726899445 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.797187672 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.723916327 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.714761621 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.720710213 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.083399432 seconds)
    (29/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.714802236 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.715287864 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.71779903 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.950995441 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.716681078 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.709182665 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.608596365 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.506498322 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802290118 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.707781058 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.712076341 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.706355668 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.926601284 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.706170114 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.705861018 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.709033653 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.881418807 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.70626267 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.83233194 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.706621962 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.202118936 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.705786713 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.706967562 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.012308678 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.385956701 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.70147991 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.704758037 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.705392459 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.700571942 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.703056907 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.707734811 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.723535186 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.778325236 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.703692735 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.705969997 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.708780054 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.698852513 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.768867645 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.700219797 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.104039128 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.755302975 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.917266918 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.824491016 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.701747637 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.768286898 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.794233231 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.697495128 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.702957066 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.706741421 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.698289673 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.700600172 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.782799662 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.698273645 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.821292658 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.70527305 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.702535487 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750081078 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.770599233 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.698885971 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.600337919 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.701144117 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.700736615 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.006576969 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.765864165 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.697137485 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.700241931 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.70312554 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.821460545 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.822165507 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.484019056 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.702332263 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.785798342 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.702377516 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.833806215 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.820060529 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.872847966 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.70145578 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.783486821 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.702631937 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.703248649 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.701639765 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.731407165 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.701954091 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.759993213 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.700778379 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.072132927 seconds)
  done (took 392.919190008 seconds)
done (took 768.338306531 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.401815946 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.36376558 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.47008073 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.382201862 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.360450935 seconds)
  done (took 13.618529824 seconds)
done (took 15.260526481 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.78951695 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.793042024 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.7253776 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.791239606 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.720836387 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.792567384 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.77149311 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.725016552 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.759311244 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.726208556 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.760377376 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.726249003 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.716351535 seconds)
  done (took 24.438628345 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.943981604 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.948542983 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.776155869 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.947028989 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.753312285 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.935640785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.870331185 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.858343974 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.861442905 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.722326845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.719925379 seconds)
  done (took 21.980933762 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.953282526 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.945663394 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780901851 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.94393006 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.755498525 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.944132063 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.87400523 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.85887172 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.859646613 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.720710652 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.718696698 seconds)
  done (took 21.998513814 seconds)
done (took 70.059997145 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.712667955 seconds)
  done (took 3.354410284 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.733552238 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.872519464 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.71971481 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.717057541 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.712402035 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.714199315 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.716244586 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.715208022 seconds)
  done (took 15.54468661 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.714318026 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.710968534 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.7151553 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.712335282 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.713172138 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.711803551 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.714714675 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.711717679 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.714225061 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.712230688 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.712775821 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.712129405 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.715980717 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.712496446 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.713497273 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.714268784 seconds)
  done (took 29.056728813 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.71344279 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.711994764 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.711768986 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.713815217 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.712439291 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.712909813 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.712989968 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.712644112 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.711841216 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.711789973 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.713972284 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.712593981 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.712815527 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.713202278 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.713503047 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.713945489 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.712402772 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.712822359 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.717175954 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.713308354 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.714390073 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.714620676 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.71388888 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.713707884 seconds)
  done (took 42.76546489 seconds)
done (took 92.365026722 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.394023297 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.40788124 seconds)
  done (took 8.446493106 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.718803548 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.715507143 seconds)
  done (took 5.124933974 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.717921636 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.716121752 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.716429949 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.7159429 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.714847418 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.715424581 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.718491879 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.714893687 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.715522007 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.716141068 seconds)
  done (took 18.807060612 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.716995939 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.717533659 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.712606057 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.71474316 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.716639182 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.713623709 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.718796895 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.711608247 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.714810136 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.711652303 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.715149931 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.712664753 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.71488804 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.711194219 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.714600021 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.7099009 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.71113599 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.710825868 seconds)
  done (took 32.493399154 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.712899608 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.712955169 seconds)
  done (took 5.071811663 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.709847742 seconds)
    (2/7) benchmarking "second"...
    done (took 1.710156195 seconds)
    (3/7) benchmarking "month"...
    done (took 1.711215787 seconds)
    (4/7) benchmarking "year"...
    done (took 1.710244523 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.709951343 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.709551298 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.709705424 seconds)
  done (took 13.613749449 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.718056373 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.866772431 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.93771306 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.397857227 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.714059225 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.719256324 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.706463688 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.716902533 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.718340167 seconds)
  done (took 19.137580758 seconds)
done (took 104.340732724 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.561110313 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.70426945 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.108093806 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.766408754 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.753805523 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.0023853 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.727711833 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.933532011 seconds)
done (took 42.200190693 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.784018824 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.200855927 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.182872006 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.463747664 seconds)
  done (took 11.490203767 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.688889678 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.2292077 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.748578817 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.296412499 seconds)
  done (took 19.623738345 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.071502438 seconds)
    (2/2) benchmarking "read"...
    done (took 2.073995824 seconds)
  done (took 5.796636527 seconds)
done (took 45.341717629 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711521088 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.711119226 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.710412926 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.710446794 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.708423975 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.711454664 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.707525266 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.708269198 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.710783826 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.710420698 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.710445699 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.71099004 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.711308689 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710631055 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708067883 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706819857 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710490248 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.707196466 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707076741 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.70791385 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.707613516 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711331627 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.708345486 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.706556503 seconds)
  done (took 42.666732797 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.708169052 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.708191969 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.711402346 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.711514323 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.707411644 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.713781013 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.711301665 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.70782669 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.711368677 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.711095168 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708885742 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.709794498 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.709701045 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.707892181 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711433436 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.709675941 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.710618254 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709935227 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710675589 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.707676742 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.710619179 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707789756 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.708332379 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.710436564 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.706448773 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707362495 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.710079742 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.708017939 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.709716204 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.710544938 seconds)
  done (took 52.931934137 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.714753436 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.717501384 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.710211314 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.710203948 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.712388641 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.710060649 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.710774734 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.710153199 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.709857848 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.711207257 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.709385287 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.711164302 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.710526483 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.711567755 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.710769028 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.717133636 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.710462304 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.710544646 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.711070202 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.709999104 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.710006071 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.711231987 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.709562389 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.710205901 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.710931289 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.71051033 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.709628393 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.710022401 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.710314967 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.711117679 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.710037803 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.710314259 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.709969519 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.714098973 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.710281431 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.710445808 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.714159684 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.718238153 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.710873223 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.711194992 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.709699989 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.710172075 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.711003966 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.711638337 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.713543922 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.708001095 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.711368717 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.711765574 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.711145821 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.710617648 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.711215364 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.709814143 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.710057449 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.709990339 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.709638847 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.711130881 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.709586543 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.709542037 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.710570441 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.710406869 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.710544941 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.710838511 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.714082177 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.710757213 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.711615164 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.710731388 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.711397232 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.710991801 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.711088454 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.710898291 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.710533604 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.710928129 seconds)
  done (took 124.841786576 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.711039287 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.709711636 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.708847968 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.708158697 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.709039444 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.712454577 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.709123228 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711454733 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708136485 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.710901086 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.711746341 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.709301168 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710204952 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.709267457 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.711542971 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.707652335 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.71201441 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.708555172 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.715256731 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.712499041 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.711067074 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.709609678 seconds)
  done (took 39.268689431 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709893895 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.712263891 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.709663866 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.712114567 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.708667889 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.711907335 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.712281238 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.71695355 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711390106 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708872347 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709627242 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713078295 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.709741971 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710214458 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709373152 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.710210713 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.712053464 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.709172691 seconds)
  done (took 32.440007488 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.712281336 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.710318868 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.710788567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.709625658 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.710452547 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.713246947 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.711676852 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.711761018 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.712605982 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.709629355 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.712057644 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.714621867 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.712751541 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709058285 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712518148 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.709915314 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.713484645 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.714291199 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.713053708 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.710526616 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.711197109 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.712061005 seconds)
  done (took 39.302214351 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.71366605 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.713012684 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.710589747 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.712092896 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.710499838 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.714010141 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.716627603 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.710857714 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.712242109 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.712904257 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711728614 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.713734019 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.713013615 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.712577917 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.711399008 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.711645406 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.713630932 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.712248166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715515503 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.710751281 seconds)
  done (took 35.896994873 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.712877547 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712674032 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.713901399 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.714193451 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713138809 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.713263849 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71272699 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.71275759 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.715207377 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.713489512 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.714132381 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.712971253 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713160791 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.71358429 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.716516164 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.713729959 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.713006037 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.713732785 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.71395697 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713885391 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.718288039 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.713309498 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712664341 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.714343316 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.714800294 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.713866961 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.715843741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.714724117 seconds)
  done (took 49.63602954 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.714900238 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.714464965 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.712991567 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.717542781 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.713675094 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.713103841 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.713045227 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.712559386 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.716902399 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.713819974 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.715957909 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.715691798 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.715585642 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.715739377 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.717885971 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.714898151 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.715912487 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.713179447 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.714806124 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.714164788 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.722076448 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.717519983 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.717391964 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.714808124 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715155962 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.717397809 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.716200527 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.714695226 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.717818822 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.714837892 seconds)
  done (took 53.112285302 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.735677456 seconds)
    (2/2) benchmarking "in"...
    done (took 1.735496806 seconds)
  done (took 5.119366756 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.714445841 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.715773451 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.717011826 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.715399225 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.719854211 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.717155476 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.716490853 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.714732694 seconds)
  done (took 15.378749429 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.715979539 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.718990617 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.717909393 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.716338201 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.716748299 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.717247909 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.726538518 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.715209274 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.718399042 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.717005356 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.72141749 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.722747924 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.72350507 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.716907477 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.71616926 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.717656514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.717504748 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.716438383 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.717803268 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.718996164 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.7169206 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.719644462 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.718927475 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.715906321 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.718842176 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.72860434 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.722584885 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.719585256 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.717677497 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.722184411 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.720817575 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.715712479 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.718282453 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.718096063 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.719110752 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.718112323 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.729084707 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.719618286 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.725453448 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717769385 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.72036817 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.718602781 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.719202828 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.721202881 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.719614934 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.719323223 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.719690104 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.717150535 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.717539549 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.720124576 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.724761665 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.718654333 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.717959906 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727390708 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.72010208 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.725671097 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.71961389 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.720727294 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.725787205 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.733190791 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.732387683 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.725556908 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720810862 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.720496039 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.728890387 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.741766286 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.727090766 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.718884705 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.71885612 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.720725917 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.729526863 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734048143 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.729332689 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.718716813 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.719661414 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.722157033 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.72166077 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722085814 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727976019 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.723132855 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.720382214 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.72097103 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.733706428 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740566304 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.719519728 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.719701428 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.720447592 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.720597177 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.726765519 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.73089404 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.721245225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.722231332 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.721125318 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.72278343 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.724802947 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.722534885 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.719886126 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72349753 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.721074775 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.72376433 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.721760273 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.723466322 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.730556912 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.721796724 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.722654327 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.732967373 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.723575596 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.72216233 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.733290219 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.722737793 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722794847 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.725142531 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.729119414 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.721798667 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.725085161 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.73119125 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.722265801 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.728303264 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.722934832 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.723587888 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731093117 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.747906047 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.724465358 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.725287284 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.727280794 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.732843542 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.723519559 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.726448636 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.725747764 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.721724308 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.72219295 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.725590525 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.725515721 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.7255257 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72349333 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.725664442 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.722362648 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.724772878 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.723926811 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.725245039 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.726478294 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.724430516 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.72474101 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.727268468 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.72367624 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.726592857 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.733170309 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.723875153 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.725354063 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.726624019 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.723207378 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.729495754 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.724032206 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.724004734 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.726354611 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.72364605 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.725218698 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.725080899 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726736174 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.726751932 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.726382217 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.725484937 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728158244 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.726766983 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.730370928 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.724048903 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.723342133 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.726808384 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.727519207 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.727041561 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.726505299 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.724820194 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.727077833 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.733008983 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.726779255 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.726790127 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.730695741 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.726059199 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.725989207 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.725148811 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.732928419 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.72893717 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.725009144 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.733359598 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.725642714 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.725952597 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.731995866 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.726721433 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.724872336 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.726053731 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.728284076 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.732916399 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741118157 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733283025 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.726155659 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.731342956 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.726885504 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.728745707 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.733563739 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.726572631 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.727771312 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.727735599 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.726521024 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.726906437 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.731621828 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.726096781 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.726801732 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.728706599 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.728128264 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.729660387 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.728218437 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.728933395 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730165025 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.726920081 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.72911667 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.730342394 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.727248323 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.726807068 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.726346466 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.728284687 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.729652249 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.730492043 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.737485229 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.727528915 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.729345837 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.728237921 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.728513931 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.72987839 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.728342786 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.730169925 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.728472571 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.734897692 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.730242767 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.72987273 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.734632101 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.72935406 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.727306081 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.731071923 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.730214365 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.727154885 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.730033385 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.736256429 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.730229727 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.728322146 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.72947248 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.728988098 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.729800883 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.737780571 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.72650778 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.727991899 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.731626465 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.732045742 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.726718973 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.730719672 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.73153241 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.730990722 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.734222619 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.730372283 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.730317271 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.732007824 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.729122235 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.731542456 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.727987523 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.732595457 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.736985289 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.734677187 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.730937666 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.736934691 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.730329263 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.735152047 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.731330656 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.729151785 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.731163789 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.746928706 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.736854824 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.737996944 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.732506248 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.731810907 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.736924052 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.732705882 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.734401321 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730691531 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.732010349 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.731824957 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.733522943 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.728460022 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.732147334 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.732578661 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.731638951 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.731942356 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.735927746 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.732546186 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.730227927 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.730651718 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.730584428 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.732459826 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.731202447 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.732662683 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.736283717 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.733159821 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.730609947 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.731340132 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.737731217 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731702327 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.734120388 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.731740412 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.732361464 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.731359625 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.733238671 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.731260144 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.73361221 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.739300695 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.734623201 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.741414945 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.733947886 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.742527575 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.731423034 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.734520751 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.739513273 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.732303688 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.73000217 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.734259671 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.734032274 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.740828571 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.733676166 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.734570722 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.736953167 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.733182623 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.733851035 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.734877284 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.733343269 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.735042705 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.733747131 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.742486597 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.734123144 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.736986975 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.736175779 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.731561207 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.733477934 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.735356169 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.732932316 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.739764886 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.734424447 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.735076906 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.733152543 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.735843728 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.734255303 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.734692288 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.736265075 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.732444062 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.734891904 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.7422056 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.734258517 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.737392157 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.73500534 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.745339918 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.733892197 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.743101988 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.734096756 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.735322641 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.734330242 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.736912178 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.737154069 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.735180954 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.738094332 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.735036044 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.735623002 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.73944433 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.73456912 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.738784148 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.735995007 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.735670931 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.73491204 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.74392824 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.755859441 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.736094438 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741042891 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.734293234 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.735395508 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.739162936 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.735935756 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.73396859 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.738145607 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.74432967 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.744038627 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.736707324 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.735467365 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.737367745 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.737120897 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.736923285 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.737550297 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.736575329 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.737647873 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.739350299 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.735608946 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742612551 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.736720803 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.737462575 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.737896104 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.738339604 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.747973779 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.737268422 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.737762129 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736365342 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.73743145 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.738009282 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.73655234 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.736678265 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.738916898 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739373913 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.737754942 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.74287097 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.742987049 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.739896655 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.73645012 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.737827421 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.739961658 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.738881665 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737281976 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.737074957 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.739204623 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.738211847 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.737490557 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.73946856 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.735607722 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.738455165 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.738664261 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739267375 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.739554392 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.743221246 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.738112921 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.735545398 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.739308858 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.738656374 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.737153743 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.739210933 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.750269761 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740581334 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.745874852 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.746611239 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.741448245 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.738574956 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740124629 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.74588072 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.738159049 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.741232704 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.739293027 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.742071821 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.738742038 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.742246601 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739805605 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.748765102 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.740242978 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.739823332 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749741725 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.739931705 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.739554548 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.740204431 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.74288613 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.741251145 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.738047627 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.74065025 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.738166905 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.747212368 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.743451375 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739750962 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.742238416 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.738213007 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.741411206 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.744650347 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.741723347 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.741363737 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.739170951 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.739606571 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.74069891 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742005255 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.738768607 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.740487675 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.740016297 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.742525096 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.746458307 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.739855053 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741590128 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.741397552 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.740791476 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741139893 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.742895131 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.739419613 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.739080542 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.741041719 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.740488029 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.742596387 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.744749192 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.741999914 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.740768732 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.741691282 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741434134 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.744458166 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.749874218 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.749347661 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.740561626 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.741020204 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.743975967 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.746198961 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.742295342 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.742116262 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742875845 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.744818663 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.744193342 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.743923809 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.743432229 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.745323229 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.759013643 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.744653643 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743730305 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.743744782 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.748457305 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.74339526 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.74039698 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.743964111 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.745346439 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.744782576 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.74977343 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.743445144 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.749665377 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.743698593 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.7437242 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.748511489 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.744717173 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.749649657 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.747353504 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.744357333 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.743596504 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.746547333 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.759457222 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.74501683 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.751476246 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.771314989 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.745687201 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.74541373 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.743217669 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742556824 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.744030584 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.747546263 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.744145401 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.747108238 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746315662 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.744673915 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.745467723 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.749652873 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.746663443 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.74559606 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.747083034 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.746744609 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.747636509 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.743225686 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.74505708 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.745275119 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.743979436 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.74492965 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.745767259 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.745904311 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.758640235 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.755701824 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.746356412 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.745650121 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.744103751 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.75041557 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.747776698 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.753898499 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.753570527 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.746998024 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.745767377 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.748413265 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.74599979 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.744956093 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.746719036 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.74585521 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.745329751 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.745093617 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.758941568 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.752931326 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.751621456 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.747606141 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.745232686 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.747396638 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.748186719 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746343038 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747506938 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.74943186 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.746615808 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.750636552 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.748419374 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.746789681 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.749072839 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.754584878 seconds)
  done (took 1035.060534721 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.746148626 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.745317058 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.745316697 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.745753756 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74615206 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.745486085 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746187721 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.745371649 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.746699053 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746441426 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.745499813 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746823535 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746425648 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.747665358 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746423551 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.747884781 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746257628 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.746764376 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.746766968 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747295176 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.747088773 seconds)
  done (took 38.353346064 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.749484202 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.747300264 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.747397566 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.750047852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747636301 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.748964917 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.747977071 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7498484 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.749951663 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.749439857 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.750098098 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750125188 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.747905543 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.747802122 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.747487849 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.75070522 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.750881425 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.747002148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.750669599 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747272821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750357972 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.749136804 seconds)
  done (took 40.156768023 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.748926776 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.749083417 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.748943607 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.747673473 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.750428176 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.74819321 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.75039611 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.750669103 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.750699667 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.751793563 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.74859413 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.750865602 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.754992173 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.754581178 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.752537887 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.751216448 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.89536485 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.75053929 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.750669416 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.750084641 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.749122726 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.757548624 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.749383495 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.749694512 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.749158853 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.749659419 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.752976483 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.751974874 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.750565302 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.751199381 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.755033869 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.753356572 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.750556289 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.75418528 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.751169983 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.751177611 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.756234449 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.750914461 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.749451393 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.752412009 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.759478238 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.769698605 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.750114165 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.758707612 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.753242243 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.753734559 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.754082354 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.75919535 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.751732484 seconds)
  done (took 87.684523741 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.75296146 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.754019462 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.750831623 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.752877705 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.753404675 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.753023285 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.752230568 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.753968628 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.750897859 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.751007798 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.754654021 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.75123686 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.751172511 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.753491186 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.753421059 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.751707903 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.751661862 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.751335413 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.750829484 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.751126994 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.752207665 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.754389448 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.755570723 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.752852028 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.753911463 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.751016295 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.751390267 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.754925063 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.752664037 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.751604009 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.754139112 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.7550177 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.756082319 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.752607127 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.751875273 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.75447472 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.755357094 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.752818067 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.756066055 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.753428876 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.755311301 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.755684008 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.755627612 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.756060542 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.753583158 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.753630901 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.753196648 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.754036258 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.755291845 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.756397092 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.756401795 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.754563773 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.756887376 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.754161179 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.755966283 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.757061819 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.75307056 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.754359804 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.755776821 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.755356389 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.753933452 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.75637177 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.754725244 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.756965866 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.757084921 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.753829859 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.754964118 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.756814711 seconds)
  done (took 120.950359168 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.755654669 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.75566335 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.756237172 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.756283706 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.755478989 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.756452559 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.75690184 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.756555112 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.755959219 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.755704529 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755601872 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.756978924 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.75498116 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.757776131 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.756624231 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.755888188 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.755991162 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.75625404 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.755758321 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.75564094 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.755434022 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.756006023 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.755663556 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756383288 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.757004706 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.756068678 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.756226358 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.756765945 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757489302 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.756745134 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.757933739 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.756852092 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.757113482 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.757978365 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.75733277 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.757126072 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.756944178 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.758131353 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.757070293 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.757236528 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.757439014 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.758407114 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.757567727 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.758529554 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.757434798 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.758067393 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.757285496 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.758327709 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.758986386 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.757377972 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.757424223 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.757304618 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758057915 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.757735531 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.757163394 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.759025907 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.757198518 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.757613489 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.757623471 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.758311727 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757231093 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.761084556 seconds)
  done (took 110.623903689 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.759151747 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.759337767 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.757101062 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.755997349 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.760148874 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.757325435 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.759606576 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.759393808 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.759800542 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.760125445 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.760279731 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.758390243 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758562144 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760793937 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.757203559 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75755634 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758514594 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.757681455 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.760124738 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.758538416 seconds)
  done (took 36.864785557 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.758534873 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.761286863 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.758673626 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.758165615 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.760632454 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.759145322 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.761245428 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761655554 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.758163217 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761273984 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.76066936 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.759897256 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759145222 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.758691857 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.763141463 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.758631998 seconds)
  done (took 29.849217734 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.75905552 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.762492551 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.759534548 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.760991497 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.759076092 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.759373828 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.762132787 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.758565775 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.75962448 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.762572346 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.762373583 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.761534816 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.762869091 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.760061799 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.759975681 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.762954849 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.759514201 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.758652626 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.762257129 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.760820054 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.761474103 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.759674514 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.762463268 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.76308068 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.75949798 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.760671585 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.760422534 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.759825157 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.760286886 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.76305154 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.760509534 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.760469688 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.760899156 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.76116272 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.761235568 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.760244627 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.763684622 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.762354262 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.763556408 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.762753672 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.762259464 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.760125743 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.763606448 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.763183224 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.761706784 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.763689679 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.762929079 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.762072808 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.760321678 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.761109187 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.763447662 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.763303359 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.764085353 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.764504835 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.76385411 seconds)
  done (took 98.576095952 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763291793 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.764009759 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.761504735 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.763711506 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.763676163 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.761178028 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.76439713 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.761432874 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.761845828 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.765786489 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762472427 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.76493532 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762035379 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.764291909 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.76322348 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.76406627 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.762046655 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.762223487 seconds)
  done (took 33.430034427 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.762464899 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.762460711 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.764143447 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.762420059 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.762656971 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.764598665 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.76309227 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.7656125 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765662329 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.762370552 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763045376 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.765285282 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765180013 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.766143197 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.763170423 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762121702 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.765808177 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765676936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.763272081 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76340444 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.766240613 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765976498 seconds)
  done (took 40.50650517 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.764253992 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.76290527 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.780544736 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.804925962 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.792309573 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.76400199 seconds)
  done (took 12.365932792 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76466087 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766139578 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.762959427 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766601617 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766877401 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764045982 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763829105 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764483367 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.766555249 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764567354 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76423685 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765715724 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765203895 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763926152 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76787466 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765892355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763825179 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764816559 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765901131 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768388055 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765134641 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767172184 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765439872 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765485255 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764007744 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764041457 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768010006 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76543265 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765779521 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767509239 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766716317 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765185231 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768392992 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765152338 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768486167 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767807743 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765876258 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768595971 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768470209 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765476274 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768692432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768087125 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768569508 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765646745 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768165271 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765597289 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765711272 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765841783 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765328559 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768162387 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768103285 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765991477 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76907456 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769235793 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769057763 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770182968 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767213944 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766966393 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769889407 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766687364 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766680441 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769773124 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766492677 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767480206 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76949793 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76653692 seconds)
  done (took 118.291660679 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766700807 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.767159049 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767799841 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767953975 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767215006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767321731 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766773512 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766625972 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766942983 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767970478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770853597 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768153667 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76888802 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767618392 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768219377 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768263028 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768177286 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76718869 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768767359 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771245344 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768248307 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767675564 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768321967 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768410051 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768568404 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770425989 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.767562734 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769250223 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768259118 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768077587 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768611354 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768168787 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768237797 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768498739 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769278144 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770245693 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768776641 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769535034 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769209716 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773142734 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769549543 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772416472 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769271166 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76942743 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770356911 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769995771 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769793421 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770080871 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768785065 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77086968 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770955973 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.77091952 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770684398 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769841436 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770940606 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7693203 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.7708134 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769738067 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769806495 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77324105 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770615796 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770041641 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773432292 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770980671 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770181627 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770939867 seconds)
  done (took 118.472916816 seconds)
done (took 2413.423976658 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.839585132 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.802365116 seconds)
  done (took 15.34286923 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.935053816 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.885777868 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.770305487 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.795422422 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.773153365 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.789310396 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.783199025 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.767060034 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.769110684 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.77044439 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.773293849 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.957230651 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.7743261 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.76915298 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.76987611 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.862756402 seconds)
  done (took 50.650526169 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.773541777 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.780054589 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.798902174 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.776793269 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.773244403 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.799609508 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.81938714 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.778074017 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.88162753 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.792017815 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.018572662 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.773755975 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.774052929 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.937343204 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.792678564 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.799936067 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.953420271 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.016534848 seconds)
  done (took 34.742103438 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.035222111 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.781232577 seconds)
  done (took 10.515915859 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.811731456 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.773180633 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.804242528 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.780455949 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.790240627 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.805745387 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.803257361 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.825416148 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.809334125 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.797122969 seconds)
  done (took 69.6993263 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.775249537 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.771118943 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.7674108 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.767514907 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.759941279 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.75878771 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.769126649 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.765334018 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 3.990533242 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.842181843 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.792503974 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.774383456 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.767279374 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.771217769 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.767387867 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.79231439 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.902567635 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.768391086 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.765910044 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.775423355 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.768486796 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.83834034 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.795762236 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.768947038 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.843011993 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.00944342 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.773702716 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.774367938 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.880092875 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.769631513 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.772572482 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.768226448 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.77022096 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.287158511 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.180746013 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.776409048 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.778350227 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.778526712 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.769440318 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.889784738 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.769653105 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.774708304 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.766250657 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.151857199 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.889367139 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.838282556 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.576837624 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.769480052 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.773202935 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.818433753 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.771261197 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.770526526 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.78747369 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.398543037 seconds)
  done (took 131.395447149 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.79769142 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.248746374 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.917288036 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.78483295 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.178406212 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119583873 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.76582253 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935551032 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.805819315 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.140114791 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.053444888 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.003685718 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.765511694 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.765949239 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.765434415 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.763365685 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.977819047 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.955245264 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.76734361 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.767719475 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.800390257 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.173020836 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.951993151 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.913664689 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.788550687 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.110892276 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.950289622 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.001339011 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.771245298 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.764691992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.953165842 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.771472883 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.766847592 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.765443093 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991148123 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.987500759 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.980409599 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.769331432 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.786714725 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.769332711 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.790069359 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107850444 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.993342893 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96280581 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.076678233 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113700689 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.767651492 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.766949108 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.77005934 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.959052028 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.000657322 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.159135379 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.953867168 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.767489191 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.109446889 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.767164511 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.802748309 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.137583896 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.057872513 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.996828554 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787925421 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.76579054 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.765722129 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.203680601 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.767909543 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.994803344 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.883901196 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.769062315 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.997962964 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.99861477 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.058472049 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127177896 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.79750211 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.785517779 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.848079311 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.173069988 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.957671851 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13709736 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.785462868 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.767127965 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.983925605 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.771775375 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039065596 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.204150097 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.152809584 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.808588701 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.789662501 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.772746927 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.136223191 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.138631856 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.045039041 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.092615983 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.991171679 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.793032477 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.769451122 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.770002649 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.790971292 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.962261613 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.768252603 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.135719036 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13657404 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.544556247 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.800512892 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.20658209 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963992513 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.769356183 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.76872291 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.771427676 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.980988931 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.831263386 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.791346503 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.772447836 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.137475388 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.721041246 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.903111197 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.505357742 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.957165213 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.773921449 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.155808189 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.770821674 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139071062 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.792279169 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.202500593 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.28471822 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815203487 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.983184126 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.097851645 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.768328512 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.187473911 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.205370322 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95603204 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139380755 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.613946705 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.772107393 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.182878609 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790025004 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.801209799 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.940450685 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.794767835 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.998058039 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.777709411 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.200640782 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796858615 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004273009 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806100592 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.171342749 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.816734996 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963770835 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.806077837 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.897815959 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793723326 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.771544216 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.957075041 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.230159753 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.772368634 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.320692438 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.772122062 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.920384488 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.213971058 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79733935 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.966204769 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.775913268 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.782992553 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.987859783 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.801043958 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.436753996 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.777915111 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.06004673 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.753625332 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.226504475 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.773626367 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.207022532 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.986112233 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.794437662 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.775867148 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.577260857 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.774854857 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838995996 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.934553817 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.592838699 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.777956916 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114638274 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778582497 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.967062997 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.773930721 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.774623556 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.128957579 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.827628852 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.776533573 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.80429552 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.777025752 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.772595764 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.124206637 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.802491359 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.494910948 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.912991039 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.166894278 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.087097206 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.159708832 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.823847118 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.799954218 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.203251291 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.828557555 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.962931898 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.777379717 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.800803339 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142587844 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.77715731 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.166203208 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.183147871 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 3.004062142 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.946147541 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.777118943 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.125914488 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.774687471 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.976467956 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991406899 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.777582347 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.778178208 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.95389938 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959568218 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.966850955 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.804080623 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.788255545 seconds)
  done (took 942.563287553 seconds)
done (took 1256.610937613 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.779524553 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.776004684 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.768448634 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778655719 seconds)
  done (took 28.818198631 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.794726495 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.784463422 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.785977613 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.78540058 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.788383372 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.78454694 seconds)
  done (took 12.439209752 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.827341635 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.776793502 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778777738 seconds)
  done (took 21.098223044 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.929230131 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.674258675 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.026751132 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.174992316 seconds)
  done (took 11.519775614 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.785501961 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.786143851 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.786502631 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.789796087 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.795055982 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.796849798 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.787716514 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.788219864 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.795544322 seconds)
  done (took 17.826744853 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.53341983 seconds)
done (took 97.951663351 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.222060611 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.510349521 seconds)
    (3/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.796953812 seconds)
    (4/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.131896157 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.420225261 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.76534542 seconds)
    (7/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.808039441 seconds)
    (8/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.553956559 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.645262165 seconds)
    (10/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.819264883 seconds)
    (11/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.779752994 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.990733368 seconds)
    (13/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.016852952 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.500857273 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.820104502 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.807124892 seconds)
    (17/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.664602515 seconds)
    (18/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.76395313 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.208540264 seconds)
    (20/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.69165663 seconds)
    (21/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.616985012 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.780322466 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.134510327 seconds)
    (24/309) benchmarking ("sort", BigInt, false)...
    done (took 6.779309526 seconds)
    (25/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.288732544 seconds)
    (26/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.838982103 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.852928011 seconds)
    (28/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.84783851 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.901158949 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.91182819 seconds)
    (31/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.87786637 seconds)
    (32/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.120804783 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.779756724 seconds)
    (34/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.935134851 seconds)
    (35/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.854386894 seconds)
    (36/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.78730328 seconds)
    (37/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.658965512 seconds)
    (38/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.665045754 seconds)
    (39/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.392755161 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.374950399 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.764987405 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.886493785 seconds)
    (43/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.703127007 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.893243666 seconds)
    (45/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.665577069 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.056913015 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.434432711 seconds)
    (48/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.679844715 seconds)
    (49/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.795891101 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.270807239 seconds)
    (51/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.565973385 seconds)
    (52/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.865016721 seconds)
    (53/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.271383683 seconds)
    (54/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.266550344 seconds)
    (55/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.870196177 seconds)
    (56/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.844514444 seconds)
    (57/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.75052687 seconds)
    (58/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.908255565 seconds)
    (59/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.834580644 seconds)
    (60/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.049369346 seconds)
    (61/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.896512277 seconds)
    (62/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.867710551 seconds)
    (63/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.825340555 seconds)
    (64/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.195726904 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.122535845 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.782427384 seconds)
    (67/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.847666258 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.065863137 seconds)
    (69/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.782307447 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.789584488 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.393444071 seconds)
    (72/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.762734361 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.517348422 seconds)
    (74/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.811827088 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.784174734 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.891966797 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.438102332 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.444265276 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.943712242 seconds)
    (80/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.176425201 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.418516538 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.782434557 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.750442607 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.911807006 seconds)
    (85/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.42762976 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.66529307 seconds)
    (87/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.037970339 seconds)
    (88/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.803529096 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.150213134 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.814374977 seconds)
    (91/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.791746416 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.773275419 seconds)
    (93/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.320748447 seconds)
    (94/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.267851693 seconds)
    (95/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.784357382 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.403022223 seconds)
    (97/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.025656583 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.083796035 seconds)
    (99/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.17875939 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.446739578 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.784359693 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.465971347 seconds)
    (103/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.906502098 seconds)
    (104/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.894044282 seconds)
    (105/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.870253756 seconds)
    (106/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.787012514 seconds)
    (107/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.411874335 seconds)
    (108/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.86586396 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.786202105 seconds)
    (110/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.917770694 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.772165187 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.810344611 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.391286503 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.986809645 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.410495647 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.21924495 seconds)
    (117/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.815466936 seconds)
    (118/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.942348299 seconds)
    (119/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.28142427 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.784761496 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.893355248 seconds)
    (122/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.242500698 seconds)
    (123/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.574784969 seconds)
    (124/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.817216017 seconds)
    (125/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.786669367 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.413281842 seconds)
    (127/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.803888165 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.947842146 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.269536379 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.814341228 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.793127516 seconds)
    (132/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.813161946 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.802296023 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.047905081 seconds)
    (135/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.80203139 seconds)
    (136/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.792905973 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.008351503 seconds)
    (138/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.456803704 seconds)
    (139/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.885803041 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.283808939 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.980805195 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.053536875 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.836331127 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.792469012 seconds)
    (145/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.064760634 seconds)
    (146/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.821326508 seconds)
    (147/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.690874528 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.788909458 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.97037624 seconds)
    (150/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.641765228 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.098460831 seconds)
    (152/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.815469685 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.29733282 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.820687529 seconds)
    (155/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.021150469 seconds)
    (156/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.048637527 seconds)
    (157/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.38922315 seconds)
    (158/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.778375825 seconds)
    (159/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.840027196 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.950810666 seconds)
    (161/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.993493156 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.140927924 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.820956908 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.983216377 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.820288646 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.227177474 seconds)
    (167/309) benchmarking ("sort", Float32, false)...
    done (took 5.682856807 seconds)
    (168/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.824643428 seconds)
    (169/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.930730495 seconds)
    (170/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.795045596 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.522147914 seconds)
    (172/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.912927647 seconds)
    (173/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.793754406 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.824943882 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.84452001 seconds)
    (176/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.388507501 seconds)
    (177/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.278702039 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.801384682 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.985033588 seconds)
    (180/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.383309184 seconds)
    (181/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.18779087 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.805417655 seconds)
    (183/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.143633207 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.822628748 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.10347558 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.797771879 seconds)
    (187/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.809642172 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.839981514 seconds)
    (189/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.958624889 seconds)
    (190/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.082475537 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.555356157 seconds)
    (192/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.933807286 seconds)
    (193/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.79758925 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.329920743 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.84888282 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.92150908 seconds)
    (197/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.860873954 seconds)
    (198/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.808374938 seconds)
    (199/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.811275956 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.856110175 seconds)
    (201/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.139541636 seconds)
    (202/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.780858073 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.936086123 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 3.018708654 seconds)
    (205/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.901856462 seconds)
    (206/309) benchmarking ("sort", Float64, false)...
    done (took 5.838219014 seconds)
    (207/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.613719832 seconds)
    (208/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.880558512 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.326720046 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.031118226 seconds)
    (211/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.798704234 seconds)
    (212/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.83084681 seconds)
    (213/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.867546538 seconds)
    (214/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.847586195 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.398026699 seconds)
    (216/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.066777963 seconds)
    (217/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.784496437 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.92221848 seconds)
    (219/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.823089093 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.062983359 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.804464765 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.818817033 seconds)
    (223/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.423854005 seconds)
    (224/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.88301169 seconds)
    (225/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.295785253 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.83885082 seconds)
    (227/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.827720856 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.848597502 seconds)
    (229/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.785192012 seconds)
    (230/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.596120194 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.821573802 seconds)
    (232/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.887118815 seconds)
    (233/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.485480279 seconds)
    (234/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.305366178 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.99825291 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.849223288 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.89761701 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.796575502 seconds)
    (239/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.827093895 seconds)
    (240/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.784894446 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.90920571 seconds)
    (242/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.292963525 seconds)
    (243/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.723598434 seconds)
    (244/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.925066366 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.829977301 seconds)
    (246/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.068384834 seconds)
    (247/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.085377288 seconds)
    (248/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.043092771 seconds)
    (249/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.219783445 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.300469146 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.554480607 seconds)
    (252/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.810160573 seconds)
    (253/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.357416038 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.976498459 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.957444033 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.909267898 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.810970711 seconds)
    (258/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.37416768 seconds)
    (259/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.87963722 seconds)
    (260/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.818466398 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.830805681 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.910388306 seconds)
    (263/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.601229944 seconds)
    (264/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.062625798 seconds)
    (265/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.243930293 seconds)
    (266/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.194093919 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.180896276 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.799217438 seconds)
    (269/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.383975137 seconds)
    (270/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.854228597 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.979266549 seconds)
    (272/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.985832015 seconds)
    (273/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.785446961 seconds)
    (274/309) benchmarking ("sort", Int8, false)...
    done (took 4.802706681 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.99778016 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.61115401 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.289012559 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.40320955 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.157034155 seconds)
    (280/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.624588303 seconds)
    (281/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.322897965 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.894034564 seconds)
    (283/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.883213947 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.785893459 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.940341202 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.884453346 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.940437505 seconds)
    (288/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.865007692 seconds)
    (289/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.800295114 seconds)
    (290/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.088768494 seconds)
    (291/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.844597713 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.159193727 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.876784426 seconds)
    (294/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.297930342 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.826408223 seconds)
    (296/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.827150239 seconds)
    (297/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.886724906 seconds)
    (298/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.508908861 seconds)
    (299/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.926278995 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.784478324 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.196930959 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.874351589 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.82432 seconds)
    (304/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.82586887 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.384609397 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.011299515 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.884350079 seconds)
    (308/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.866115665 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.799132998 seconds)
  done (took 1022.103157767 seconds)
done (took 1023.824011701 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.834308708 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.828555266 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.810262392 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.833053991 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.9239807 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.841952893 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.821458332 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.812764741 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.858619096 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.861794164 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.811006691 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.840124004 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.813488385 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.812405037 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.811156986 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824211364 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.498410881 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.813090626 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.828650108 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.821304817 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.828500657 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.810866033 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.860627532 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.839645761 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.816403952 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.816061306 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.815582174 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.832014778 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.924806358 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.816319962 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.814741893 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.824515944 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.497824352 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.811180024 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.807107689 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.833311506 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.822887139 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.821504544 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.816947074 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.844381195 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.739657972 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.812118276 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.814072483 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.813850135 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.813636136 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.817674389 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.814850936 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.818510506 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826824674 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.827185504 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.736817488 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.825448954 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.816521189 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.813434929 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.822376148 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.813436213 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.816095221 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829940321 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.831633627 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829900204 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.49220764 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.818176996 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.815753186 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.830603974 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.821576315 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.774790059 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.8066445 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.816722689 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.744426841 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.816538147 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.775533699 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.82075327 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.815614893 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.827323275 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.845596839 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.500647145 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.807832341 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.813380374 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.821325102 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.812927752 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.823886455 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.827372642 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.818966867 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.814613247 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.828462418 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.844056343 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.82516144 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.816502586 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.824367644 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.834274 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.821659021 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.825436411 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.817419747 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.810515048 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.824050391 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.818931304 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.819100669 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.8187376 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.820348715 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.826978804 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.747606639 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831149776 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.812571285 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.812205824 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.815319099 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.830419814 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.744808103 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.816075813 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.838547231 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.863189614 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.818108779 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.496327333 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.820348632 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.83313412 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.825078495 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.819850853 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.812263117 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.498229395 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.746384124 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.830145335 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.818079849 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.815913461 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832770466 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.818062116 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.813187933 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.5087737 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.818406294 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.831059066 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.938430642 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.827208543 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.849656241 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.815806003 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.819424549 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.845353582 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832981916 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.849665409 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.820426907 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833528427 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.835096513 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.814083663 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.828799098 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.827382764 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.819239879 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.823960974 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.811278663 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.851048049 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830847734 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.831032306 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.839654241 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.938706394 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.815819191 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.499223527 seconds)
done (took 292.240594261 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.893857454 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.810450125 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.910963693 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.816917749 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.917100528 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.912678848 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.813903889 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.813409673 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.813895776 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.220288365 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.81514413 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.814267071 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.812765846 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.813635339 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.919252056 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.81686823 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.81336358 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.155575274 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.817416666 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.895645499 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.81048063 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.814374719 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.816855686 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.197179221 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.811836563 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.815996945 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.886624667 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.817286321 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.188818232 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.809223691 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.816417086 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.164143718 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.905640962 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.836432387 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.82833409 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.82599934 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.901585191 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.83417011 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.897171502 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.917141475 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.911798876 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.856449894 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.813879928 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.809364901 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.820853945 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.819020323 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.816659555 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.845737734 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.810629396 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.817033052 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.184084621 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.829667956 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.826725282 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.816180605 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.816478758 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.839347492 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.81608188 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.8186028 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.918018608 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.819087505 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.879916039 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.229387162 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.19409606 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.819807397 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.810023355 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.816982148 seconds)
  done (took 180.993839946 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.883877613 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.891146175 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.901353105 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.819552145 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.867251682 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.906742465 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.819997127 seconds)
  done (took 14.835809179 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.824942783 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.821184932 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.867961046 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.868439569 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.819946683 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.969788926 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822087359 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.831276742 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.829082877 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.872309408 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.82143616 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821902884 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.818385863 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.817005569 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.86704146 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.829955508 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.933878685 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.819276584 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.819191281 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.975936299 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.819598559 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.828433707 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.873647304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.830647151 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.8226934 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.826084887 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.401765889 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820070445 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819030765 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.821868754 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819026428 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.858659695 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.821559434 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.818342614 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818895709 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936257887 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.820712079 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819855323 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.821769973 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.819473556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.821703706 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.821725727 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.821918638 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.818857467 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.822145123 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.84378072 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.822230601 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.822243987 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.822562177 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.823834526 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.870803941 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.822377351 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.820474573 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.821094113 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.877400245 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.832274496 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.822824677 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.82090148 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.823775503 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820581831 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.978709117 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.869197391 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.82345777 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.869316885 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.824209882 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.824146185 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.824064916 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.822945821 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876187539 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.823624066 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.8708661 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.821179642 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.978886424 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.84618721 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.82509447 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.824314545 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.825021564 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.822409828 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.814838249 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.828458368 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.821393787 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.82385364 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.828622393 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.821803026 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820874612 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.929170428 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.350414536 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.821213536 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.835307702 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.829276606 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.822622905 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.875465629 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.824694719 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.820303341 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.874347217 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.937413996 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.878373123 seconds)
  done (took 201.501509554 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.828437473 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.830014052 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.824395056 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.840210526 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.823343527 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.823015062 seconds)
  done (took 12.721365445 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.826289513 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.824481159 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.824610791 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.825926397 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.823472834 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.826985072 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.825662309 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825543466 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.827382349 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.825912734 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.82745674 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.824391023 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.825426986 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.824816939 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.825597177 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.82558255 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.824392828 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.822634352 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.82646673 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825858107 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.979413913 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.825323941 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825682854 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.825948017 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.830494172 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.82683869 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.832841199 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.8270973 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.826178275 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.833132821 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.828564186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.828598906 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.826631856 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.830507042 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.830407514 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.827290634 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830299288 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.826586334 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.824592343 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.828415484 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.826953433 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.826683734 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.827450514 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.826659762 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.827095278 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.830105267 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.830322719 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.833736491 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.827874878 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.828435818 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.828160084 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.826833275 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.828949774 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.827125854 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.829459941 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830054527 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.830892536 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.826609819 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.826985597 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.827491991 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.828054424 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.829577921 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.829164584 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.83049922 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.826992317 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.828854194 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.827955038 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.831922124 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827975989 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.82895279 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.828516427 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.826241399 seconds)
  done (took 134.491148427 seconds)
done (took 546.287089599 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.832485999 seconds)
  done (took 8.587003288 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.002297827 seconds)
  done (took 8.759214073 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.65514057 seconds)
  done (took 16.411449131 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.85038371 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.825555913 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.81803506 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.822839444 seconds)
  done (took 29.07323518 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.186920185 seconds)
  done (took 8.943054717 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.822457043 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.81959783 seconds)
  done (took 15.400113567 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.285823203 seconds)
  done (took 9.042871712 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.828112509 seconds)
  done (took 8.584712684 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.835193619 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.849461955 seconds)
  done (took 15.448212504 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.806212217 seconds)
  done (took 8.561596298 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.943466308 seconds)
  done (took 8.69989231 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.834072525 seconds)
  done (took 8.591775293 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.891997902 seconds)
  done (took 8.648773921 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.78845099 seconds)
  done (took 10.54486524 seconds)
done (took 167.052476343 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.821975569 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.819865634 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.820903052 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.817875414 seconds)
  done (took 29.036632668 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.863770188 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.863656308 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.865738277 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.874642865 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.867064089 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.863855459 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.856352538 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.856348271 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.874091127 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.867163668 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.864976961 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.865550514 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.863651563 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.857317947 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.866107969 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.865513873 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.874679915 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.865486746 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.856593036 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.865926995 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.831679506 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.875036488 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.867188087 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.832356324 seconds)
  done (took 46.462535839 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.027834474 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.900489252 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.984102285 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.882150988 seconds)
  done (took 9.552143894 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.882716382 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.885148729 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.896475415 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.935906461 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.964467827 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.895376264 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.859597889 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.853012768 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.840216492 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.885137558 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.9601058 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.901211563 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.980853463 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.832286159 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.018709306 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.831191332 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.832891793 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.884714367 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.935790183 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.96373148 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.832792441 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.883298425 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.887497699 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.901273924 seconds)
  done (took 47.303208927 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.83181751 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.840425747 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.83812231 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.830896301 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.831135245 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.831796762 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.838103259 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.83392375 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.853031096 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.833524454 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.83218176 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.832389139 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.83147813 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.833084493 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.832406068 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.845278754 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.845962539 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.832915087 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.835517916 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.839409298 seconds)
  done (took 38.482727701 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.82481201 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.783432784 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.176931342 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.080123664 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.825515932 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.8228527 seconds)
  done (took 32.273190992 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.876022315 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.956840047 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.833930314 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.045443997 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.120195675 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.833879597 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.831996818 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.981429056 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.173112044 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.151445564 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.877006193 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.872219801 seconds)
  done (took 25.314939424 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.826920141 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.827367722 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.835987938 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.843455561 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.859735351 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.838078205 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.840569613 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.826975096 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.860406097 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.864756221 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.837689303 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.861340873 seconds)
  done (took 43.885067114 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916720353 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.875697408 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.320311903 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.5502756 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20577505 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.038711718 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.564749418 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.226746131 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.83468934 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104238119 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.263806767 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918842241 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.088072328 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833042026 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831199359 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.539356204 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057297582 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188112872 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82752235 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819589942 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854965416 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.834878848 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.956489528 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.843349303 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04346325 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.964171866 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.091214516 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831277397 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039494109 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843761832 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842278106 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831784022 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.105295403 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.339989695 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922371858 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841145049 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.538294587 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.542379323 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.832885596 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.895548287 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05359697 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.833108014 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842071029 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.830918202 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765534353 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.831010979 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.236156386 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.837477774 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.542647659 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.831303222 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842824313 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926292806 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.836499793 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.647723421 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839994342 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.830146924 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.830423669 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837676453 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.401240162 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.260075061 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.835996467 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.769399077 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.92234852 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825241324 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362997988 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.932235129 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.836690295 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836877247 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768207806 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.874173498 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849892411 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.163689123 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.852739384 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483346463 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41333386 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.277801065 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.764313225 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251273971 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.838526339 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.768533682 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062205411 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833677265 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769143819 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.77722502 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768294241 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.328396875 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839069751 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.941997608 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839632006 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.230739506 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.845314418 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854176501 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857023228 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057817665 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.795250868 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833996971 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.027088934 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.975112304 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854264158 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232172916 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769855328 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.836087861 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091606515 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.044594784 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.84918413 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.53383357 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98684217 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834491555 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.872433464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.834966389 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.846494772 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.311853465 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842735694 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.26128276 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852520501 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.835537769 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358314416 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832816197 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.938647103 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.288174714 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013524745 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.388863229 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833889936 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91853769 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.839641805 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.836385053 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.924831536 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.350857335 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.835898269 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.836851787 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835924303 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.848657654 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.834954213 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785820433 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.839970192 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317835621 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.838636756 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.061473941 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.835832999 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11264603 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772224688 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187031563 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928286182 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.058135712 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.794156092 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.837607069 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098922772 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835955853 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.840581962 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848479383 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8560408 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935756086 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85910926 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.845657811 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.095275858 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.840328079 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.841126264 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.929286117 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.839229577 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844846793 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842942304 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.679406054 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314626268 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.812290632 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.8441333 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.728021028 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.852721973 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901784858 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844025942 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.847962046 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.07418747 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.63784015 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.842953174 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.842488316 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063760742 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848480914 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.848686167 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917610498 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.985045064 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320419808 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847893652 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.77209417 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.549060745 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.532210832 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840024472 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775877172 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.838761052 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849433049 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850577533 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.054093129 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.320724227 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.836531315 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.853819517 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.844533232 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849848704 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.844074286 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838896337 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.052001673 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.273999517 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856798562 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.851758449 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983881434 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.854522524 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774048443 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.843751886 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844520178 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.840108547 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.839985623 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872422395 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.836153641 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.256787243 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098807945 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.54050533 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852496852 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.988688992 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.857950556 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.875774772 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.055792283 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84205694 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.858273323 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851167016 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.851535489 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.944929388 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.5132599 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.406298646 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451733093 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263950554 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.562825347 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.856731917 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.842215463 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244797731 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77558801 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398890463 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.963064486 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247022645 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786724536 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988733494 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.80068042 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.373483437 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853269802 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070053327 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.535949561 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.058901072 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853916173 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054029445 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876581736 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.854442828 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771543183 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.142727272 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050130766 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.09052475 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923240597 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244669078 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.061741713 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.844350737 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.840322988 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.886628107 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952563807 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.554322391 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.014354284 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.840193222 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.307940489 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25591858 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.849378079 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.069341521 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36873539 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853896265 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.994196693 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779876467 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853055043 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853900436 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.843269425 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.553927194 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.296582072 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.098747954 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854189343 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778174903 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.855961224 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.270356969 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.696689402 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.850179725 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843979628 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369188308 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.85509947 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056545899 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.855349935 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.034083176 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849951488 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.780296203 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778606395 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.536337972 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.851128201 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.821417919 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204487483 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.910635429 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884287598 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.852582204 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.894406497 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102786173 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.857878704 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.325378098 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070184352 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.633495341 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869146061 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.945762408 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093460986 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.830038719 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.846713599 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082098217 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687988072 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067494705 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.362128405 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.74754371 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.843256641 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059161398 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847524211 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.313143795 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024084022 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.55378605 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.859538617 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433524703 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867471233 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.314977273 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.762044938 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.933948892 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853752484 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925893608 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857373187 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.858265645 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.858078072 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955165175 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318903606 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849024164 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.861787572 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940796785 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.290159379 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.040147845 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.851799075 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333570907 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443985891 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330572332 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855978282 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847158669 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.850826237 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782317083 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993700148 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.077956634 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122738472 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977264842 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.976596224 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868939257 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.103446882 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.850920257 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063686062 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124085937 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.743210226 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84826018 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.862226749 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.847411129 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858579215 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.060452668 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.2164047 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280003414 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.96075343 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84783333 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250743407 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124801795 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.849468536 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848765067 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44191217 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.859751773 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.879539652 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.856246718 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.336828286 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9971991 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859745769 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363089729 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.859796799 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.004212508 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.622635749 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872199762 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.106345064 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.115923535 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.860800021 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.342200589 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.438136672 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110085758 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917560329 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861719426 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.955210794 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996001937 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.320836479 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852673877 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.851869671 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.066955177 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.561142571 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.861908792 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33752258 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111038585 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.847438509 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.321908562 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875749373 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.860708766 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074772541 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.338867969 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072130048 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861515739 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.858267507 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.668129939 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336458017 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859484222 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786006004 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.85471606 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027793554 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085583162 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870651993 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.304506289 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.562080367 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277549297 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.820902037 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874088198 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.853910023 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.445191856 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332680737 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.044298831 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212919668 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.414704115 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.869155738 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127505101 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.85675798 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852167031 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12945614 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.856254182 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.852511157 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.866429876 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.335305945 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.382363838 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.858736022 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882630891 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.789998902 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.196549615 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50169579 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789517769 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859490287 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.97608192 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854367622 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.98547151 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86269439 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.332005372 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858834066 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.616641972 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.127056317 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.857517928 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.840369961 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.123279069 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.86109952 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86027932 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062613077 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859560408 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.529810757 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.20547993 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.11140629 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.85361895 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.839717941 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.858399529 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854632177 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841910192 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.051736261 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.067262477 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290785651 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.852025204 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.867257342 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858589801 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.071528001 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066283811 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.334979703 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868052057 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861255412 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872857397 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.759913547 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.364217141 seconds)
  done (took 1769.380880552 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87420907 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.864047032 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.863457825 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.87226539 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.862117351 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.91781324 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.921478975 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.853625269 seconds)
  done (took 56.815868307 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.854621503 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.067715784 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.888771196 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.855656906 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.861686122 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.862765582 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.171071583 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.866075863 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.862560954 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.864357855 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.871861871 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.859531943 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.342743278 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.864169729 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.867261721 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.841943374 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.86109983 seconds)
  done (took 74.452007101 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.854568924 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.171067759 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.928014154 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.852707483 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.964370807 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.857893483 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.152939442 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.896258627 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.861737745 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.065129998 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.493592418 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.879117202 seconds)
  done (took 89.766830784 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.862285059 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.860899546 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.861637915 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.861935016 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.862527427 seconds)
  done (took 11.098238018 seconds)
done (took 2275.584203163 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.10986592 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.314533252 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.272906042 seconds)
  done (took 6.375382468 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.002391917 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.050728359 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.170575642 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.176177665 seconds)
  done (took 10.187322202 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.138877182 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.228088776 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.071156676 seconds)
  done (took 8.22548022 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.791860057 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.861011351 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.943748619 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.85827133 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.854925038 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.856153205 seconds)
  done (took 22.358564201 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.860977868 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.861919664 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.859988593 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.861450703 seconds)
  done (took 9.231702717 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.840934053 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.571034912 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.839064922 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.857421502 seconds)
  done (took 20.895739457 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.606480338 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.618794084 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.603897033 seconds)
  done (took 9.616834293 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.620961124 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.711984766 seconds)
  done (took 11.121406857 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.138238439 seconds)
  done (took 3.926793316 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.99194187 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.125163397 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.725477204 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.571484593 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.75751508 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.255285495 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.875145968 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.612511635 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.565614 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.197488922 seconds)
  done (took 29.466474744 seconds)
done (took 146.902386046 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.551424839 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.242160258 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.067094167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.52221575 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.106764333 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.069727812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.272892738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.49520435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.054133887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.043908387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.580563446 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.097811654 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.00834114 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.224424656 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.011600118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.10033634 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.08760166 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.586039951 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.261934438 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.427277115 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.300048528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.160707431 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.418537514 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.197922433 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.094657597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.013138059 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.735535775 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.122798996 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.412676058 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.77417603 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.03221993 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.576987059 seconds)
  done (took 192.440512598 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.856649133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.869045137 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.853643017 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.853991407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.64537475 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.874153953 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857582442 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.866803848 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.37174907 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.368375047 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.875406515 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.626258218 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.876345712 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85497782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.855634848 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.865065132 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.517064675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.87658254 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.870783718 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.856340949 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.856326121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.526833016 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.876223761 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.53545265 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.496016247 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.877587928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.860968844 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.85618404 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.856003719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.871049481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.857777971 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.85544579 seconds)
  done (took 218.609939627 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.857963384 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.855968688 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.858112267 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856814491 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.870971921 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.860036742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857289219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.857362501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.855856339 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.859632387 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.872141943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.856534792 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.856811779 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.870164527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.85829409 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.857084363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.857235325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.874973263 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.857158868 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.856852179 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.856484822 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.856852246 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.857912314 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.856904973 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.876137385 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.857499052 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.87361016 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.857997857 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.867836586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.868903587 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.86155908 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.873186707 seconds)
  done (took 221.365987021 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.064480687 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.869732615 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.870939642 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.829049853 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.87081246 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.868922642 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.8630437 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.059820651 seconds)
  done (took 19.091062938 seconds)
done (took 653.296715995 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.767237191 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.507310937 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.036155118 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.887308804 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.379136749 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.885923843 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.888814483 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.999116837 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.239925312 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.985562541 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.829388127 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.883362176 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.946848647 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.885708017 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.086067889 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.955944862 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.607670548 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.705510594 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.133584668 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.177371518 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.078702833 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.126428615 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.997537615 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.265959657 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.944062425 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.145746844 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.341015469 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.606468069 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.886956848 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.138655475 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.089209017 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.548982513 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.896032257 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.898740826 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.953405799 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.935952 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.562667735 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.895748785 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.044861591 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.917727727 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.179549448 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.058487283 seconds)
  done (took 110.095436175 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.857111875 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.85774 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.856379665 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.857855143 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.859171372 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.85882337 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.856911146 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.857092443 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.857526253 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.85663468 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.856845228 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.857650898 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.859063267 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.859835318 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.85820689 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.858064918 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.858146826 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.861278412 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.859475625 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.859002563 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.859383409 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.859790571 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.860231534 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.860102049 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.859297178 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.860417233 seconds)
  done (took 50.119952376 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.872793582 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.064566279 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.190310029 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.875167147 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.87166057 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.874503387 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.921859928 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.873282089 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.875358742 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.874842461 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.998707329 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.874915172 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.891415414 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.194805723 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.872457874 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.875189587 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.875330567 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.873358799 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.071941046 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.879770784 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.923309484 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.872785658 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.924284973 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.880271566 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.87185214 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.873368795 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.876656665 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.373428534 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.871443526 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.000635165 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.349373722 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.922377082 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.325453374 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.196598214 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.349267223 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.877113243 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.875370859 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.002121723 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.873033128 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.874394105 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.923577343 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.872230515 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.199914131 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.417686885 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.888716122 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.875674504 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.382598687 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.000838991 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.023170868 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.878932807 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.201666142 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.877004524 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.87655914 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.875731739 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.024173716 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.877285424 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.874064697 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.249293596 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.875609601 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.926260706 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.874781098 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.874531279 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.078780026 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.87349912 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.067742986 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.873792897 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.881942529 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.873143073 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.199744352 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.8757187 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.436570279 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.89071597 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.876715857 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.998731881 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.064425887 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.411904892 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.875776091 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.07946079 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.338664492 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.922101902 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.876913845 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.372651386 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.926339073 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.87712172 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.879337585 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.879364544 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.876684129 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.922119576 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.923961258 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.376629426 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.427653827 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.2654209 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.925624813 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.88636531 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.875352283 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.253869126 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.876767681 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.88012729 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.195924162 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.446059683 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.892906804 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.884385791 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.422556088 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.892839833 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.929714155 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.881949142 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.203341346 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.877140069 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.923188775 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.879360693 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.883108694 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.878778133 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.929935179 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.878501128 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.881450049 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.415567092 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.020881854 seconds)
  done (took 235.728641275 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.871797086 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.868391028 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.871341367 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.869036029 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.870287251 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.877515175 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.871943854 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.872555106 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.878649953 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.872051774 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.872563171 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.883757534 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.875577472 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.884194596 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.878714151 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.87897842 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.484561552 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.875529793 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.873283204 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.869077018 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.602768548 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.875426519 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.87371531 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.870262052 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.878291733 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.875383806 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.875975371 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.872477764 seconds)
  done (took 167.629357223 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.882429906 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.238796788 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.878996058 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.95470863 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901745132 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.879118971 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.953528912 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.906122149 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.880315615 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.879555635 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.879177763 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.072333473 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.880419152 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.203489019 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.985387851 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.956642692 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.200831602 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.880467341 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.880063979 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.88001146 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.956907319 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.8884603 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.071867 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.237911943 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.880657939 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.240745958 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.867549786 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.883736308 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.879876284 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.241081418 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.878834611 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.074591506 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.928091338 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.908586968 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.240100964 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.200876427 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.201485203 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.954537357 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.879076369 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.880283624 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.881013757 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.870318466 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.241997418 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.882240349 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.883024863 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.234242613 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.88190221 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.884869375 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.892227989 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.881888493 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.912607334 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.909576444 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.075338509 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.243578055 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.928107511 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.903805136 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.956034378 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.2069358 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.885729585 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.203919674 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.867563036 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.24371699 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.884060129 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.870809995 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.882590645 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.888371 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.975792529 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.955833704 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.203022453 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.880251045 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.204504625 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.97500361 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.881268224 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.881426826 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.885401945 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.243475154 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.204336183 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.974658683 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.95842448 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.009969961 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.870084436 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.880522098 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.871874655 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.932603323 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.88202026 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.244470069 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.204099406 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.883308549 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.88609715 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.886960315 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.887508861 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.992134219 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.242122524 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.932282488 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.198139932 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.075552647 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.076303813 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.884278793 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.915446096 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.883754894 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.080141042 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.884892222 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.914210973 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.251623882 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.07936047 seconds)
  done (took 210.750094437 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.05489225 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.715790486 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.947888256 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.967019825 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.301641796 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.370089555 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.821119599 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.926013655 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.946810392 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.969695154 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.338779009 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.975253702 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.011272762 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.927451413 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.446923642 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.918238264 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.947723428 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.965346849 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.968992995 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.675553802 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.372914635 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.119832385 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.970967168 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.447660138 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.910863349 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.427796984 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.538497371 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.347623075 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.007166794 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.663571165 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.31704726 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.812434641 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.386591828 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.344241767 seconds)
  done (took 78.675691866 seconds)
done (took 854.793648716 seconds)
SAVING RESULT...
DONE!
