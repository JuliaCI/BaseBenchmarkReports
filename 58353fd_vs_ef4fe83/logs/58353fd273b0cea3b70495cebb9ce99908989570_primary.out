cset: moving following pidspec: 16370
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.356491224 seconds)
loading group "string"... done (took 0.648071294 seconds)
loading group "linalg"... done (took 7.675387145 seconds)
loading group "parallel"... done (took 0.176119927 seconds)
loading group "find"... done (took 1.176735077 seconds)
loading group "tuple"... done (took 1.932921514 seconds)
loading group "dates"... done (took 1.262934893 seconds)
loading group "micro"... done (took 0.241101636 seconds)
loading group "io"... done (took 0.948784586 seconds)
loading group "scalar"... done (took 37.930397933 seconds)
loading group "sparse"... done (took 11.832830107 seconds)
loading group "broadcast"... done (took 0.952585933 seconds)
loading group "union"... done (took 12.267296564 seconds)
loading group "simd"... done (took 4.499318811 seconds)
loading group "random"... done (took 9.149236562 seconds)
loading group "problem"... done (took 1.682874012 seconds)
loading group "array"... done (took 20.909546728 seconds)
loading group "misc"... done (took 1.69325428 seconds)
loading group "sort"... done (took 3.350554306 seconds)
loading group "collection"... done (took 17.525900097 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.555627545 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131898041 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124396879 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125815233 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155490876 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119639803 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132294466 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09322762 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.890468655 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155440759 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12375944 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.44469388 seconds)
done (took 5.595167358 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.182450096 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089323612 seconds)
    (2/2) benchmarking "String"...
    done (took 0.090328142 seconds)
  done (took 1.377759269 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071894212 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129864844 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072883748 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072730312 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073350877 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.075807642 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073053106 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.073367562 seconds)
  done (took 1.76739546 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.079564444 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.075795015 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.072382655 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074731525 seconds)
  done (took 1.498719653 seconds)
done (took 6.104729573 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.801567526 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.218801376 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.195202523 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.42174598 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.138005245 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164097986 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.660185526 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.312802566 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.196337764 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087168297 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115796426 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337356131 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115476495 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.639961251 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081498826 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097100668 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.145166352 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416298872 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075811313 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088175533 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095291435 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133829037 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09099001 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.080145792 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150473827 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073939781 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143005051 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086536878 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.072228089 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.220174112 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.178343955 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66149589 seconds)
  done (took 10.530087045 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102891138 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10353355 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075523567 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129885452 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.102735211 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076318889 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077466741 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073932059 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092849653 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134226419 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094849385 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108413036 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071753905 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.075426522 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.091741604 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210736535 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086407629 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.087400605 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07689522 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.081817858 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110782715 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.087727328 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.083605682 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082932473 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.135782855 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186175554 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.106220402 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.104801822 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.073598906 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.085054825 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.121254581 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131025671 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071795122 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072369735 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130395894 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100575656 seconds)
  done (took 4.870635028 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.003893009 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151267503 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097922138 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141934531 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.091605334 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.071137189 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116039004 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.098157919 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071863953 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.087929284 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.219384351 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.408065971 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.618678982 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118043781 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111582838 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073980808 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074835698 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.073012615 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.555508567 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104139962 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.114964647 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08888646 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077667937 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.075678667 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362272152 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074607713 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.070442639 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075299467 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063834674 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.132902224 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074014742 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.962306148 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164132457 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072955053 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10707708 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.31006812 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100416931 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.074695958 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.151130903 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074803838 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072183508 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160318093 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077646165 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073379463 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091804474 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110403663 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122574771 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072884585 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073968834 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16957955 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071594854 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086145778 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.108035911 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.161451534 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.083421912 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072112952 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.263979163 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095679207 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075799497 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071717499 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.175306354 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134284709 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074036938 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075408275 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074639494 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.075829296 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382459621 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073060976 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.928418781 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.077120526 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082997844 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076044562 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075820881 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079361634 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078511863 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09461342 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072694149 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081632659 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073527202 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.073250565 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073119163 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.089450041 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392475049 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072824005 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074489484 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071126632 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095529097 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102467516 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072045545 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071404719 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105524289 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073665297 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071761984 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112679975 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07236078 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.089616631 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075148007 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119025336 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075636864 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.088835057 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072288658 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10253093 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.078877799 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104282689 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.085296812 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073075026 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.419268074 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069834884 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.070343642 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076034159 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070181407 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072112211 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071066316 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069148889 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08332988 seconds)
  done (took 22.369889781 seconds)
done (took 39.971185212 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.264319211 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081898381 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080520297 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080852624 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080477493 seconds)
  done (took 1.877814236 seconds)
done (took 3.17789528 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.130248931 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106679937 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071609405 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10444411 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07144141 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108771309 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108201571 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.088791256 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107031972 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071558853 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104995039 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07126223 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070468922 seconds)
  done (took 2.504715723 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090731221 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09336868 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076713388 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090642155 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070203565 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090644704 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091043912 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097189207 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090122203 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081394771 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072399348 seconds)
  done (took 2.207917758 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088969418 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.090928282 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076326155 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088006665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069718272 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088932846 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088637033 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092223605 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088602595 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080392654 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07043504 seconds)
  done (took 2.184532307 seconds)
done (took 8.15487741 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.083808432 seconds)
  done (took 1.336566203 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59921378 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.148844944 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08785785 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11786008 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196572912 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.124693219 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278696143 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.093698483 seconds)
  done (took 9.080873516 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10923707 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.076659792 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.076196236 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078187369 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074856835 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075096224 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077061743 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.074863069 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075340214 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07709252 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.077043619 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078771858 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075922287 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075168185 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.078197821 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078053197 seconds)
  done (took 2.582396815 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099199806 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098211659 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080241107 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.081115533 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.078430598 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078000155 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.080771606 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.079810275 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.076870026 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077904214 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080479321 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.079825159 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07788627 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070709486 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079741088 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081415665 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.077028668 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08031988 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.080250416 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.081110903 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.08062583 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.07070844 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.078504171 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080285034 seconds)
  done (took 3.291579944 seconds)
done (took 17.553715599 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.120852398 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078027138 seconds)
  done (took 1.458855166 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08767659 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089216016 seconds)
  done (took 1.445693367 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.088685802 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.071892321 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.097236234 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.084743146 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072800423 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.072213351 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.094056708 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072341786 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.071396771 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072972671 seconds)
  done (took 2.065093635 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.074587643 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082979186 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.076466041 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.087793799 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.079781019 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.069955096 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07765797 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0731519 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083411662 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.068524714 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.077419543 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08953699 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077511261 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.090440748 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.078238454 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074545509 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076821681 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074285901 seconds)
  done (took 2.685079555 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072016297 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.072508919 seconds)
  done (took 1.420462168 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07238784 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069170279 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073250107 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073043466 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.069539041 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.068730576 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.069991053 seconds)
  done (took 1.767690658 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.392264399 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119947464 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.322991332 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078595507 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.088034818 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266490916 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.0722045 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076971678 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.077926201 seconds)
  done (took 2.811604971 seconds)
done (took 14.930762615 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08669256 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.093362287 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.10284549 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.385204918 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097936891 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.071941807 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.120059267 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.199130162 seconds)
done (took 2.440911392 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219036868 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.651360527 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.415376779 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213459871 seconds)
  done (took 2.553090993 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354259229 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09496603 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065517521 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073524068 seconds)
  done (took 1.874957738 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.073302637 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075709291 seconds)
  done (took 1.433311932 seconds)
done (took 7.363660221 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072823276 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071594726 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.069484206 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.072594151 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.070545971 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070222181 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071630574 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071712297 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.089048613 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.072099026 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.071605488 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07265635 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069113798 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069450918 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071883868 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069449429 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069764947 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069109296 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071510206 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071374689 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069292113 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072605678 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069481539 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069813238 seconds)
  done (took 3.037319507 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.091619854 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073156887 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077420206 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.077633076 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.075330823 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.077600886 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077355586 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071871385 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078012247 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073915417 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075354332 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074756556 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073664797 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075025273 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074313129 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075280284 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.076322553 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071956329 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075162403 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075042184 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.077160866 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.186160896 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.074959933 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076812324 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.075248234 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074947736 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074382061 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071804745 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076668759 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074813946 seconds)
  done (took 3.675177322 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.076311259 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069500355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069902186 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077076653 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069558527 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.070561846 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06916919 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069542716 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.070309849 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069150644 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.070774961 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069295853 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069622276 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070629244 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070556942 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.073186103 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085140241 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069512392 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.069264014 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070275777 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.072852346 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070117215 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069239976 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068828279 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.069127836 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06901993 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06994169 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069717866 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070425467 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.069563561 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072191659 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073193591 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068736434 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076117533 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.073215896 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.069434775 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073373581 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069241578 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069972739 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068519071 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06889892 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.07215857 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069945106 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075916623 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069506444 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.070237418 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068891495 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.070655356 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069969629 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.071896426 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068769234 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.069812022 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.071635239 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.070426979 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074249529 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069514691 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070236271 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069432833 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070397962 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.069446264 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06922191 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069484056 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071870058 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.070071528 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085493364 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077615416 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069943648 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071561438 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070508602 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071552803 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070870454 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08334545 seconds)
  done (took 6.43021533 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095951265 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093745628 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070991097 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070779775 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068139971 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070436464 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075824033 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070088478 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071643254 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088066108 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069886558 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071282803 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070780807 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073947283 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070833391 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071710321 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078060439 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067604206 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07044179 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073452033 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070339388 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075858382 seconds)
  done (took 2.946243592 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.163696476 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076504516 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111683087 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081290353 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075846449 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080914605 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075875202 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075490516 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075265154 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07339664 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073385891 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075491895 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07544 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072939807 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073571055 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073171934 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075708818 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073847739 seconds)
  done (took 2.785767258 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082427042 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072009331 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092820162 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071638652 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.071826118 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074675265 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076353827 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079921145 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075263312 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071544767 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.079746992 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074206236 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.074259147 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071464299 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07451785 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071273844 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.07446781 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071628336 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07996055 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075723187 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076025395 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080250316 seconds)
  done (took 2.974242239 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085376868 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074039377 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087515703 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073476219 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068075702 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069670427 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.076423023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071073462 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075884703 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074282511 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071261428 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070027846 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074087141 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07112914 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074300252 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071761325 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074040985 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071373803 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075863753 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067117752 seconds)
  done (took 2.780618993 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091978615 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074265308 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073207437 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081698571 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073562391 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073206799 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081379542 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073100332 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073460485 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094380973 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073685299 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074371161 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081245588 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078240843 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073516343 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080978822 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081131122 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080590816 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073382173 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074029155 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.094678664 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073258735 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080569841 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073683047 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073963771 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073679166 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07434309 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078284616 seconds)
  done (took 3.491288055 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072233249 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072201697 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068981387 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069305349 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068458078 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069539699 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06937752 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069320101 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071779431 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06970168 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.074726463 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071795903 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071975757 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.072311328 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072589132 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072196233 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072276714 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06968716 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069456884 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069209833 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072540745 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07225627 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.072365873 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069613524 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0699808 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071919549 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069369611 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070250165 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071970105 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070438083 seconds)
  done (took 3.436303113 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.08103882 seconds)
    (2/2) benchmarking "in"...
    done (took 0.079456402 seconds)
  done (took 1.471128958 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.069428324 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086070402 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.069358941 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076207292 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075971264 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072531138 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07909027 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075884644 seconds)
  done (took 1.90856425 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088150734 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.083479498 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074478583 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085434385 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.083722596 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089182547 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141454265 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073200826 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078477699 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070306743 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086325719 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071623216 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.079546708 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072643201 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07825042 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078721876 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069824898 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.077956326 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074557377 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.070422523 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073615015 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081364984 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075530955 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067508342 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073807526 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094857332 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083682543 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071518911 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074935958 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079659288 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.079398876 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065890636 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072209265 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073380479 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06993533 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08429478 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087153435 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075982028 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.081282886 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073195391 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081851894 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067018188 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077451806 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07934234 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082871953 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.072871972 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.073216847 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067020475 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070833651 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07482172 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067581826 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07294714 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067389503 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080503693 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.076509523 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082856393 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071349145 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.074591192 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.075249994 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075988225 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079416238 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.075193812 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075694148 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072120756 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082088861 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077209497 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081548681 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.067552497 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.066196923 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069867449 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.082740516 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095519834 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.078408371 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073207352 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072931134 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069542124 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075274047 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073046704 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077535007 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078814089 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072464919 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078455188 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079075015 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073348592 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.075073983 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080050463 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.070576739 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075063433 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070466379 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08897695 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071100762 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071006526 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.070612823 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.082742402 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074938406 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071876218 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070508427 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078977418 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066259897 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072149067 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073031794 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074183522 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083005812 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076497889 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076313249 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080174229 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07853215 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072054085 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074075238 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.068379911 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.198251191 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073672799 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080655281 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066384743 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076897151 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.075253088 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075523316 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.084340282 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.074841012 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.075541713 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086339457 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.081211856 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.073626528 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07087368 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07810605 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.07593597 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078079368 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083604209 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.073483395 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.070189122 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.070115333 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.078966628 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.074414974 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.079501541 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08103528 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079649346 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.069539247 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.073504989 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081360114 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082624103 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074770338 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.074037558 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.078915204 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075696336 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.071707513 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.079142109 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.075027763 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071499098 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.078624434 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074747022 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067570302 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075399153 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.075106617 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071192755 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076799305 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075827246 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074742744 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073610401 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072011232 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079272707 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072822315 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.072401919 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073500544 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072076225 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.083628728 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075079578 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.067638608 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069168257 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080660113 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070564282 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.072164396 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071906358 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07507621 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073426317 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.070178389 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.071792231 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074345182 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082182334 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07658274 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072964495 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077932941 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083721562 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07189933 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.075117085 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.071580042 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073187335 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.072676949 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081615988 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078043214 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.077059619 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.075045464 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06917087 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077991049 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079772735 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071810112 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.070227773 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071243306 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.076242087 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078422086 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07663721 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073813052 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070795779 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072928358 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075391632 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.075225839 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.071952043 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071855319 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078142843 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.069894542 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.078340875 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072623249 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.082229177 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075343707 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066893462 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074550272 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070155486 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.078689768 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066645851 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069029407 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070492438 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071506118 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070362285 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073812715 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.192140719 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080640432 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080373389 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073770699 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072460484 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.072544518 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080855801 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074464089 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076544448 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077266014 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078537087 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.083568239 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071841774 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076324827 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084143898 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.073269423 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066140723 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077929023 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.071023056 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.071555991 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072520337 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.070528206 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075329853 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081611474 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.079410277 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066936428 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07422055 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071772768 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072091877 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068390898 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077055212 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.075650371 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073596253 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080092911 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072451232 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073134217 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076985784 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071860347 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072570774 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073966095 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075675452 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.072707258 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075014163 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073294663 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076283874 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071374987 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.070374347 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074473341 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.072606363 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074664635 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077672118 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.071697688 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072054007 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074766872 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.073280758 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073428534 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072462925 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071979015 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076401168 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073590911 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073121094 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076685052 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06714279 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080072472 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07311415 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079972657 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07262969 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069299708 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079232378 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07486667 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07859728 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.074414268 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073600812 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07510585 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.071203994 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.075299113 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079767535 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070176943 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083491785 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080045156 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073761431 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.076052893 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07265568 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07444589 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071983775 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073316653 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073825479 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.073011256 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.072936836 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.077175594 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074783782 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.073020898 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074013154 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.072989975 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074256677 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.07362699 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066993337 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.071826228 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.072661122 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072977222 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083192343 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072962435 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071866108 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.07140299 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073168952 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.071635961 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.068558666 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.079776669 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080704713 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072690174 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078895925 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.071522139 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072944457 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081918655 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065447004 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069346933 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.201374952 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071923468 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080746228 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.073713255 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082918232 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.073886137 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072786234 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.069998989 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.073624243 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.071708547 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.067631025 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.070312722 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076837489 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.072640545 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071581718 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.072345087 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.075431364 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07403769 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081889224 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.072893864 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073622351 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074175394 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.069883954 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072179819 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.072181675 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07575829 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073618477 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070377266 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.071091154 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.07415594 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.073848358 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075466471 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073190067 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075210389 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079962395 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072830558 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076223392 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076863459 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067658525 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.075990547 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0726131 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.073308062 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.074515091 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.078673225 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078367894 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073717448 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082315984 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072912769 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074313359 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073346839 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070910123 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072466228 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072339656 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07262986 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.072322006 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.073788436 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081108275 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.071191445 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.076139972 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073239866 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.073536416 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.078802635 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073111485 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.076218698 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079004528 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072799319 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.075429436 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081187721 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076274016 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075801319 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072479642 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.074331192 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078112262 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071732061 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078657984 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072999298 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.07306859 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.074786393 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.071106777 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071989153 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072281056 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07257076 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079133245 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07360289 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07503558 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071940436 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.07039603 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073456574 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075531405 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080500155 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074626299 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076049887 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.067427387 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069455656 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073686012 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070178819 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075057621 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074712997 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078223061 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074908145 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.073087602 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.071679687 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0817769 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077855862 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.075582106 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070565597 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.075232593 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072895766 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.074597534 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073165815 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07254255 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073644729 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076372053 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073379224 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.0706267 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077672466 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074533667 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.204151319 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07517745 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.075173864 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073443605 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068329519 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.073639415 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074936905 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078924824 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.0754992 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072399257 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083743525 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070772146 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.073465595 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.077519645 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071915759 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.077424687 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068127592 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.074851373 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073688191 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073229684 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068575211 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.072482568 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070810591 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074865712 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.072789041 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.068027343 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083238764 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081876858 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07622854 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07205218 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071333095 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.067434998 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.067671186 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072751817 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074333045 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.0751388 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082991717 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.072379891 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.072270678 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067356801 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072590419 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077242031 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075377769 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.069518594 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.068018726 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071637717 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076746508 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078481626 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071097935 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072408613 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075465548 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.07481283 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069883653 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076123788 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070150585 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.076594478 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085550728 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072949327 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073725541 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.079064031 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079718594 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073554369 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.067581893 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073170551 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.076130899 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073049924 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074199007 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074982001 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088291389 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075718046 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.072343481 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.071217689 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074800667 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.072164097 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080695548 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074007672 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.073454808 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076804295 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075307531 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080431372 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075486056 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080548827 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07555236 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075485192 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.072377416 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073189437 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.07029282 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071870607 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073722933 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073298067 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.076809607 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.08016267 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.0721706 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083401166 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.081915495 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.074647373 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.069116137 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.072228567 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071956522 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.067267669 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07450779 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.070041277 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.07105776 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070613214 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071000157 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073508137 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076838328 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073090866 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072289391 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.07246804 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0659296 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074472538 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074205875 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071840694 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068194 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071115507 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.204008227 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077015328 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078458057 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070380532 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.075540845 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075133347 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074327229 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068035197 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079910347 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072586982 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074984788 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.0716364 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073287984 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073965566 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076349921 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07758344 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074260875 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07616336 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076829529 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.074493305 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069846863 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070292179 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077919468 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.070579684 seconds)
  done (took 46.555919984 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106283714 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069443095 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068014656 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068068934 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078609532 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068479081 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067298004 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068515832 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06841908 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070037567 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068201091 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067234304 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075545295 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083620592 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078549827 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07204174 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067735934 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068688969 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06771406 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068466566 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075594082 seconds)
  done (took 2.907758185 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.079007735 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082623412 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081119517 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087391915 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076476743 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075867462 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080559724 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076161161 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083996495 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078469226 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083935982 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075690751 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077506835 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07830348 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077924771 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075788647 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083663356 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076281888 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.076420353 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080556964 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075808769 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080924299 seconds)
  done (took 3.117059344 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.07259673 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.071576844 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075036287 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066987442 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.07051076 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06659762 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075031736 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069949722 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075008289 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.071123921 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070288978 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070697499 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073917779 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066908242 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072001718 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.069257622 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.113000986 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.074825853 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.071571786 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073397057 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.067963819 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074155463 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067300415 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.067304091 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071468239 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.075044207 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071992235 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.070547313 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.071440905 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070893788 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.071774051 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.069459869 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072857456 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072012355 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0709004 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.071542263 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.071376015 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.071251192 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066931044 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069513947 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072531812 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067150603 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071750659 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072929467 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.070454775 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069904618 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073081503 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.071998205 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.067239863 seconds)
  done (took 4.897467557 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084801878 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115550819 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073237534 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094860368 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085090219 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07790835 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.075615221 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095714287 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069021106 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070023823 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087938141 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083938833 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071085725 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.075984255 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.078841166 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071969782 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.07275006 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069990633 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075018866 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070166292 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.074835172 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077439803 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084824182 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083661154 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075143665 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069559722 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070364491 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.075559294 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.083516354 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.075053273 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.075761217 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077167077 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08628326 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.073317378 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070720852 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.073616534 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08738962 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.074472003 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.073208013 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.069415814 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.073235366 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074854845 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077896978 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.087366905 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071888637 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077037948 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071570717 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069117622 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.083545255 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07372904 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078919764 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.084424829 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075165742 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.07140103 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075472343 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.086170581 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070851961 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.069598161 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.074894418 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.082871198 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.069320367 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075881461 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08473855 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.073695979 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.077793057 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.084917525 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.076590261 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075233416 seconds)
  done (took 6.792407867 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082173785 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101091939 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090344382 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089738551 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081237498 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.081676915 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090000938 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.081536645 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08105667 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.085732124 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080855056 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122198095 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.077601249 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084266926 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08149042 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080979972 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081460406 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081471675 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081206717 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081173267 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.08189912 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.088808381 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081197872 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.088106056 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085728591 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077330658 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081446974 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081922255 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08924076 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081491339 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085536909 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082383596 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081494175 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089389564 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085741767 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.081878362 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071582528 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081869348 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.081500772 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.081358201 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076917315 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089279155 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081554102 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.077120971 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081625133 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081675809 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088670429 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085229304 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.083635078 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.085842346 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.081628171 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089655346 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081562634 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081574501 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088943518 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.091400011 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.088291762 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.088840497 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081808266 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089152303 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088909948 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091383719 seconds)
  done (took 6.649596328 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089418242 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.079653934 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088145291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.067301944 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06977138 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078234525 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070089715 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.070160518 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079639601 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079710731 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081986333 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077606239 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080184433 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082353775 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077100733 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080700256 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077148149 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.077146065 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080015097 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077385561 seconds)
  done (took 2.962248633 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081043939 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089223513 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.072900238 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07714115 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.075779919 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078387199 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.07497969 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076023517 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072894325 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075254317 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.081816993 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081813935 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072767145 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077169112 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.081327984 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07720804 seconds)
  done (took 2.636183208 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090598403 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07899151 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.086606408 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.072453198 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07254711 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.068276834 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071703349 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067120321 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068391804 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084403092 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.07179085 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082690405 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.071976775 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070406799 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068872806 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.077170081 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067948116 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068838931 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071475726 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.08463184 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077826609 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069967238 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075300489 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07220204 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.075168335 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075984745 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071476957 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071653782 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069088501 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072358206 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.074388644 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075268144 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.068614144 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.0694694 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.070280595 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069157102 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072413008 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072587882 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07727777 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.071005549 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07010471 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073448987 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071857853 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.072290602 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067710105 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071973542 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.067944129 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.07430452 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069247155 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073974036 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070957457 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073633548 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071857238 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.078528738 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075018407 seconds)
  done (took 5.422977287 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084890353 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075216642 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068397662 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06955486 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075454615 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07335599 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075439542 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07374127 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073966696 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070377512 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073345884 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074825926 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072960831 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075160021 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073729511 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07519318 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067432077 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073056562 seconds)
  done (took 2.729534545 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076241408 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072368947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0791185 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072457319 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07208751 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07468887 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067924404 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.070777371 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07027422 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072101491 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071683469 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074005713 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070263203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.074668013 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071755442 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071943655 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074180855 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070660652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07200324 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067831251 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07466311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070676066 seconds)
  done (took 2.9875402 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100983909 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.089309591 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.147500811 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.086426531 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091657671 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.077411381 seconds)
  done (took 1.991040369 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097247746 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10646123 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072623582 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075720691 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081985898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075800824 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075986411 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075875899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08415366 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082600007 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0757371 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084986026 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084736795 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083308156 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081679866 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081403327 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076431889 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076476713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072592471 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089410009 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076149924 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084432698 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075775816 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075693928 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076201992 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083823736 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08434946 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081679874 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075459805 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083931346 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081922136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076416142 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084091354 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082079589 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075582608 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084215801 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075926088 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08923081 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08125792 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083466179 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.075499677 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081213371 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084443033 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080504502 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083717281 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076119181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080893419 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075613492 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075877891 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091711272 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082232025 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083034351 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081580904 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084541841 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084114358 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091527073 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082147729 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08431793 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081673097 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082453441 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083297477 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081640212 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083544527 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081820594 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08161976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083375417 seconds)
  done (took 6.78509553 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110876016 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073285627 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076648339 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081716081 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086182093 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076386023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076223504 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076255753 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076526618 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073381398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113982204 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076793673 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083457969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083626813 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075846718 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076194328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076350751 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083660138 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072820016 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09192964 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076300238 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083025503 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083177135 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083030189 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081924747 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081697206 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076105126 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075695539 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076212992 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076509935 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080561157 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076650784 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083788027 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073218376 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083115284 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075738487 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075901363 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080394474 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0759146 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081619905 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083040137 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089156996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076044573 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075959532 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081966101 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075580254 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076465887 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072943117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076471259 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072413935 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081946485 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082253723 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082348466 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083730154 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076404765 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076380976 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07612172 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075883293 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076236665 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081193839 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082853191 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076170189 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091300375 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07625817 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076205866 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083555434 seconds)
  done (took 6.699288165 seconds)
done (took 139.357572492 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.190504029 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.170977082 seconds)
  done (took 1.756201675 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075586971 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104516369 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083396292 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135176878 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.073189413 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106009804 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105240756 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08413374 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072138585 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073000008 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072118235 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075002124 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137695128 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072512813 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07191293 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074309714 seconds)
  done (took 2.823729003 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105168051 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169173754 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110493049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071353499 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10548174 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07863187 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071481118 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081199423 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077141407 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071087241 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078652041 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.076665188 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071507113 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07688147 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076972054 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.078586363 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070818094 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078578674 seconds)
  done (took 2.960028205 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106360942 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098252047 seconds)
  done (took 1.62138286 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164069896 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.11141507 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.153681762 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.356001598 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167034412 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.156538893 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.151868981 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.151589954 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119527252 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.146762509 seconds)
  done (took 3.087335382 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106352135 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161053466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.275168169 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123354043 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.079252995 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099434395 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125952335 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084878153 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.086478028 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.086334241 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085565931 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.082769282 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.105940991 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079256314 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.080526693 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082834823 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.11046269 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079724614 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.081127226 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.081627274 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1075203 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071595393 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079214822 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079975786 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082965107 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083936542 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071720201 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071919771 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082180508 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080493617 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082832639 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09814842 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083480322 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111607369 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07713076 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112559483 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.082977457 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.082281473 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.081133718 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.08015914 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.083766527 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.084138704 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080327081 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.082388726 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071597785 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.082976425 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072108601 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072386013 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084034876 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073320175 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083481169 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08236095 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.111785722 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073233596 seconds)
  done (took 6.374353679 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110145609 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.114826341 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077786787 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119316606 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108811504 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078398576 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108963363 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102699256 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.113939171 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.08009738 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.077361479 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079433342 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.09169972 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.093111774 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.122011312 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113161897 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079384505 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077631438 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112664614 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111222998 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074373633 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103132178 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097905959 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109077925 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.073602292 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076538309 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074327204 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07656378 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082241866 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084715131 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075399527 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086325833 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.091575293 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084342291 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073003375 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074574917 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074293143 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.08579938 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085184765 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.085537338 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.083883726 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073932542 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073805484 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075670309 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076052048 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073754398 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085666255 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08630131 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.084381269 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075451737 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076198425 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074547341 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.07592062 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086985563 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083340818 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086622985 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085915398 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074263885 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074479024 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.078301177 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086992586 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085092147 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084900169 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075702155 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084166511 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074116931 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085938322 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090612042 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074476304 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076041182 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.074700739 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075573722 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075839048 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083635555 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084549442 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076088075 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0755369 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074801949 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085688113 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083994728 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074319283 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082742946 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074417547 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075060554 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075608414 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075518988 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083902562 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085880357 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075697079 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073710061 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075105141 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074045589 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073739513 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082383766 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084595184 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083772105 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.082472589 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07461496 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.212579335 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087149933 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07734137 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.085517173 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075912257 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077676427 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076830485 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.086130079 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083964781 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085464926 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076544426 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075665476 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084850596 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08819352 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074692409 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.085481762 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087133867 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.086389312 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.07448102 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087826887 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074605088 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086454034 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076794799 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085745365 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07481752 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085484844 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075687934 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.074233469 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075289971 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.086655502 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076784933 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075219312 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075769996 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075505679 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.085958659 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.088336657 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079806687 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08504236 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08450677 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075890722 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084987332 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075482565 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084302936 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07674812 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076630595 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073515523 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087842081 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075398983 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074716735 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.075249238 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0869021 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074358894 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087292775 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084322376 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075274463 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08744125 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.085606934 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08437296 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085642736 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075612285 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075460089 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074751003 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075437898 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083327473 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085592572 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076222517 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074546326 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084037406 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.085565422 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.073172197 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084379192 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084013443 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084210852 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074981257 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076064056 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086812285 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086536785 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084715652 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084564257 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084595425 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074416044 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083116614 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084662864 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075048046 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090573522 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075138996 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088961402 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085279009 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083165116 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08458206 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.086570074 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.085927037 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086078983 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.088402544 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073600679 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073405762 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083769839 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073030963 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074036675 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082000225 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.205855968 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07641772 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.091305869 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075352215 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.086380403 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074834227 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.086523232 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074655117 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076740729 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090933798 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075548826 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076729221 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085878691 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076377028 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084366772 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086760906 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085395893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076223872 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076952568 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.0860567 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.085502434 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074862316 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074381595 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077150605 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.090769139 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084142943 seconds)
  done (took 20.147465817 seconds)
done (took 40.191610061 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.215722441 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158796374 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18945763 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.124126502 seconds)
  done (took 2.204109877 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124534428 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108099341 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099419389 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071327402 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105229039 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070871107 seconds)
  done (took 2.034099076 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319509885 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217438005 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195967366 seconds)
  done (took 2.182200933 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20875779 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195579907 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.426675424 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.269568855 seconds)
  done (took 2.657686362 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.151336112 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.095570188 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073811697 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090455671 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.139574977 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.168098839 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.106069717 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.131787184 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.085321932 seconds)
  done (took 2.542691859 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.155327677 seconds)
done (took 13.23381298 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.245459538 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.108952446 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.210882 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.226439619 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081637091 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076411841 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.137489257 seconds)
    (8/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.119606444 seconds)
    (9/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.08096249 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094542638 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.12988393 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.089362437 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.202859344 seconds)
    (14/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080170727 seconds)
    (15/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.077868984 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120233265 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.085587814 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089459518 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079580201 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.215607713 seconds)
    (21/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.152393051 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.08339975 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.223480995 seconds)
    (24/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.180472016 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.089153793 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190971174 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.206578922 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115477448 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.117752997 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.086853425 seconds)
    (31/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058059988 seconds)
    (32/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.08401215 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070164229 seconds)
    (34/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156631865 seconds)
    (35/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.235250747 seconds)
    (36/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.083703581 seconds)
    (37/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.081630603 seconds)
    (38/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.085041545 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.099290937 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.097902698 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.234595936 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.159863754 seconds)
    (43/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.16961044 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.150014894 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08684993 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.078158528 seconds)
    (47/309) benchmarking ("sort", Int8, false)...
    done (took 0.158147048 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169795172 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.058269929 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161385923 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.191923034 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.199747333 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.078654292 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.083200283 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.098322619 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082727581 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.104332848 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.232840588 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.229188485 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.083992418 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149664499 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.406397568 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079587066 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091866259 seconds)
    (65/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.11937489 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.0977501 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057361847 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076983753 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.154342975 seconds)
    (70/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.116664501 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072990378 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056292259 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.079556005 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097534245 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074607566 seconds)
    (76/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.104426353 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07223206 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.058607511 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100083132 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.086868192 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.302847824 seconds)
    (82/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05965704 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101248952 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.059289611 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.096880176 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.20101691 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056675513 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.079197001 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.079572779 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072843985 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068709076 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.149497699 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.081089509 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07871531 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097089679 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.07986864 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 0.072733063 seconds)
    (98/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.112788194 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.058330834 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.179780165 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.057099476 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.078960948 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072150445 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.078982882 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074303759 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.213921075 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.056956397 seconds)
    (108/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.104068426 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.174796561 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05793824 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.071895603 seconds)
    (112/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082611984 seconds)
    (113/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070090565 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1191678 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.168577533 seconds)
    (116/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074650181 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.096864587 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.073259349 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.125477929 seconds)
    (120/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079631251 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.182002828 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.188885947 seconds)
    (123/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057802455 seconds)
    (124/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.056342225 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.072084003 seconds)
    (126/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136972965 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.094512708 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091885451 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163025608 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124173115 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.082635465 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084616219 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.071542705 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.153009786 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082978198 seconds)
    (136/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067920311 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.097153383 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.077446172 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.09702198 seconds)
    (140/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.106152716 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 0.143641966 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079460554 seconds)
    (143/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.107281915 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.073258888 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.072093768 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.092246599 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056606261 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.189866059 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.146830336 seconds)
    (150/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075976432 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.089509883 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097237623 seconds)
    (153/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081487978 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.077651421 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.078255885 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074423404 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089144924 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071353069 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12950539 seconds)
    (160/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.163963847 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05898929 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071465772 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.057629809 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058017621 seconds)
    (165/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.07825105 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057181652 seconds)
    (167/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.107578198 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094572241 seconds)
    (169/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161179438 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071153794 seconds)
    (171/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.094119787 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.081081795 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.206336705 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.071442112 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.057053115 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.071322743 seconds)
    (177/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.105070349 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.213443953 seconds)
    (179/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079171938 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.212537286 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.056565669 seconds)
    (182/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.2740017 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107351694 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.080444922 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100144681 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.113062778 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.204518216 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079348732 seconds)
    (189/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083212846 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.057451688 seconds)
    (191/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079675837 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078923527 seconds)
    (193/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.059847 seconds)
    (194/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068511399 seconds)
    (195/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.086545191 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071941563 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.115871958 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.073303251 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.081010062 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.086874163 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078495662 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074592086 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097941048 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056631259 seconds)
    (205/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074913275 seconds)
    (206/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058331728 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.081581872 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 0.138293257 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.082983169 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.056758152 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.119963623 seconds)
    (212/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068129359 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093185426 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059532753 seconds)
    (215/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096391562 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072446089 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069899051 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072725342 seconds)
    (219/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162722831 seconds)
    (220/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056402093 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.169981736 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07037601 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.149102034 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.05744757 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081352839 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079534142 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096189497 seconds)
    (228/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078243873 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08256614 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056698503 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.057082002 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193971455 seconds)
    (233/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074152338 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.058488875 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.074795426 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.071666506 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058134695 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.078424303 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056667656 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094648037 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099251852 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.178790186 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.070146032 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06018072 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05818261 seconds)
    (246/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057148429 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071519144 seconds)
    (248/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.057751485 seconds)
    (249/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067473321 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146037045 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057331585 seconds)
    (252/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069847443 seconds)
    (253/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.057223073 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072162074 seconds)
    (255/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075729518 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081975865 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076870683 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.072246645 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.071696105 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069268461 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077582878 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070650612 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071892931 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.05699523 seconds)
    (265/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07881258 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078432392 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.072168992 seconds)
    (268/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07114812 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079814014 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.082825227 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.056484478 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.144876611 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071386828 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057897829 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154443723 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.056730976 seconds)
    (277/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.057279317 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.192209385 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071255557 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13503535 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071794009 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072775984 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.071364037 seconds)
    (284/309) benchmarking ("sort", Float64, false)...
    done (took 0.135670071 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056636207 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06688493 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092308251 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057477087 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136881714 seconds)
    (290/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066939824 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.079326843 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07069383 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069524122 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072561725 seconds)
    (295/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07984413 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058164169 seconds)
    (297/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069616245 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079724824 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097296923 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057021679 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077271979 seconds)
    (302/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.2746124 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.060118206 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075930963 seconds)
    (305/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.058684495 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079913592 seconds)
    (307/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097329018 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.071541099 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081747492 seconds)
  done (took 33.172277145 seconds)
done (took 34.633193749 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090273746 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100312464 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.081465369 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.100445993 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087142427 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082794593 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079680884 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.085757169 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086677829 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.087961594 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084165412 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060009123 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081651321 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.082827045 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081128796 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098135001 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084481206 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079880988 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079400314 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.071219839 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079581793 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071396842 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073873833 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.059935003 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085130963 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077899875 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078324914 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080020463 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.071951976 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071903932 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075221687 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079737654 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071286064 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084288957 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078467972 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079377458 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.08071073 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08333992 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073599536 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071746455 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080863611 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071414575 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.079317767 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079681579 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077665241 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077660394 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078728574 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.0837828 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09712906 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074293709 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081496349 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082349369 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082180552 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078759817 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075783019 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078693924 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076876164 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097121305 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079446783 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073380558 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080067819 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080438137 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077491421 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079040214 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079770562 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.08103868 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081562247 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.077689605 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080774552 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078078337 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070850608 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079421633 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074774535 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071319209 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082670213 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084640821 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070170477 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077643526 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078762857 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077513405 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070325874 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07319533 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07358478 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077632485 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073802915 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060234594 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075829602 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078426795 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070456236 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079382627 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078011323 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079454374 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073130173 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082182203 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071295784 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077463683 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071837721 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071557678 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.073321446 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075313984 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071151807 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073586657 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080664936 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073269982 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077688809 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085372153 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070907241 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078164366 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070243042 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070161908 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.085311667 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080145023 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070950444 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073507981 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069960271 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078387443 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070184851 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070711215 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070280088 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070382265 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076770034 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070128084 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.206296955 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080321178 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.085846933 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07265443 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075385042 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073723991 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072369282 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077875171 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071748527 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072032856 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073440463 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068653718 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072639884 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071693692 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080160344 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07446962 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080083339 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07396811 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079988782 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077699648 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076929627 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077465818 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070292568 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065183445 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073326605 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074285073 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073576536 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071732264 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07311613 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.072372147 seconds)
done (took 13.41854402 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074036684 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147105984 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.103047224 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10173417 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.092526985 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072569221 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.081597821 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.107925338 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073606949 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.108334077 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093279196 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091808187 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.122503098 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070762158 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07218111 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076252511 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072717284 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087051251 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107526758 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092791838 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121479736 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071633575 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099172678 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.095178514 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09457244 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100058881 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.073129219 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075681536 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075556414 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.108476139 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094576158 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07537988 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072653934 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104624436 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099657411 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089798303 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072584302 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089209955 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072057748 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071818997 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073656756 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.105282139 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087000501 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.086752185 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07614201 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074878563 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072997134 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.089969438 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096021362 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.085444663 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.093157152 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107765883 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074408369 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.072177332 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070310992 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09242451 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.071748465 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.075510628 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07246785 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074647131 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071631195 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075280813 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.088254671 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.086615826 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.076060465 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086249846 seconds)
  done (took 7.255435847 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090663856 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.100150205 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090514411 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.091154439 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.07141401 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072833443 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072323417 seconds)
  done (took 2.144121205 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.074109755 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094768667 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096236728 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096001573 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087154036 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.097790321 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082130204 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072806112 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098150188 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073370835 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.093893481 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106446787 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075191365 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.086189705 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096936687 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072108978 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096968928 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072334211 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075334022 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.096916969 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078327693 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101731414 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079468832 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.073144616 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087136 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072847599 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120538165 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077433863 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074259045 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.076044636 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073308084 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113735326 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.086742435 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080440914 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07258436 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087285069 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.087177096 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074936813 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085343504 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081405259 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086134187 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073059559 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07364484 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074133756 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.077886528 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082874799 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073118659 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076594879 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074821827 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093601834 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071416578 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.086591105 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075565056 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077912108 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074271728 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079862337 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082456696 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073453731 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092982885 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074004333 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090230958 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089393852 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087081241 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089140103 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074737001 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.086396385 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.086775863 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075021772 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075151411 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076048535 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089333958 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071400838 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.075226845 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084043491 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074856823 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.096116967 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095831925 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074484062 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.086573879 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073252437 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073254744 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072707584 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097034385 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077919134 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072855194 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076828215 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076095247 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075738151 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.072328924 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079202469 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071283057 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078690435 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075940806 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075698979 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076260221 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.089835416 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074734546 seconds)
  done (took 9.506971294 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.077546663 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074895715 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.076004965 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073350736 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074525681 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073751833 seconds)
  done (took 2.02222075 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102440399 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074749582 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.086476822 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07749468 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111668253 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.093316319 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.093272114 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.084520668 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089221649 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084143561 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.093420401 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.094601571 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.098320583 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078703143 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.093290195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077597461 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.093254919 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080891615 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084071877 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079266037 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091864882 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077846143 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078497455 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088134297 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.081885933 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.078095612 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.073491618 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.084155863 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084723325 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083757105 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077968321 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.08198894 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076662414 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084241903 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.093300257 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077026492 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077247985 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.083138947 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078675361 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.082037112 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.093999481 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079284424 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079854504 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.083340048 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.083764633 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076932401 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.083854673 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081039531 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.092955736 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.083640333 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.083572279 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077281142 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.081778232 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.083535358 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076360496 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08412439 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.082994848 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092692514 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077971458 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076661795 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074608567 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.082043551 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083610926 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081073988 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08445551 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.083439634 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077242659 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078263359 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078904079 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.077516739 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.083776287 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.074435229 seconds)
  done (took 7.569574584 seconds)
done (took 30.038637062 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.559155209 seconds)
  done (took 2.095204883 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.619426307 seconds)
  done (took 2.183056892 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.527235443 seconds)
  done (took 8.081747044 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.415252871 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.524922596 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.738734964 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140121395 seconds)
  done (took 3.418159056 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.717646976 seconds)
  done (took 2.285064119 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.225670995 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.210947092 seconds)
  done (took 2.015526253 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.385050524 seconds)
  done (took 1.943831683 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.157310353 seconds)
  done (took 2.716630476 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265673992 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182205516 seconds)
  done (took 2.014400793 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.486953349 seconds)
  done (took 2.053680736 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.949909935 seconds)
  done (took 6.517212645 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222025291 seconds)
  done (took 1.830228062 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243461883 seconds)
  done (took 1.810464944 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744966497 seconds)
  done (took 3.311404995 seconds)
done (took 43.848229311 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.087474817 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088176825 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087366506 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085221981 seconds)
  done (took 1.898920414 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084335652 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07967883 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083409046 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.079055828 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.083141599 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078924074 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.080377525 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081329643 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078333085 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.079562056 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.079291014 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078975416 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081261655 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.080398349 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077374678 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.081064267 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.082363026 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078662667 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081590859 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078638207 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.077031097 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081321506 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.083334495 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.078487293 seconds)
  done (took 3.497101254 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.086086883 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.079267692 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081253704 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.079186508 seconds)
  done (took 1.898962607 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.085205921 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098571282 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095285775 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.085429684 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098734662 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.092662314 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075401939 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.075186139 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07722471 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083986209 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.074011899 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103474799 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.095293596 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083566389 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.086582509 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.072337527 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074362516 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.094131539 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084044854 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084369734 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.076795445 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08371481 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07462512 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09549162 seconds)
  done (took 3.621599214 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.09352984 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.111824439 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.087623178 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095817268 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097547583 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.07115782 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.094061177 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096942199 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.133304671 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.07193181 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076737719 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07180935 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079075957 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071385669 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.087541783 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.114459637 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118381687 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07570328 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103987689 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071822027 seconds)
  done (took 3.405141033 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080267391 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076244638 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071877653 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074745046 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.083263514 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078785471 seconds)
  done (took 2.048621919 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.075726382 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074332188 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.074576241 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.073395192 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.078660844 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07358985 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.072129964 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073949053 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074045451 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073398979 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072814913 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.072000625 seconds)
  done (took 2.467089324 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208267168 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075468698 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074865765 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.073253334 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076494609 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072375248 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.087461046 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073879352 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.098518948 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072851686 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072673553 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074362376 seconds)
  done (took 2.640644511 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216645309 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08222486 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24849092 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158993154 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117540804 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121847275 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118597325 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12121949 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148639302 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107200273 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176567289 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174576009 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114955799 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14401176 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096158029 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.112201003 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162541816 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171900254 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113238571 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175350136 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153265525 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133031566 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155553461 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108728649 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113126475 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128715813 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078057786 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086752534 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17822312 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140690446 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151872046 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117598607 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098515807 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184570902 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179822609 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147186811 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153986366 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091096589 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.111572813 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.140246551 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206001842 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094639393 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.309671631 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117139095 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091609462 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141864438 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127013036 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.126935791 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11198667 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096166333 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153144224 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192134522 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.143697038 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094437508 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132834379 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120069415 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119839388 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120170351 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190589444 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169700524 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134697684 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077470919 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11594388 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160597754 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141531105 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114388361 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130935811 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09835977 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143050655 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162255351 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127483177 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152888896 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.123720761 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094954553 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126682144 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147838888 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134081501 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167016954 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130500181 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.079589407 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129976004 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107558419 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086960949 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.151585048 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080862868 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181695328 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105018642 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.114580217 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131078891 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116090536 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115395624 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.310773142 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154368066 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110225855 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.072012073 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111936782 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127567762 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153915513 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093296995 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116259087 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124578255 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.084394241 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144597922 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.082758913 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129970692 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.083387623 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133656473 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137077654 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08301189 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12987825 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110900212 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108700912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139789061 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167141002 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094275267 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089560133 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176469317 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12917757 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109469551 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151069493 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163203947 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.107342535 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107523367 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156271732 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186568226 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095440904 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170376333 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112514049 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089019347 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093642272 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131608227 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118446815 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129839957 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087510927 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.124428754 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175709328 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080105517 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100725821 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139229484 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084311265 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085918598 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110490691 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110632448 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.101010783 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.105871799 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.108493666 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.287091786 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13084703 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113203327 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132851642 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106188653 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178650558 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093962644 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.108628536 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110244719 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.076373195 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.14217941 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163252688 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086992691 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170455171 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.131691072 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124021867 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126827627 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089670759 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147213173 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085457894 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.076416916 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152445274 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117906804 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117044222 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.157998419 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122076341 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.132808218 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.125396574 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138745859 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137549943 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135946764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111126929 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.094156886 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118254744 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13306959 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079070006 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095950557 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086170352 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110906546 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102533238 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08907284 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147436939 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130394293 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115515372 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118186734 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101656663 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153459328 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.081566231 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133376254 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124823492 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101094061 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.158272145 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.302914133 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139505292 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106442623 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145860425 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075791344 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080527915 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.094543528 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131090904 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088645037 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089556905 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123589968 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1545758 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136720592 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143098828 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130262511 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126283959 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162091349 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076733799 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124737231 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154487758 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130180454 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.110289326 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096845742 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.105634517 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149767522 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113636044 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189254101 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119921242 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129736986 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159523767 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107325715 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085481323 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109785986 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14252416 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110403202 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150667853 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105236602 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094851158 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116746954 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080441189 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105263208 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133021203 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124802754 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141094478 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121571751 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137471986 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083294048 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120799925 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125914884 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12615692 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06928613 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125279128 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.313563066 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10281564 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125834669 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162848946 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085759785 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.142648842 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182891738 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151284225 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091025393 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115608112 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125873448 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135196167 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12626038 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146801268 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113609473 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144721224 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116029464 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.092133104 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093747515 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103919758 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111157955 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101502265 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.112706561 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.119657141 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.101046051 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139746881 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109788372 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116367043 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123917794 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104808402 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.097046768 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102200728 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184055867 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124279522 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176230782 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105286065 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.150141698 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170276385 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080311895 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084868205 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08382658 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146957113 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090227984 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136519501 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.11398049 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123163483 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128446035 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147991268 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100945403 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074417616 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114218574 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138003346 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129568384 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247249476 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.110680858 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17205928 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.107327461 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086182918 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12160161 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122381775 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109620723 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182605807 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06776478 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112396564 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083230917 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086942317 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134793736 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159662606 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086456325 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.109229376 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125910985 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122030047 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134934444 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106249927 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114786868 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132483283 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156830567 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134186774 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095993633 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118566226 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136142165 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163619377 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111512027 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101652626 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178844751 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159190001 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.167663622 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093863436 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121378293 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121142428 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114537134 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145414413 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089745683 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170049867 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088060111 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143031564 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109181855 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094406832 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134360967 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113616532 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093370652 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152959617 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122856813 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088363676 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228518014 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125154332 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126472732 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113516674 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.082018807 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147417632 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080010868 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140167436 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168045702 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087388352 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113096425 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102646786 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086108741 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113134136 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108383036 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093644154 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104589727 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179545417 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.093670292 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157104432 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140178469 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118425594 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14354609 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109447487 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.646564895 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.084228228 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159029435 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12348041 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179941 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106529445 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124814406 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115458439 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128054431 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151172265 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109736461 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183897407 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138235977 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.122322412 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085503911 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108241827 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11021029 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093807748 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11380147 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119622537 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121199744 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.098065592 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.12105442 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130044647 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087539785 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101443675 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162256351 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121748948 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145454004 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142162555 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089675928 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123054311 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138690331 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083872486 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12260425 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152608834 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109248075 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102922879 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084420478 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103229825 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15944968 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077462565 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160059738 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121905282 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1127821 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116049328 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114185492 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13148818 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109161341 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122935471 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094653357 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.112252576 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115889971 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084794013 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08041789 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108136537 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113163785 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101377742 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099554635 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102849766 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150207497 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07524101 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100224059 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116093285 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140373627 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169824857 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091142307 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084826149 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117336987 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114608899 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112392875 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12069797 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080537593 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084245193 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083100489 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.083067129 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109562484 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114193268 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115380894 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111182419 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.416929988 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.09138367 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.242668242 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103474695 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113092301 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07719421 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.086171094 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105525418 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106414985 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11626441 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118569825 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168813498 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102341369 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097256092 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098146639 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081358857 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091014921 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136691797 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116954503 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125374891 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107150324 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068860971 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116287337 seconds)
  done (took 62.021427589 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115746555 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.088872604 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100524642 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149162262 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129996115 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20913993 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160062748 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195366745 seconds)
  done (took 2.863289809 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074388833 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.102173276 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109468111 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.089362871 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.07294568 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074936217 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239985165 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087054253 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07268339 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104576654 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.084162634 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07414202 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.43628509 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072322622 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.073109073 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06746698 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073629944 seconds)
  done (took 3.610625906 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.397271204 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.614107225 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359436103 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078753605 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.951462489 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.091559849 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.304128098 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.134896208 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080666709 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557010303 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412968186 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133282486 seconds)
  done (took 18.825535345 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.082899345 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.076735403 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090500181 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090693123 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079945777 seconds)
  done (took 2.128126243 seconds)
done (took 112.528539301 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088271656 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.622907963 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059829075 seconds)
  done (took 2.418234364 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090279798 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091828528 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092266741 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088944322 seconds)
  done (took 2.07473338 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080257206 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082873757 seconds)
  done (took 1.868717569 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240564378 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171818769 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102071748 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.090671296 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085131759 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085693047 seconds)
  done (took 1.975963083 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078823484 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081857971 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078625654 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082382912 seconds)
  done (took 2.031031701 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082839574 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05787607 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060619974 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064171198 seconds)
  done (took 1.97651803 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093578949 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085926381 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08450354 seconds)
  done (took 1.975468098 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10877005 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091806556 seconds)
  done (took 1.912333015 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087995584 seconds)
  done (took 1.801008054 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102524253 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107059882 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.138697779 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117979525 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146117399 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115590074 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.09136259 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091930436 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.082181475 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.092242584 seconds)
  done (took 2.796649304 seconds)
done (took 23.139634854 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.085879201 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.375306139 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.366111425 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096601301 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67616529 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362991284 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994957023 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099070254 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121727706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0736076 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090988688 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65697121 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985448953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329675384 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.972089271 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330211271 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656393739 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074546774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073872136 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074109738 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979391377 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073116419 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073574376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073938229 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654917118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37765847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091243018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.329674201 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074282219 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07552822 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361584794 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074234817 seconds)
  done (took 16.433349561 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076932752 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125708911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07981845 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090401088 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076558376 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075966678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077623357 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075483692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126555557 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076544131 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090438952 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073522506 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077974354 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074699275 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093825874 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073718837 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074410826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074634587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074258973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074693428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093441897 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074242142 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074256508 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07467288 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074055506 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086359704 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074268492 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07404036 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074428287 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075935207 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077294234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074227275 seconds)
  done (took 4.320429937 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121978796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129903063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080624832 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10998543 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117993237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07608845 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149993213 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099128058 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133851225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074117657 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090973213 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074564932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108784372 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074938206 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095106071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074583462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075106759 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074876127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073956096 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073936378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093722354 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074146561 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074136194 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074569729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074690354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088520345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075453711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07511417 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074844588 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07684064 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077214742 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075027845 seconds)
  done (took 4.57559129 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079244651 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081196799 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.089028035 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.091214102 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075602577 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.079458442 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078797624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.0754795 seconds)
  done (took 2.382450938 seconds)
done (took 29.432480219 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084686301 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075468271 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078420797 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088100374 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07979059 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085703929 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073333242 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082226198 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078686452 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079206457 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.082217793 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.074093183 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076896279 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073679967 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080489237 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073685468 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085204947 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07758464 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.085495886 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.086460422 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07659584 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079122133 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080859258 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08551738 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085686805 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.085884438 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08340599 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078733405 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074456188 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07703059 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.083414887 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.090168011 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07498469 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.085316821 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073910344 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07372445 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077841548 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073328819 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085837898 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.083120202 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075302899 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081779179 seconds)
  done (took 5.076519987 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094388085 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097669425 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090316759 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067827159 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072208148 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.072226645 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095098317 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065953373 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065791065 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094540592 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.061397341 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065899265 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069113708 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060185827 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065932742 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062480454 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06824839 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061520288 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066205587 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065559224 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095342186 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.059940103 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084541508 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069872966 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062465658 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.067786889 seconds)
  done (took 3.641008737 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082891298 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091633661 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096929773 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138246352 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111744395 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.086150335 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085791625 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102171545 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095415682 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073129262 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077405098 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099148871 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095954566 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.080931735 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07373143 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.093414335 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090328775 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075627974 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.08190816 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10091684 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.093177111 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.093322598 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102130794 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08954993 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.0730842 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076780954 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077377559 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087367808 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.078466393 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082461746 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077047236 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.077490156 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075579188 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085357862 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07749965 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075318853 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098428127 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083376497 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085068361 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.075106885 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08168344 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074756768 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.098220419 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.143698794 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.073215257 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080096709 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077764449 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083601033 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073556786 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094623357 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085777784 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073593352 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076385839 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072978262 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.074193744 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087094127 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.076036813 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.076036195 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08305816 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.080009769 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.099623495 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078364982 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089619719 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073702702 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082007254 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072934781 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074529974 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072626343 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101247563 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075489565 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117794532 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074951558 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074009488 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082673324 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081725921 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079977899 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074208435 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089337076 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.084125641 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077386352 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082380172 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076698782 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075781364 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097331821 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076182378 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075156066 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074958386 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.080237573 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.077153541 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075015396 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086940486 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072968315 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07662932 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091492166 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073504593 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07479806 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.079114742 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078267628 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07280974 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08458658 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.078306271 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.075041384 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083268212 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073404383 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076212527 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.087488717 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.08051401 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071984591 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077285056 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.079416813 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073935191 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.075588315 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075828765 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074510244 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082709735 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07992169 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.079504893 seconds)
  done (took 11.467792974 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17273921 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.16361869 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.077009852 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15595896 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083341815 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086191728 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157358956 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102023973 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073965133 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074678517 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074979263 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11737169 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112675846 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122561786 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085399777 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074545527 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090753034 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.120648444 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.161996805 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153589636 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091229167 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08343409 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076060993 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074988294 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076037112 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.084938534 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091519406 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082995647 seconds)
  done (took 4.697542674 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087017422 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.11088944 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080084748 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097157154 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.097164654 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073852934 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076188102 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076065148 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087111145 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.084182647 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073393217 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.079664913 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080932759 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.077619274 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074842813 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.081032388 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080771854 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075716202 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077545651 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079730772 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.085683786 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097937949 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077443439 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.075414687 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07887495 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073334704 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069526056 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.0902005 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.0738534 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.10164616 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.072006101 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.079436686 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.088736119 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.075296923 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073718758 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073754666 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073788096 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073363028 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075419365 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072115406 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072278104 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062927463 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072872666 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084910816 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080458427 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062345139 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078407912 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078514902 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07913833 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.072129649 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076723356 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076675883 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076744083 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081384224 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078145476 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079873023 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075160449 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.080412293 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.083455768 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073749008 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070817895 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072756491 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078299367 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071678094 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.082442504 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078589814 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072487692 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073735537 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076098902 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08101338 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074009057 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078631704 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071408723 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075833961 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07849973 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075996022 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074740934 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071781486 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073855065 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074255889 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061768055 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.0742713 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059200092 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.077003884 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.072597994 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072259851 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073309147 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07928564 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085650123 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075577996 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079639749 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074432783 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07250553 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.077007814 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06581367 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076400003 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085170122 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.088143991 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073668839 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071690119 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087285594 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078937417 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072879552 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062008234 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078222981 seconds)
  done (took 9.906117015 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096692954 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07639587 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.091673337 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.097742284 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.093713921 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082026305 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.0847386 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075254004 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089060709 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080213642 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08290981 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073833457 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083998878 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.084062735 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075947275 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083893578 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078612908 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.091044836 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.089542495 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074614398 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082501643 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.087027346 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.097496907 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.08893331 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.087207117 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.088101681 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.097488506 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.083760059 seconds)
  done (took 4.18006819 seconds)
done (took 40.697619997 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.848199984 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.997980782 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.825224428 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.180475536 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.015270342 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.932824814 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.924984334 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.818040156 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.074828731 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.854803163 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.051886752 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.951731567 seconds)
done (took 66.362857965 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.895640546 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.961022023 seconds)
    (2/2) benchmarking "String"...
    done (took 2.050757118 seconds)
  done (took 5.761184565 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.035309917 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.379494989 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.065470035 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.815495323 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.822742394 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.152887805 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.623744767 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.328597708 seconds)
  done (took 30.938469693 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.006917771 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.053160264 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.538649452 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.56567618 seconds)
  done (took 15.968154372 seconds)
done (took 64.43617232 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.849546264 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.83826274 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.84783821 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.800940933 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.876534717 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.824632154 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.054964742 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.049565369 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.816385059 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.805410391 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.819429633 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.252684646 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.825093456 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.131041818 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.816809523 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.830449428 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.871503698 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.307124821 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.975820385 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.831689654 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.823270316 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.860055023 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.8188501 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.964899746 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.843782807 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.817985815 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.263823506 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.822465314 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.436355872 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.824487999 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.84865192 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.294430973 seconds)
  done (took 206.791853935 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.818570132 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.92823129 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.956703314 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.825398625 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.534059231 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.997969596 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.921912202 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.567367977 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.820864631 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.828597087 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.045358744 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.817883307 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.063520446 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.75402473 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.849519072 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.889246905 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.083035397 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.071297098 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.852315689 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.992253919 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.837858341 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.86871681 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.832945471 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.024508105 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.82170473 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.92205392 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.84490061 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.829146033 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.008386483 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.068781511 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.844102209 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.850732653 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.021562041 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.693265415 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.834963189 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.825509204 seconds)
  done (took 172.496320877 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.984554941 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.822256587 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.820965048 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.821587978 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.821270424 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.828454811 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.823512382 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.820712854 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.941477288 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.945905387 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.417837474 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.534991442 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.873672209 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643827098 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.820674522 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.889547252 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.834056013 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.821551502 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.833570774 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.84793772 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.825724542 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.823787464 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.945514069 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.833340466 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.060622105 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.830650871 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.822432348 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828597061 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.195455674 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.822869852 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.825923197 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.066195744 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.820962214 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.822196681 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.715033643 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.997467694 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.905493223 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.821134217 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.823243403 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.827685617 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.824268757 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.043241772 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.821391538 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.822937359 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.824304962 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.98947097 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.82108314 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.944616063 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.826193907 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.314784061 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.820644076 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.823559293 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.469085103 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.478813106 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.820428918 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.82177595 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.826825735 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.82322692 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.822954419 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.829217595 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.453478157 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.896542712 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.823805146 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.827269941 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.830255756 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.824325546 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.975039076 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.824841545 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.831213429 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.879640765 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.059075362 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.942079125 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.826371191 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.891406062 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.918520943 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.823118946 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.82353119 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.826688409 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.823376971 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.907616767 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.823994441 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.946225113 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.830010731 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.826733197 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.876108786 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.896589105 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.824379862 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.710374074 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.823028218 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.82599397 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.128567772 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.891780798 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.823519045 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.825537388 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.826739229 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.947084172 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.945802021 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.601650363 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.827160089 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.442433641 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 2.012444033 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 4.025702613 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.825575767 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.078428341 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.82608005 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.920576504 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.829925627 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.83004635 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.826627767 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.863073005 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.831318696 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.888638913 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.825477251 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.826607805 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.203323917 seconds)
  done (took 408.578707563 seconds)
done (took 791.663115301 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.498031918 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.463932154 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.58152465 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.480908674 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.459698457 seconds)
  done (took 14.238812752 seconds)
done (took 15.996179796 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.922846533 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.919283747 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.850898713 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.918300028 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.847935288 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.918339849 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.903362424 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.852801928 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.88676867 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.85326814 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.887754071 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.853523077 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.838698277 seconds)
  done (took 26.209854085 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.05054358 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.063000825 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.900693695 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.057380569 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.878432344 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.053145519 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.993868155 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.97863532 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.980978517 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.846409233 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.842889656 seconds)
  done (took 23.404393541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.066325927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.059992288 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.907893089 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.063662091 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.880472711 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.063304002 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.995602724 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.982854369 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.985296936 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.848310273 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.842160282 seconds)
  done (took 23.453940372 seconds)
done (took 74.826149116 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.838589187 seconds)
  done (took 3.595067734 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.861089909 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.016342926 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.843261179 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.841729614 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.839156451 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.835361545 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.840494067 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.838712067 seconds)
  done (took 16.676987855 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.836647477 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.83684764 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.83578909 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.838825783 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.835380314 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.836752579 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.839004166 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.836473256 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.836628595 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.840223686 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.840008783 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.840377797 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.83676815 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.836012589 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.840588298 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.838817698 seconds)
  done (took 31.165121922 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.838547483 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.835367227 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.837709969 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.837075875 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.838098274 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.836476314 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.838103924 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.836872858 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.837306355 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.837928432 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.837164953 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.835917519 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.83824242 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.835603273 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.836899973 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.837636012 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.83676385 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.836480191 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.841462913 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.837567348 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.838081657 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.836751953 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.836836899 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.838293362 seconds)
  done (took 45.861599037 seconds)
done (took 99.058865252 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.726045879 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.23344917 seconds)
  done (took 8.71950286 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.839403991 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.840894419 seconds)
  done (took 5.479245918 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.840396815 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.839774219 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.83923002 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.839738327 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.840697866 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.840500523 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.839300709 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.840260476 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.84063582 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.839800742 seconds)
  done (took 20.161778224 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.838581299 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.841601654 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.83871213 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.84049276 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.841865461 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.838741992 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.841952471 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.841426959 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.841171963 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.839948295 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.840915954 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.838411238 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.84188542 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.838619626 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.840862347 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.836922102 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.839086083 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.838581612 seconds)
  done (took 34.88209404 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.840008605 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.842222408 seconds)
  done (took 5.446068963 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.837970154 seconds)
    (2/7) benchmarking "second"...
    done (took 1.839787996 seconds)
    (3/7) benchmarking "month"...
    done (took 1.838659619 seconds)
    (4/7) benchmarking "year"...
    done (took 1.840037932 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.839621871 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.839068976 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.839064156 seconds)
  done (took 14.637027066 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.842963931 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.003293913 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.066763398 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.498291328 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.844185986 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.847525905 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.827262005 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.847339108 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.848993136 seconds)
  done (took 20.390150557 seconds)
done (took 111.47829886 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.690227637 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.835755028 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.183034753 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.888769811 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.892489353 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.177533573 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.839150717 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.139916932 seconds)
done (took 43.41377978 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.854056992 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.392716184 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.434473651 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.679747668 seconds)
  done (took 13.271263103 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.823002719 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.374708763 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.874215121 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.418944093 seconds)
  done (took 20.305394129 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.207815591 seconds)
    (2/2) benchmarking "read"...
    done (took 2.192272833 seconds)
  done (took 6.16892244 seconds)
done (took 48.366692055 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844904093 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.844033978 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.84086016 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.845077963 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.842554528 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.840772109 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.843502427 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.843350927 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.841384375 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.843950672 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.843837518 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843655054 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.841743226 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841158931 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84400147 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.841933352 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.841144892 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842749656 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.844463746 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.845063133 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842453183 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.844576225 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.842330049 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.842126442 seconds)
  done (took 45.996390877 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.843894069 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.842927914 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.845973786 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.843728448 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.842752183 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.843569487 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.84547751 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.842636373 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.84451218 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.845556112 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.841658347 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.84227907 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.844950371 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.842191842 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845063076 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.842217915 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.844452082 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.842935613 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.845856125 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.842695693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.847213736 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842697906 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.842069612 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845079284 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.843029912 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.842992382 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.845665131 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.845347581 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.844336052 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.84385294 seconds)
  done (took 57.086246309 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.849653561 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.855153847 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.84750625 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.845859513 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.843920142 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.845797281 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.846165058 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.845391701 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.8460883 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.847334073 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.84835813 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.848653389 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.846638186 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.84673644 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.844598286 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.846676238 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.847916713 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.846906368 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.848026298 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.848419391 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.846925719 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.847424432 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.848367313 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.847508638 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.848751272 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.846933298 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.848973422 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.848148104 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.846046493 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.847162955 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.850253885 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.847350711 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.847411353 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.847333926 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.848457978 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.847153947 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.852812673 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.857000397 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.848310137 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.847840579 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.847828336 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.848411113 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.847560997 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.847393617 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.848080619 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.847618893 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.848133033 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.849032515 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.849527485 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.848222357 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.848507556 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.849570559 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.848877172 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.84998092 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.848489648 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.849209986 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.848133615 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.848376429 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.848937513 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.848201151 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.848295125 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.84966414 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.849217933 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.849333792 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.850077288 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.848031585 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.849944275 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.849184573 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.849232181 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.849393717 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.850252484 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.849719065 seconds)
  done (took 134.847797305 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.850714274 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845942858 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.846232886 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.847065876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.845710363 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.84895753 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.845375306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849619242 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846876896 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.849104393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84902338 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847360666 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845928908 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850414731 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.849066952 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.846273711 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.849895765 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.844989324 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.84894711 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.850126689 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.848018083 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.847020649 seconds)
  done (took 42.424241855 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848880189 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.851553939 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.847290114 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.850085473 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.846523077 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.848698696 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.851468716 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.850622993 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850397736 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.848545523 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848362434 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850879459 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.847687486 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847056982 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846460572 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.84895367 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850142184 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.84763506 seconds)
  done (took 35.053061903 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.847004455 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.848263098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.851055362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.848194441 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.847623491 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.851090378 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.848862167 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.851285289 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.852352214 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.848951066 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.851443696 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.852177558 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.851985621 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848523975 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850200055 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.850138853 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.851572895 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850389598 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852773149 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849374521 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.849263812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.853508598 seconds)
  done (took 42.478109627 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850466652 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.852691874 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.849960087 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.850931515 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.849625874 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.854286229 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.852412849 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.849246608 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.853110498 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.853622025 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.85031467 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.853119301 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.850820778 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850839225 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.850516909 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.85103877 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.853099828 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.85201744 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.853929743 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.851737129 seconds)
  done (took 38.807974828 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.853763164 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852303007 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.852359207 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.852893636 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852485951 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.852183383 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853733361 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.852707302 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853828236 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.85306109 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.853874706 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.853718386 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.852417461 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.852619564 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.853071575 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.853430559 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.854509771 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.852737048 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.852295936 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.853667323 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.853838861 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.854206513 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.853357487 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.853481738 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854718164 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.853984348 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853638007 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.853098528 seconds)
  done (took 53.667490971 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.853489574 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.854850373 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.853473968 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.852999186 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.851930938 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.852085334 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.853339563 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.853458115 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.856648332 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.851223961 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.855540971 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.855046069 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.853659211 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.855836967 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.855251526 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.855168499 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856366072 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.853063124 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.854119943 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85150549 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.856704389 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.855814846 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.857101306 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.853179013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.852193305 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.855341556 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852960603 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.854556739 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856445877 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.854031565 seconds)
  done (took 57.404281591 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.874015124 seconds)
    (2/2) benchmarking "in"...
    done (took 1.874775847 seconds)
  done (took 5.525190413 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.853792298 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857880474 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.857656301 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.853506352 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.854757009 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.855885556 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.856090757 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.853686769 seconds)
  done (took 16.620416502 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.856167188 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.856239898 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.855901745 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.855553876 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.858169034 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.856124486 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.861072103 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.856772641 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.858614685 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.858172579 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.864201254 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.865130017 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.860096044 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.85613261 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.857703219 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.859311405 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.85520616 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.859845726 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.856671018 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.856994814 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.859898277 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.857394681 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.8569747 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.854134731 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.858845564 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.868900044 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.861131047 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.857166492 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85989557 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.860511307 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.856394005 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.853476834 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.860069208 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.857335315 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.857860304 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.857798627 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.86273381 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.857389411 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.861647181 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.857590626 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.857626303 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.855154287 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.859482836 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.858348586 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.860366511 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.857889191 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.856338676 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.854215785 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.858022415 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.861355222 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.863841148 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.858262978 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.854187691 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.86277073 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.859043165 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.864291292 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.858614062 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.861345071 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.867495223 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.8685928 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.871196347 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.867772601 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.859618944 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.859946246 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.869170542 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.887134857 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.865061069 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.855987798 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.856411819 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.859574534 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.865823179 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872014553 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.869609577 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.86012291 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.860336648 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.859679595 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.860065043 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.859417061 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.866391907 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.862839089 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.861513885 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.859536706 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.868275541 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.884722245 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.859054946 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.862336932 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.861319699 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.860665791 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.860427125 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.871390132 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.861440372 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.859465726 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.862184771 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.861719857 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.862272893 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.861912251 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.85967748 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.861643774 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.859078086 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.861503573 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.862516653 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.86315724 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.870557317 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.863095051 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.862462422 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.865256218 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.860747761 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.8622078 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.869398396 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.861440466 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.863950621 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.860511218 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.867566944 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.859232828 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.865801286 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.871959274 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.862435523 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.862757 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.86297089 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.861476767 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.873289618 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.89177634 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.861851777 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.863461669 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.869105166 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.877809439 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.863409446 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.864007221 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.862380059 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.862413884 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.861059099 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.866736138 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.86240865 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.864427499 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.86390878 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.863945168 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.860264832 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.863349246 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.865822608 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.864734976 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.865466816 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.868070187 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.865993828 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.866862762 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.863294642 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.865065582 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.868605692 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.86305092 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.863785585 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.866036736 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.860170536 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.864786551 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.864338972 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.865198418 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.864438286 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.865626158 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.861948819 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.867511345 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.864047885 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.867106291 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.865843457 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.867530024 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.869958175 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.866364539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.86862702 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.865017826 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.863130493 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.865691846 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.866024391 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.866382463 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.866023962 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.869164636 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.870064643 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.876544449 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.865694032 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.866918063 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.867435959 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.866890015 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.866951599 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.865928978 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.868666755 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.874333094 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.867442565 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.870611228 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.866527177 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.866064637 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.865815529 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.867118565 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.864958013 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.867546918 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.868963303 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.874028416 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.880460892 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.874258951 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.869607633 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.87084829 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.868842154 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.871138836 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.868999541 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.866369574 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.865080941 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.870641303 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.865832379 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.86759084 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.868685564 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.869079299 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.865907989 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.868486296 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.866644372 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.869242863 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.867081541 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.868416024 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.869248094 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.8645807 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.867413379 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.868557763 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.866997072 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.865187157 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.868346601 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.867103052 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.867782592 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.869852444 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.874059173 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.864473842 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.871740685 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.86906946 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.867475443 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.868175009 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.868379961 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.871885387 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.868461871 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.874679755 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.869169939 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.868526909 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.874878019 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.869054638 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.869190794 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.87186747 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.868578661 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.867071994 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.873490063 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.877731097 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.869714404 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.871289398 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.869463048 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.869454801 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.871106241 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.876747178 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.866135349 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.87025835 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.870238305 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.871369467 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.867375405 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.870303176 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.870448418 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.870565929 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.873089913 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.869840678 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.871067244 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.871031675 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.870900883 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.870575481 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.870379823 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872598766 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.880673547 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.87498041 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.86926963 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.871930268 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.87165878 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.875506183 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.870309939 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.87163865 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.869639058 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.883703768 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.880102686 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.876710275 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.871690012 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.87268027 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.87530418 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.873062592 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.876710091 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.871296189 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.871733153 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.871940508 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.870285985 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.86903249 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.872513637 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.87199658 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874156682 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.872817654 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.876695701 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.87294583 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.872265534 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.873686541 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.872243705 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.871707494 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.871600712 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.873032331 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.875127948 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.874258936 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.871577735 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.873157878 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.878414411 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.872723474 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.875041708 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.874376857 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.87371327 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.8728995 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.875005306 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.874423155 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.875488601 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.885568378 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.875735805 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.886024456 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.877715122 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.884167737 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.873160021 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.876943806 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.884208204 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.869254374 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.8749875 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.874596281 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.874675641 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.879086069 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.875272257 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.874432215 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.881066608 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.875607555 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.875507059 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.873334418 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.878136902 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.874820339 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.878458899 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.881629073 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.876083704 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.881518044 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.876678922 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.871650569 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.878010281 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.873703112 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.876498949 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.879091947 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.87556789 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.876071321 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.875912733 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.876543832 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.875414276 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.877958097 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.873977234 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.873720629 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.874850089 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.882894246 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.876226804 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.881393402 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.874731461 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.883950337 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.875923066 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.88181839 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.877203265 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.876283572 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.877339862 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.874884335 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.879730413 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.875682887 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.877847083 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.879106835 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.877986605 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.880745136 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.87800551 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.87782971 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.877787579 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.878193336 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.876557548 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.887698991 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.905954522 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.878214739 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.882167754 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.875999475 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.88052867 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.882424158 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.877351819 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.8759636 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.881278389 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.890153624 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.888108744 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.878963773 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.880295187 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.877380403 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.88140564 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.877730041 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.880211022 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.881486934 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.878431037 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.880435132 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.880833475 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.881901241 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.878688141 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.881675122 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.88237706 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.881498381 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.889284705 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.878869988 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.879960525 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.879888719 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.878437097 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.879031985 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.880676772 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.879348596 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.879265823 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.879372818 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.881261437 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886624189 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.887642333 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.882129642 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.878570053 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.879549539 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.879942495 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.881173853 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.88156555 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.879131591 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.88054213 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.880794618 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.880106452 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.880313796 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.880263477 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.881758163 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.882635284 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.880681599 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.886175613 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.89050707 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.882764609 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.879204833 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.881946119 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.882041339 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.881161016 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.882059003 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.88852068 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.883724772 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.894243203 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.891924561 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.887369944 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.880879811 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.885546618 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.890569539 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.881142998 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.882652656 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.884841784 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.88193719 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.883119564 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.885796485 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.882548155 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.887185358 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.881071726 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.882485453 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.889613676 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.883302015 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.882535838 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.882439901 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.887499155 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.884193347 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.879779922 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.886593623 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.884729218 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.889841546 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.885378496 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.88601526 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.883108579 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.882748783 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.885777031 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.889638848 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.881206805 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.886141447 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.880091577 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.885811071 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.884615883 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.883070384 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.881629294 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.88479235 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.883580043 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.888695205 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.894184246 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.881008717 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.887474837 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.882247618 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.884878475 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.884351211 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.88362599 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.883170682 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.882030353 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.88567006 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.884164936 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.883546149 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.887875361 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.883751529 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.8866649 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.887550881 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.886565502 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.887166794 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.899837843 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.894770566 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.883025308 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.88693779 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.886533408 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.889023431 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.884245946 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.884808071 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.883587208 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.888111012 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.886918927 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.88803975 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.884338777 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.890028412 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.901407618 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.883536152 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.885882091 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.887074482 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.88987008 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.885438903 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.883387802 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.886205571 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.889475591 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.888052301 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.896695122 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.886135824 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.889769966 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.884918966 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.887316404 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.891020533 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.89075386 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.896174567 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.889475959 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.88588246 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.885937961 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.891302534 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.902851776 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.888879278 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.900382252 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.920973409 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.884770907 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.889875424 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.889552743 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.884336655 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.888097284 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.888500016 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.887893436 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.886107475 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.889078411 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.890266913 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.888032543 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.895289959 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.888109082 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.887306187 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.888406542 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.890196808 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.890530706 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.885773956 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.889563992 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.886670264 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.890185284 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.888222257 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.889526384 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.887603753 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.902212023 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.899485969 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.887795956 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.891681205 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.88396662 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.894218525 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.891135048 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.903307725 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.897684255 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.890188915 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.889239436 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.889168832 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.887797531 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.884422123 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.890870419 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.890677941 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.889444611 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.887169268 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.903620134 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.898714008 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.892436683 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.8881433 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.891459402 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.888503281 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.892203653 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.891973171 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.889386453 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.890898751 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.891085057 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.896749387 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.889517626 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.892303756 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.895315009 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.900003958 seconds)
  done (took 1119.330263527 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.887566165 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.888637937 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.888883744 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.890342794 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.888912775 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.888177209 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.887661214 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.889629682 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.888988321 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.888983224 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.890998984 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888377787 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.888621701 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.888961475 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888594837 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.889776611 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.887027844 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.888237275 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.888277344 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.888971183 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.889109804 seconds)
  done (took 41.475971211 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.891604739 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.890713946 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.888785032 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.891478762 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.889277456 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.891626379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.889072273 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891316751 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.892048829 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.889651008 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.891410275 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891266074 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.888273771 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.890224774 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890200207 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.884948123 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.888020921 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.885653961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.889676014 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.88508303 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.889235438 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.885553966 seconds)
  done (took 43.377047873 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.889081937 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.887268872 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.887733006 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.884996768 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.888514291 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.887136167 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.890624972 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.887421702 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.889177402 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.89000377 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.887922211 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.889838564 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.896865818 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.89487172 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.890573302 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.88551922 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.031796606 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.890396824 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.887897628 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.882151806 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.878089531 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.886720583 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.8788314 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.881071973 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.88142534 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.883878977 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.880276478 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.881578609 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.881607937 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.88218928 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.884779362 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.878223743 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.880123427 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.882123801 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.879763997 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.878257675 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.881218265 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.87909 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.874438888 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.878171533 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.887755865 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.898089813 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.878540462 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.882101309 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.878192604 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.877754906 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.88187903 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.887858975 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.87470563 seconds)
  done (took 94.287611887 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.877690126 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.879519938 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.874317794 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.877974993 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.87771281 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.879497129 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.877984127 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.878390032 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.875548436 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.876622563 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.879005239 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.877130822 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.875127241 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.878407801 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.879499707 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.874545493 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.876409051 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.876193458 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.875632326 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.877934323 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.878486093 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.878506296 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.879468834 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.877685005 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.879972254 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.877254027 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.87894817 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.880929266 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.878971538 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.877896248 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.87860295 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.878841286 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.880149391 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.877235375 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.877808623 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.879794141 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.881499909 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.877162239 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.880129847 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.877692166 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.879068186 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.880767815 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.880862909 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.882665279 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.87790931 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.876658132 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.876570051 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.877794781 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.87945392 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.881370949 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.880848324 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.877591364 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.880499906 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.878886589 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.882649114 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.881421781 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.878307346 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.877850911 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.881174646 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.877977976 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.879534839 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.88478433 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.88031557 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.881996969 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.885994764 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.880357612 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.881171487 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.88307214 seconds)
  done (took 129.573238026 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.883785227 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.881940076 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.882810675 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.884550711 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.882800618 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.883673444 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.879797014 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.883252546 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.880026703 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.880231211 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.880848139 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.876393351 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.875685772 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.874298267 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.87928419 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.878271682 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.878001729 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.877620659 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.878720203 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.87797263 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.87687083 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.876903727 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.875184134 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.876570081 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.877265638 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.87625262 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.876147114 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.875737494 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87398257 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.874919744 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.874353582 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.874452205 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.873759793 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.869431596 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.869897703 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.870005166 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.869311753 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87040883 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.869718942 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.870653518 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.869697719 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.870245565 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.870951819 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.871268886 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.869578977 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.869669342 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.869640175 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.870964583 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.869294123 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.870299994 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.870061351 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.870319077 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.870575301 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871186131 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.870936682 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.869421704 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.87118464 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.870358867 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871159862 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.870746455 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.871414147 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.870475818 seconds)
  done (took 118.029589942 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.870308922 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.871127384 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.86836336 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.867170313 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.869123227 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.867207034 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.872167752 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.868527739 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.869806879 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.869521679 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.869235563 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.866411195 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870279837 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868084309 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.866550705 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.866233775 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.865922843 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.867503851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.868747394 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.86546677 seconds)
  done (took 39.161440646 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.86473675 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.86832918 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.866269363 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.865868316 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.869255176 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.865535771 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.868642881 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867924269 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.863908391 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.867662089 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.866450516 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.866676959 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.865183707 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.863201886 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.866079162 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.863569026 seconds)
  done (took 31.651095539 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.863539234 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.867071305 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.866749197 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.867683103 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.863850683 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.862694308 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.867714754 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.862634875 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.862004149 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.866043511 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.8651573 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.866924734 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.86487888 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.865975537 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.862327512 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.864891822 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.86098195 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.862690525 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.864923802 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.865258762 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.861803472 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.861441783 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.864504938 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.863797975 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.862096371 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.862738634 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.862269685 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.862582664 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.862510068 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.864295643 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.861623011 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.862446337 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.862204363 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.863634354 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.865395434 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.862825367 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.864635069 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.864573376 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.864248796 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.864063817 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.864544928 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.86118795 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.864524618 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.86498927 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.864236236 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.864270004 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.860694994 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.862397694 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.861856375 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.861179478 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.86389329 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.865697024 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.864304072 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.863969527 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.86470412 seconds)
  done (took 104.301641811 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.864182813 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.864892898 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.861184936 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.86437437 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.868121344 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.86288226 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.865429473 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.861677655 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.861640626 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.865671318 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.861803215 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.864647233 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861924503 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.865451486 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.861932669 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.865522037 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.861725408 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.862082027 seconds)
  done (took 35.333340128 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.861810885 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.862702114 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.863669476 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.861302382 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.860976458 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.86386976 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.862128128 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.863321586 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863862125 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.861164329 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860807319 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.864396902 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863783193 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.864271261 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.860761214 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861235359 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.86455688 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.864207041 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860405571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.861203386 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.863570994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.863532851 seconds)
  done (took 42.765989282 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.862719293 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.862320916 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.879576794 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.882630125 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.88448198 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.897139795 seconds)
  done (took 13.057735394 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860125234 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863375609 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.860109924 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863803533 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862496296 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860073079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859814715 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860534538 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863633426 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861421562 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860706368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863908387 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863037594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861483725 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865208723 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864063858 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861588921 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860647867 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859583892 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865519558 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860517208 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862980244 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861176486 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860728933 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860372388 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86143505 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863193342 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860174909 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860044069 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862793798 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864818598 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860405315 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86295444 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861472178 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863118806 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864416897 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860525051 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8625705 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862573301 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861032699 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862786765 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863331096 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862996046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861759612 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862658258 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86044444 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862151745 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85966074 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8605159 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864117887 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863314085 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85977879 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86297926 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863341189 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863001365 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86303969 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860377031 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861548244 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863348654 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861334742 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862003981 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863238357 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862910649 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862837714 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864625602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86258198 seconds)
  done (took 124.688448126 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86227649 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.861700893 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861458047 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860754317 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862138181 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860672091 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861555387 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862241874 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862043487 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862418748 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864068538 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864741019 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861097615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862082078 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860783896 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860770872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861299757 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863150219 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861740013 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865165823 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861687753 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862155751 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861373252 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861999875 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86140814 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863390996 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860665535 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86156309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861089059 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860674863 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861293207 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860568136 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86200065 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.862440149 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860830642 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861236233 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861996475 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86097041 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862816743 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864292566 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860879237 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863335767 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860778789 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861826527 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862595859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860663289 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.860935372 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860941979 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86151134 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86184918 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862007963 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.862837381 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862832114 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861633438 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862826865 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862551693 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861947876 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861709465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862511875 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865666716 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864356099 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86246351 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865729047 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863703515 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863064805 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864601424 seconds)
  done (took 124.693207587 seconds)
done (took 2593.408465619 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.89151629 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.914930314 seconds)
  done (took 15.595545803 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.027303074 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.980869684 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.863888992 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.910934118 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.864588573 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.85754816 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.886966777 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.865944598 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.864303526 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.864640995 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.865429099 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.050141658 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.915414636 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.866600557 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.866473147 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.960068985 seconds)
  done (took 52.304796239 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.8683768 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.869215052 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.880400027 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.872000433 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.869425156 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.879810873 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.902033831 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.872198743 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.902405629 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.884158028 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.93746104 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.879466819 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.867981249 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.916934246 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.882234917 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.883402831 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.962364371 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.943597655 seconds)
  done (took 35.863782063 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.945513253 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.882380968 seconds)
  done (took 10.62549752 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.895793137 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.869203353 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.86145344 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.892985672 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.878422035 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.866295383 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.909378024 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.902252724 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.899093794 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.87515336 seconds)
  done (took 70.644727358 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.875869454 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.870618886 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.870821205 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.869012361 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.86266216 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.86727377 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.869689452 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.865746875 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.553081659 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.904188099 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.874916534 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.875608687 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.868644647 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.872770312 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.866445984 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.892551412 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.014914684 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.866767032 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.868461257 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.875139297 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.86966036 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.932377199 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.882662836 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.870726925 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.899786527 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.552749448 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.877562463 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.875859698 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.016187839 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.866675159 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.869597127 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.871101762 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.873046708 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.252175983 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.170676425 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.870007142 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.880692855 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.878740753 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.86797467 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.023648468 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.87172922 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.878845485 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.820102644 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.163998002 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.983376677 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.914106693 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.257979515 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.874183957 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.874477801 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.901887061 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.873517169 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.872738847 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.884109868 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.383937795 seconds)
  done (took 132.838324914 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.86397156 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.132040749 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.02144986 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.865701247 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156450616 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075011956 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.868232436 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915873109 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.868491835 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.097445147 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.030720274 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.977200171 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868627598 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.869045363 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.868656139 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.865994507 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.032885507 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.941035651 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870285706 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.865225847 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899622553 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.112266672 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.993559529 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.869956657 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.890660007 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079406428 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.994139362 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.975660133 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.068437374 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.866358512 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.932406981 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869340485 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.869023879 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868359399 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.025684991 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963998857 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95671822 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.869857888 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868353119 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.868186571 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.54344432 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064536165 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.967034526 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.013317956 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118668675 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.074770618 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.659930889 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.869024288 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.614975756 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029847277 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.102000723 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.10038846 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.992491935 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.869823391 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.131643906 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.868045936 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.866893506 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.103617977 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.094248403 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.970128711 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.870952938 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.869188178 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868574994 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.116601287 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.869758542 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.9660167 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872039067 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.869504475 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.965939241 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.974613549 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.09938553 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082654113 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.906181276 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.161940856 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.343475015 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118373459 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.938211035 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10297731 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872653484 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868949965 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954517688 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.719183035 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.029746534 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.118803737 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.130932071 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.906303671 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.611910585 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.872016421 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.09912601 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.094657313 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.126272338 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111702224 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.022395932 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.077772161 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870377001 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.872348072 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.160015424 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009821922 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871616861 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.239924387 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10692455 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.44856558 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.899595614 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.183262071 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004378928 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.872944006 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.515551136 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.8703681 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.101898377 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.916111408 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.871423038 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.868889535 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.093386301 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.866382185 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871596514 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.711097635 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.935389584 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.874192207 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107502923 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.875949222 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140099993 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874030782 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109698525 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.248525541 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.906669823 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.045432428 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113899069 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.873257157 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135776544 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.123481357 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.992301655 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149135174 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.803923718 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872909676 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.16384525 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.874369935 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.875433255 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.044836481 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.872805343 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.05124234 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.874144667 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.165311954 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897690751 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.028012517 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875921046 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135492487 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.909583112 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925581996 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.875669925 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.001319239 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.876339038 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.785724946 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.028410969 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875625367 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.874065586 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.419728487 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.873985532 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.029815072 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.106107506 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900507409 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.949214979 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.545974293 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873153515 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962253485 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.900936231 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.215113274 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.873087254 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.032115354 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.876218192 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.419377748 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.873959386 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.115689446 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.111712153 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.874924401 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.875277408 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.794129585 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.874144696 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87375888 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03639775 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.710515475 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87463376 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078476131 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.878425749 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005924206 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.878258794 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.959957662 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.228303862 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876217198 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.877780455 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.876011876 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.875159295 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.875292886 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.083172675 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.906536646 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.421475163 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.015106636 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148518652 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.197287566 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.13276008 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.924476859 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.878981283 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.12232448 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.877316348 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.941695128 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.876258873 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.898984681 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.108524283 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884983613 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.085725859 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.164602892 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.806775416 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925232597 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.881030171 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874656975 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.802716662 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.032498715 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967101129 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.879266568 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.876009367 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994867037 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.002722232 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.092795005 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.883415422 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.00598038 seconds)
  done (took 903.888166008 seconds)
done (took 1223.551132258 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.876582762 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.880048047 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.866208107 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882497788 seconds)
  done (took 29.311903169 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.885954474 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.885691535 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.886028199 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.883848374 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.884261352 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.884492905 seconds)
  done (took 13.11753875 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.901642807 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.881462081 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.882564856 seconds)
  done (took 21.475158292 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.953431628 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.28744323 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.003480868 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.324088006 seconds)
  done (took 10.377543794 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.886730328 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.885933467 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.887493618 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.88793256 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.888470497 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.888952578 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.888118588 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.888414868 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.889200791 seconds)
  done (took 18.800182902 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.307718149 seconds)
done (took 99.197002411 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.80864182 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.879686334 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.315798887 seconds)
    (4/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.073943195 seconds)
    (5/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.90732256 seconds)
    (6/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.943885038 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.869316436 seconds)
    (8/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.831154071 seconds)
    (9/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.968549902 seconds)
    (10/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.99911191 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.968990579 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.03856676 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.975706142 seconds)
    (14/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.908198449 seconds)
    (15/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.001909582 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.954947438 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.920337539 seconds)
    (18/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.096950361 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.907901723 seconds)
    (20/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.169218459 seconds)
    (21/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.024257779 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.883700633 seconds)
    (23/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.960107299 seconds)
    (24/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.430556791 seconds)
    (25/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.377610768 seconds)
    (26/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.244815976 seconds)
    (27/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.885363635 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.898064963 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.888355077 seconds)
    (30/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.54756404 seconds)
    (31/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.242679361 seconds)
    (32/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.013141774 seconds)
    (33/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.357369129 seconds)
    (34/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.899076687 seconds)
    (35/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.342809719 seconds)
    (36/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.897146557 seconds)
    (37/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.548344732 seconds)
    (38/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.112201199 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.257037111 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.83693094 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.457729758 seconds)
    (42/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.088768237 seconds)
    (43/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.38066453 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.917616878 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.440992001 seconds)
    (46/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.012669414 seconds)
    (47/309) benchmarking ("sort", Int8, false)...
    done (took 4.886204983 seconds)
    (48/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.083157846 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.864535503 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.111290827 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.890694363 seconds)
    (52/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.055105535 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.285100998 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.962032725 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.660686066 seconds)
    (56/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.910325681 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.945910538 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.993282985 seconds)
    (59/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.364507873 seconds)
    (60/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.885789561 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.969856165 seconds)
    (62/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.386316615 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.996408039 seconds)
    (64/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.137125872 seconds)
    (65/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.050168057 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.524171594 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.963604957 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.021960116 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.999999499 seconds)
    (70/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.134552844 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.951780358 seconds)
    (72/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.073229633 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.912815663 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.567638388 seconds)
    (75/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.962172934 seconds)
    (76/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.024185826 seconds)
    (77/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.009079336 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.665747727 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.970369133 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.399470551 seconds)
    (81/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.876779889 seconds)
    (82/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.21874924 seconds)
    (83/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.886752883 seconds)
    (84/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 8.507680906 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.183140965 seconds)
    (86/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.237480472 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.35060512 seconds)
    (88/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.1571786 seconds)
    (89/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.012600586 seconds)
    (90/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.761574873 seconds)
    (91/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.284649142 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.88902883 seconds)
    (93/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.976516206 seconds)
    (94/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.913363592 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.206898527 seconds)
    (96/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.972808493 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 5.587525027 seconds)
    (98/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.873815299 seconds)
    (99/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 4.052473261 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.891916411 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.488035992 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.903757759 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.103032049 seconds)
    (104/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.975303623 seconds)
    (105/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.944919044 seconds)
    (106/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.873328845 seconds)
    (107/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.194347532 seconds)
    (108/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.886686509 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.984554676 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.376577474 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.266661569 seconds)
    (112/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.900922354 seconds)
    (113/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.970605858 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.966072702 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.991501805 seconds)
    (116/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.95475325 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.843752654 seconds)
    (118/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.895620296 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.438047594 seconds)
    (120/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.897660412 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.887723386 seconds)
    (122/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.257875732 seconds)
    (123/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.235679384 seconds)
    (124/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.194098071 seconds)
    (125/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.889577318 seconds)
    (126/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.926751058 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.818901154 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.121995959 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.987571984 seconds)
    (130/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.876609518 seconds)
    (131/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.214329337 seconds)
    (132/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.563116528 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.204805988 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.891739804 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.893599686 seconds)
    (136/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.212247 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.09657266 seconds)
    (138/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.034745689 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.828675354 seconds)
    (140/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.232585511 seconds)
    (141/309) benchmarking ("sort", Bool, false)...
    done (took 2.337522655 seconds)
    (142/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.913484856 seconds)
    (143/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.032533242 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.89249539 seconds)
    (145/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 8.187143472 seconds)
    (146/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.195744467 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.186667939 seconds)
    (148/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.896298914 seconds)
    (149/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.890225645 seconds)
    (150/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.912384312 seconds)
    (151/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.746782548 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.542650036 seconds)
    (153/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.607976579 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.586943273 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.164764441 seconds)
    (156/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.964272833 seconds)
    (157/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.883185292 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.298588233 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.737303836 seconds)
    (160/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.244850994 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.886774436 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 4.242417044 seconds)
    (163/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.047149626 seconds)
    (164/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.893042517 seconds)
    (165/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.499645243 seconds)
    (166/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.110925513 seconds)
    (167/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.061951741 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.871332506 seconds)
    (169/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.227457616 seconds)
    (170/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.144354606 seconds)
    (171/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.514696117 seconds)
    (172/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.026923173 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.222499252 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.212417415 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.990283159 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.14525108 seconds)
    (177/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.040613874 seconds)
    (178/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.894206574 seconds)
    (179/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.954044462 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.887395798 seconds)
    (181/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.281921494 seconds)
    (182/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.083802726 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.07890132 seconds)
    (184/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 2.02990212 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.545297535 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.134230388 seconds)
    (187/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.337756156 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.933946006 seconds)
    (189/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.01091389 seconds)
    (190/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.161648932 seconds)
    (191/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.92941246 seconds)
    (192/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.92875857 seconds)
    (193/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.368692096 seconds)
    (194/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.208463353 seconds)
    (195/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.42147761 seconds)
    (196/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.009454833 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.899800843 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.040778222 seconds)
    (199/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.603866774 seconds)
    (200/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.161752366 seconds)
    (201/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.929311492 seconds)
    (202/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.364686437 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.163170035 seconds)
    (204/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.218130614 seconds)
    (205/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.998300881 seconds)
    (206/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.488056348 seconds)
    (207/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.935026555 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 5.629671781 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.288666405 seconds)
    (210/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.121558644 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.986331244 seconds)
    (212/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.191184413 seconds)
    (213/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.920073243 seconds)
    (214/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.884836125 seconds)
    (215/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.066605594 seconds)
    (216/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.90262281 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.000821804 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.093564768 seconds)
    (219/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.073338363 seconds)
    (220/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.019320322 seconds)
    (221/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.098918451 seconds)
    (222/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.029620711 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.901192082 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.532772566 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.6812527 seconds)
    (226/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.134202939 seconds)
    (227/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.902522706 seconds)
    (228/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.05332893 seconds)
    (229/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.965602935 seconds)
    (230/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.306326723 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.985176209 seconds)
    (232/309) benchmarking ("sort", BigInt, false)...
    done (took 6.906035044 seconds)
    (233/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.988847398 seconds)
    (234/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.079283542 seconds)
    (235/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.102383266 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.596450883 seconds)
    (237/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.471774024 seconds)
    (238/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.923335998 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.283117539 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.147575461 seconds)
    (241/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.005600086 seconds)
    (242/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.131433804 seconds)
    (243/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.955928417 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.887187288 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.639756262 seconds)
    (246/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.258166545 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.14676917 seconds)
    (248/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.894944148 seconds)
    (249/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.143068451 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.913365149 seconds)
    (251/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.223600419 seconds)
    (252/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.898815785 seconds)
    (253/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.086351359 seconds)
    (254/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.005598139 seconds)
    (255/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.108025218 seconds)
    (256/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.988212382 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.925343152 seconds)
    (258/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.904069995 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.31646607 seconds)
    (260/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.456166958 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.165778824 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.998708965 seconds)
    (263/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.255921439 seconds)
    (264/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.101064909 seconds)
    (265/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.930047783 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.930016415 seconds)
    (267/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.905194491 seconds)
    (268/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.373494608 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.272184083 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.229120987 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.185833028 seconds)
    (272/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.907106905 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.294208861 seconds)
    (274/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.907581115 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.00359688 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.015704823 seconds)
    (277/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.03853997 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.907232852 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.245628951 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.004630382 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.240925306 seconds)
    (282/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.657211483 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.29929444 seconds)
    (284/309) benchmarking ("sort", Float64, false)...
    done (took 5.670570262 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.309086082 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.088435805 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.904271831 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.90058048 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.022106509 seconds)
    (290/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.411908491 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.989678561 seconds)
    (292/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.86098056 seconds)
    (293/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.989029835 seconds)
    (294/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.0274654 seconds)
    (295/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.915573564 seconds)
    (296/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.952605919 seconds)
    (297/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.028924519 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.633266258 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.714312459 seconds)
    (300/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.532664075 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.939065711 seconds)
    (302/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.08607435 seconds)
    (303/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.04980719 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.037947685 seconds)
    (305/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.090812795 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.93597625 seconds)
    (307/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.933192964 seconds)
    (308/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.342117073 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.041104524 seconds)
  done (took 1029.806527692 seconds)
done (took 1031.690324884 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.936653768 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.931664303 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.915041584 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.936505897 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.02777428 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.946159244 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.927214027 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.91791574 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.963823297 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.96588331 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.915492377 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.947169033 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.918143659 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.917892826 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.916316368 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.93092252 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.241546196 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.950080892 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.934140656 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.92549663 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.934393456 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.916125569 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.966367704 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.94261661 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.92091711 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.918355656 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.921370166 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.937274069 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.029649987 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.921143967 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.918502337 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.927640594 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.239780621 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.947582484 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.912947544 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.937169804 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.927853086 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.926882136 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.92123789 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.950368939 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.393660691 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.92613108 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.920544585 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.91818951 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.91921793 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.921634055 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.919004597 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.926923828 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.933875029 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.932014419 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.39286197 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.946313641 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.924806311 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.919093552 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.928621442 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.91873467 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.922864432 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.936056228 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.938613213 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.936115964 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.233939095 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.953182705 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.921558925 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.935289677 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.92665557 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.428353023 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.922280951 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.923430966 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.393746192 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.933762499 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.428432789 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.936549747 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.921399973 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.934497761 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.953173501 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.242150542 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.944719379 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.920529666 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.928427226 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.919892515 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.9326797 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.933575446 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.92656673 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.922898777 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.934104324 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.947143093 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.93066962 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.922620277 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.928658215 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.940361746 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.927782044 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.931636321 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.925612128 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.915302243 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.930864452 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.924254653 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.924086683 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.924211422 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.928256261 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.933354841 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.394410115 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.945811674 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.919915234 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.919744452 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.919712838 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.934955644 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.394931061 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.929901823 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.943810715 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.969454961 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.923105063 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.235473718 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.958901299 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938455108 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.930498866 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.92554788 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.917865039 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.235529808 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.425284399 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.947640647 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.925257473 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.919667175 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.939597319 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.925582376 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.919633154 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.243797059 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.956040672 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.937942306 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.04512362 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.93465269 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.959593117 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.922651626 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.926544588 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.951562762 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.939391121 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.954770722 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.927191314 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.940341487 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.940800945 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.920833371 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.934772494 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.933898659 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.925132555 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.929080502 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.917483394 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.951240372 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935828554 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938055565 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.947160239 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.045857237 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.921407131 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.236261128 seconds)
done (took 302.14502075 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.995549849 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.921932742 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.023840879 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.921375425 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.006377438 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.018504092 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.918612647 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.921424969 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.9201906 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.29325715 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.918510668 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.920676813 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.922771181 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.919111106 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.007373972 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.921566301 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.919505525 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.256901536 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.925725625 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.996038398 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.919977708 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.919422424 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.923780008 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.328850775 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.921997924 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.922038065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.996122179 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.924151464 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.261812392 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.922472356 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.924772154 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.261866401 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.017581354 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.941192601 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.935508462 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.930742729 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.014036368 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.930257466 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.006344246 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.005174627 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.024806381 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.966775256 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.920189375 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.926262508 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.927115252 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.926166058 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.920597116 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.952141051 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.926019447 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.923216591 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.258999588 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.93437245 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.924674672 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.921964058 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.923661988 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.957641934 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.921490695 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.927928696 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.016381951 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.92721889 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.98929716 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.298567629 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.296165901 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.925149869 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.920815454 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.923153962 seconds)
  done (took 187.983146357 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.993501192 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.998197356 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.993892168 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.931637828 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.975897488 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.996072192 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.930071429 seconds)
  done (took 15.665384468 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.931262443 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.925406496 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.977829153 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.97539365 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.925408529 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.08088044 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.926054468 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.93931551 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.924360531 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.9784922 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.926505798 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.926368117 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.932858548 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.927861416 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.976257011 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.938225089 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.044125215 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.928378588 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.928229536 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.081850107 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.923717503 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.933101706 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.965600708 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.939134355 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.928046061 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.932369076 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.510164298 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.927097631 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.925768365 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.925955684 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.923647455 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.970131035 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.928728284 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.924006742 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.925622967 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.042992637 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.929666652 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.925316396 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.926863861 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.925698667 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.926488452 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.928991582 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.92756945 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.924914554 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.927354249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.95217756 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.926993552 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.927394455 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.928354971 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.928696914 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.964937253 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.928513429 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.924916917 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.927292798 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.984784818 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.93483211 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.930076629 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.92664655 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.929767597 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.927449874 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.083390963 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.978410751 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.929408489 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.97742154 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.930726998 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.930399199 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.929205675 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.929376491 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.02573638 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.929248106 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.9785733 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.925693333 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.08927028 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.95319169 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.93089978 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.934680574 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.933752618 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.929661808 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.927940797 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.936423135 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.927856411 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.932522797 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.93869878 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.929736424 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.929473005 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.04339208 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.042198862 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.92790719 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.944527369 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.939677428 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.927418018 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.970521005 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.932267188 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.927860595 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.987290349 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.048655924 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.987858891 seconds)
  done (took 211.576977942 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.93698647 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.94023059 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.935874466 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.949039216 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.930888295 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.933144041 seconds)
  done (took 13.479017793 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.934012373 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.932148086 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.933505339 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.933513917 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.934602969 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.935114558 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.933616037 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.933151282 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.935947086 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.933337988 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.934622803 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.933435319 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.934469204 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.93451991 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.934251936 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.931697275 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.935245436 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.928235573 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.932454293 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.935100969 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.092862225 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.93392028 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.933736202 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.935099892 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.938713602 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.931465134 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.942745069 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.932446285 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.935569427 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.93804341 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.938140258 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.933315933 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.934618419 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.940577939 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.939210482 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.935269559 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.936780199 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.93368864 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.930696929 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.935122132 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.935445405 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.933468647 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.933264265 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.935199171 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.934484495 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.940205241 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.939405759 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.943425362 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.936574501 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.936505462 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.935028551 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.933134277 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.936281568 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.935080002 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.937335946 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.941460481 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.938850037 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.934900758 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.934246334 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.936447232 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.935818899 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.935585214 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.936398333 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.940406943 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.944176168 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.934943831 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.936007805 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.938675531 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.934111876 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.934901946 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.936199952 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.933646696 seconds)
  done (took 142.371472307 seconds)
done (took 572.937338226 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.083816295 seconds)
  done (took 8.9392215 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.094303325 seconds)
  done (took 9.050611099 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.608474586 seconds)
  done (took 10.463025103 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.946862795 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.945849494 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.941254606 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.935667565 seconds)
  done (took 29.637059908 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.113454653 seconds)
  done (took 8.968517424 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.942526831 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.929420513 seconds)
  done (took 15.762719867 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.967068535 seconds)
  done (took 8.822736872 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.045492153 seconds)
  done (took 8.905836072 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.943119366 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.960656782 seconds)
  done (took 15.774489391 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.91464107 seconds)
  done (took 8.769285613 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.830714811 seconds)
  done (took 11.691863807 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.937852921 seconds)
  done (took 8.805484292 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.976941945 seconds)
  done (took 8.832093498 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.075856653 seconds)
  done (took 8.930809644 seconds)
done (took 165.208315078 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.938105325 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.934304803 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.934043532 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.935591621 seconds)
  done (took 29.599234945 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.988960162 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.97040544 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.973055483 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.980541131 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.972511027 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.969088585 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.962218745 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.962787652 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.979648915 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.972222406 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.971585394 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.973190571 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.972126802 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.965848036 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.973508496 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.97385288 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.982018644 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.9717262 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.961959486 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.974261882 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.938380486 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.982617043 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.975783757 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.938252527 seconds)
  done (took 49.144356478 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.137038814 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.011174125 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.091552133 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.990933878 seconds)
  done (took 10.089945542 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.990882412 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.992619767 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.003525042 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.043223628 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.064723354 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.001558974 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.962590025 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.960649321 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.946848533 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.991862477 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.068351162 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.988207279 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.079032804 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.939540252 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.128129694 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.939097848 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.940325834 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.992806846 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.042184865 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.065016215 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.942810664 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.990696645 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.995664158 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.985057943 seconds)
  done (took 49.914385276 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.938011675 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.948148033 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.944948553 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.938612406 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.939456248 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.940882847 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.944909524 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.940718563 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.960233143 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.938974636 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.937954813 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.938719759 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.937498432 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.938830859 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.938822853 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.953190795 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.955560912 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.940907086 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.945486731 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.948620241 seconds)
  done (took 40.729817593 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.933321077 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.748494209 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.287290528 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.190934949 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.934315326 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.938916335 seconds)
  done (took 32.895093196 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.9549884 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.949357842 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.943927396 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.00078439 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.087701513 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.95404367 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.942907648 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.95377874 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.991207483 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.013059235 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.963538484 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.972194043 seconds)
  done (took 25.590206376 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.937108993 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.938805094 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.93805412 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.95474194 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.953485644 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.949944427 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.948692025 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.93656562 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.959037841 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.960657037 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.951909994 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.957166052 seconds)
  done (took 45.253314476 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025718758 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.825816609 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.004070371 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.659661096 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413878395 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1483756 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453793797 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282903652 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.943465439 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208769247 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109305344 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045737554 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191310042 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93827834 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.001570247 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.434830419 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.241878974 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171620586 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966385111 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805064095 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988301479 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.544348976 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.846667019 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.998142417 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150670726 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.069728596 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.199889747 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.893744495 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077155397 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977484199 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950295757 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938083073 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213175155 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320048164 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042319482 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94913965 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.59641745 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.657320567 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.927370729 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.779124666 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.837980992 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.071319103 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948324616 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.940411551 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.873549643 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.551991819 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323347779 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.946566125 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.65012756 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.940236007 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951521596 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027456762 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.944164288 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.756759019 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.895935937 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.225813002 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.936633308 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946760737 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.512392003 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.120642795 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.583271773 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.923571226 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.135655183 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.77524131 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341193069 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.09000929 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.945502582 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.945237911 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875790757 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.774742133 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995738023 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085660107 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.963486525 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591444609 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261016651 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.213284982 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884020016 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.232833954 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.820057043 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.924001371 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170821884 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900913274 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877903376 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.800247649 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.875637865 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212215868 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981600762 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.593672972 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982995641 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.281862391 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.958983538 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960358077 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949458182 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.166667534 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.509710495 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942899143 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.915459657 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.088323126 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966000974 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.282841457 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882462131 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.945943454 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197210705 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.155276176 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.257754593 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.477004051 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109633967 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947314505 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.022626408 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.944189815 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.99841838 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.223942654 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004128207 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.119771437 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003864215 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.905110338 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257686974 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972899219 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.10755317 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.156016806 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073526616 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.282267786 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.238669797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01097328 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.950058512 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.945822118 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.790205854 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.497338239 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.212483138 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.946932075 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.510369219 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001230222 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.946613162 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88045303 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.550262442 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201723708 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.916265597 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170020867 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.94603009 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256828469 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879689477 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.094162664 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.062323801 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.166716263 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.615318237 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.029856547 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203618219 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515245097 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313697726 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999624691 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964506555 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042052851 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970247028 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.471120587 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.24480392 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.949709666 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.950474106 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.786686674 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.942521862 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954297179 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.952197977 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.74466508 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233595292 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.973269241 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.945244981 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.83423182 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.961164226 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012656373 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.951685898 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.957100811 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.491897026 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698266927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.961022409 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.575992671 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172037578 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957899869 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.781733887 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061628026 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.030967733 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.230684504 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008846766 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.881950375 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.657142039 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.640836402 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948868739 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881861372 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.947872152 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956281529 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957198165 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.329905365 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.233364115 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994385033 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.786983863 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.991286288 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960253226 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.952480925 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949294569 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.492246587 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.130705598 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.592390756 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.002999398 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084453443 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.962481623 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.883170426 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.954375964 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95445048 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.949298242 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.915621143 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003277949 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.784893024 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324944764 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20754992 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.597835014 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966326585 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.810506525 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.009038023 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.96902722 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.768437219 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.082447727 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.983177479 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072438674 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.960590153 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.770166112 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.658011053 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.51356702 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.276879372 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.265315545 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401434408 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.541859641 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.260837756 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299586289 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18685775 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47840171 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010942148 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301120075 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.897447072 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035870815 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.618787365 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.307255401 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960742748 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176978665 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346843969 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.835274583 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.101059355 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.1617299 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984194988 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.9491783 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916077935 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.154519744 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093754003 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.813406841 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160458199 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285270753 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766878491 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.057256262 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.950225601 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.66904687 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034687555 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.665401161 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.311823923 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.574175973 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.029277314 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430512946 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.955833711 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.396668936 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.306698747 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370476429 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.080165278 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891026119 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.961884311 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.960048809 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.951993314 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.951623082 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.831675009 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.204033082 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963027718 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185630138 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.317357954 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.253894322 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.859438469 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.957532791 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951072915 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265506168 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.832996073 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129488507 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.500750227 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.495406423 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956308977 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.888416346 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885251969 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.643156807 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.958701238 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927225498 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186466333 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.141446152 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906797147 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.546863451 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199688428 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.205309157 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.964213875 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.227952803 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227222335 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.688441217 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983709346 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.051601394 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.755963326 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.070856923 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.222692628 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.188183588 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.753133024 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.185932281 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.035126716 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.736101077 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.954736058 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171394186 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.223694746 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.992408578 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194856417 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.676206942 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.961186661 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389885525 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013033929 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.014045165 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.113229292 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.148770272 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966281636 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039235109 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965700947 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.964790549 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.966242971 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003852781 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015532796 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.088832867 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.969113536 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045913436 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.137678776 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.492279829 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.962105893 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238446663 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332375932 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.288611389 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01599046 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.957325297 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957212227 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890574966 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092297573 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.401526012 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228978838 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.083272553 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.252825062 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979272925 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.757637207 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440777309 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199296693 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226124429 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.847520217 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949885172 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.029586699 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.21553822 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959701187 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.159433445 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186757215 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270255477 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419761981 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.280484674 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325113595 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223474875 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315543276 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.953793323 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532722611 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.9504616 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.777737628 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.998533594 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992408745 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229835814 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966557058 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338625089 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.970823458 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.148624612 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.465804734 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78748393 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.243565068 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.954195079 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.013773651 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23642704 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.34867196 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270778417 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020337382 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961945091 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.678665697 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092511051 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.863558801 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.218203166 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.952768334 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157209947 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.662722841 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.953276749 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229213598 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255545853 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.94191879 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.85166625 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954995477 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.948439112 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.165641773 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212100409 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19419308 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951620432 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.944204752 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.756638676 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.218596967 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999189573 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871938816 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.937566897 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034757592 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.181798605 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958629942 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.451644071 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.645212374 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234510442 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.854334987 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954783713 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.549229085 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314998475 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.267355269 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.48383091 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160852009 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.493174637 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.932325227 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231802142 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.937742577 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.53398062 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245880773 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.936704226 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.651587113 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978541544 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.210314168 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257638712 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.936011882 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907825419 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.925945414 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177709188 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.628661594 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898989109 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.961489683 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.015740504 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.953595314 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.084420473 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962478996 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.858543026 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952078221 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.704195873 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.448185722 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.956718707 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.946851698 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.793204672 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.705252932 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99635088 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.111525755 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964165534 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.6773257 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.258934056 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.210174074 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.658921708 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.968990424 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.958182146 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956165025 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88083752 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.153946969 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.333592795 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266404575 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.496154106 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.994149092 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.957330683 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.16797877 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163360718 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.985804227 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105497952 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.540841989 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.004056978 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.729134695 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.635936436 seconds)
  done (took 1730.337203553 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.971753592 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.968403179 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.959247027 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.962416502 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.973906445 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.02448278 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.965932763 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.002879959 seconds)
  done (took 57.708195933 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.950485215 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.148606815 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.962298361 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.951001087 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.960195036 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.951530604 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.138014343 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.967014824 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.958768965 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.963638162 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.956838875 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.948299492 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.287519887 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.980508503 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.952332844 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.934559721 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.95955783 seconds)
  done (took 75.85484867 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.95290876 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.168089321 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.98883003 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.9735363 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.912016935 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.944960959 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.961636885 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.969264047 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.95137641 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.179113532 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.281587614 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.978894092 seconds)
  done (took 91.134767723 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.955827387 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.953477656 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.951492888 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.952558061 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.951704457 seconds)
  done (took 11.638643893 seconds)
done (took 2251.81308911 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.192328795 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.181656697 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.183083829 seconds)
  done (took 6.231703294 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.095536343 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.139531668 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.261172213 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.26773963 seconds)
  done (took 10.634066881 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.237337105 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.314586293 seconds)
  done (took 6.41642025 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.361529247 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.947331646 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.350562589 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.943199669 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.940127257 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.94006165 seconds)
  done (took 22.693077824 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.945662866 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.95168447 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.947860849 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.951576695 seconds)
  done (took 9.661693968 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.927128349 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.681052016 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.928957751 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.941537441 seconds)
  done (took 21.343319285 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.697161244 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.345971898 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.690989145 seconds)
  done (took 9.600363333 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.497888359 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.869548492 seconds)
  done (took 9.232890833 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.20139474 seconds)
  done (took 4.084843975 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.993706818 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.237879887 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.504472691 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.506907355 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.585548916 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.848143291 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.295242886 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.218269213 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.389285064 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.419583178 seconds)
  done (took 25.883673984 seconds)
done (took 141.501187731 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.346234942 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.205818597 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.164875251 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.311538443 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.189799881 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.166862334 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.168775225 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.300817932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.810152142 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.808064096 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.313421526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.190488181 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.114153501 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.197630406 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.122075834 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.199966092 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.183549509 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.35543696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.003984054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.201774902 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.180587024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.941398564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.156363174 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.95171074 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.183958104 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.117488195 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.530513382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.200159449 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.161627509 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.537164757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.134355763 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.358860939 seconds)
  done (took 175.694241954 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.719457685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.96494241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.963799519 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.963587247 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.36395871 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.9763378 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.964388565 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.963663648 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.245361358 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.255669721 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.97525014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.39884778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.978492267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.957558485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.968426125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.957552467 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.434775353 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.817345774 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.971654208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.973541187 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.978708493 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.190482713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.974232646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.236744434 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.460148139 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.981013201 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.950726496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.977782616 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.958161377 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.933877627 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.957365073 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.946489678 seconds)
  done (took 211.249948109 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.946570749 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.942176995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.939991999 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.940592787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.939381708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.939632438 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.937851564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.937529662 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.641617677 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.637850878 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.935447924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.934631413 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.931810875 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.929858193 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.934677028 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.924367187 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.928306128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.929782961 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.922174214 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.923118943 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.923736362 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.55674795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.919731296 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.566780461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.916654972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915056589 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.910835373 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.919223284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.913843775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.917156682 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.917766443 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.904531302 seconds)
  done (took 222.261609984 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.106826155 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.911245499 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.911202978 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.84773877 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.907624469 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.90784862 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.849723354 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.097262352 seconds)
  done (took 19.393945675 seconds)
done (took 630.499836722 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.382625238 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.223321534 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.083323258 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.925735303 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.17767554 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.968428303 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.929660807 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.988832946 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.643570759 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.991830595 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.575902889 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.942839092 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.658264147 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.943885891 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.043987639 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.977055665 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.518406806 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.615828797 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.103172532 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.998368032 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.102800291 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.851795141 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.003005279 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.667389941 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.680625296 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.898880239 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.083441147 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.519662542 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.93154624 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.088654231 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.695325906 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.30892978 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.930905014 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.916261433 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.978744415 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.954276376 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.2569844 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.928825365 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.041493903 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.65457393 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.98795011 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.531116592 seconds)
  done (took 104.52967406 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.890776523 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.888705456 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.887828708 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.889665194 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.890490598 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.88724512 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.888748153 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.888892689 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.889412014 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.888792534 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.889771188 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.888831128 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.888041986 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.8901798 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.88649752 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.888212651 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.888270391 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.890224164 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.8881285 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.888015081 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.888810941 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.889383768 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.904366532 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.888737912 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.88915364 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.889794033 seconds)
  done (took 50.957649041 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.902978356 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.05353344 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.161080656 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.920908501 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.903256966 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.906834924 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.922223253 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.906503699 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.90686961 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.906993129 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.012044908 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.9100048 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.924591301 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.166570797 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.919977128 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.903871921 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.905376068 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.905106495 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.062001941 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.92156236 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.925279631 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.909199433 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.92244058 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.920743435 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.90710851 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.904714185 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.909077276 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.380129025 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.912808425 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.011588542 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.948926333 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.923030911 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.324945772 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.181728968 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.957231704 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.908422231 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.905894887 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014781006 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.909413216 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.90573506 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.923293253 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.910427956 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.163800041 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.411146862 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.917070355 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.904761801 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.392267197 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.027141018 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.948063835 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.917813897 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.169346097 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.922129365 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.9058667 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.906199223 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.942708819 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.915730893 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.905581536 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.234427837 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.91361171 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.924348095 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.911036572 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.904852323 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.067781519 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.911022759 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.058491747 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.913184211 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.913105423 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.908098789 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.16804363 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.920848739 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.410337131 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.917742349 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.906612233 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.012854081 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.061258159 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.418821427 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.917124544 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.070746492 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.340340419 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.93122206 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.910977141 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.368596764 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.93290902 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.910375086 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.909022575 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.90912023 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.907558785 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.951767928 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.925577047 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.340349814 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.412010452 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.251685575 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.933677808 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.918472435 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.908320924 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.236106775 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.914624429 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.908847049 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.161968209 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.417503942 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.920541062 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.915842672 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.392294854 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.921409751 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.927501584 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.913132073 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.17328742 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.925649375 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.951461261 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.908896487 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.915481064 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.909798452 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.929283455 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.913960339 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.908772808 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.384984835 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.034456228 seconds)
  done (took 236.624456832 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.904835881 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.913514296 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.903715713 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.901295644 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.902168254 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.909084889 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.903297339 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.904537884 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.90984787 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.90274211 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.904415666 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.903325855 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.906346294 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.912879698 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.954850339 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.911165395 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.514589886 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.905457387 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.903607789 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.903524758 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.551049771 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.910024529 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.905728749 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.899541391 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.898936108 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.895821435 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.899751288 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.934071433 seconds)
  done (took 168.499101391 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.893590776 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.011886453 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.909789749 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.922134776 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901959509 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.89208349 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.917106835 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.908225132 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.902442964 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.890511412 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.88888033 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.954136983 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.902570611 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.990950405 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.917856767 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.925467441 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.997139526 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.896312415 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.892526116 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.891606938 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.923949178 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.887350336 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.955463005 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.020102811 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.909852963 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.012698529 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.895778123 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.896142389 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.895478593 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.013737224 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.904557545 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.955967983 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.92263217 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.912765666 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.017929873 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.00588231 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.996781272 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.918984929 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.898464699 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.894551065 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.892842055 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.882635833 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.013012957 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.909983863 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.896486844 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.002098219 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.908359375 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.896549953 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.90384697 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.893228635 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.910396541 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.916031875 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.963951153 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.026120333 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.925771441 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.922636266 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.921323103 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.186522646 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.90363792 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.994973739 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.884434416 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.014074415 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.909015891 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.883022883 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.894738666 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.902863031 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.924452862 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.926248954 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.001172591 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.8985125 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.996084646 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.920968116 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.89861341 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.889186322 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.894306828 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.012344777 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.002563452 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.920258066 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.928768031 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.921957472 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.884409838 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.893493533 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.877122958 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.907363024 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.892656087 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.003381766 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.001475963 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.891525788 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.889081766 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.889424724 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.890158347 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.912911727 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.013589663 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.917983455 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.979600325 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.952375274 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.958877119 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.897632711 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.899671275 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.892663457 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.951955706 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.897773369 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.899425722 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.229469595 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.961348388 seconds)
  done (took 204.941182312 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.340438628 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.939175896 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.945876632 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.202971228 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.306924687 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.751596012 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.934540749 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.937009008 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.96127627 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.120751991 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.005925504 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.958114437 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.92106625 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.912363464 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.937472093 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.960102907 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.950092952 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.287949164 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.055162755 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.044621774 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.914288205 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.243238476 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.255878712 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.377517459 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.972688115 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.271629279 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.609172537 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.081745977 seconds)
  done (took 62.013372623 seconds)
done (took 829.391224089 seconds)
SAVING RESULT...
DONE!
