cset: moving following pidspec: 7893
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.280766121 seconds)
loading group "string"... done (took 0.586152753 seconds)
loading group "linalg"... done (took 7.690941628 seconds)
loading group "parallel"... done (took 0.160589372 seconds)
loading group "find"... done (took 1.139931617 seconds)
loading group "tuple"... done (took 1.856901292 seconds)
loading group "dates"... done (took 1.271744884 seconds)
loading group "micro"... done (took 0.220632346 seconds)
loading group "io"... done (took 0.949509498 seconds)
loading group "scalar"... done (took 37.663112493 seconds)
loading group "sparse"... done (took 11.90752759 seconds)
loading group "broadcast"... done (took 0.953861917 seconds)
loading group "union"... done (took 12.23726921 seconds)
loading group "simd"... done (took 4.510779045 seconds)
loading group "random"... done (took 9.099702974 seconds)
loading group "problem"... done (took 1.685072856 seconds)
loading group "array"... done (took 20.940762729 seconds)
loading group "misc"... done (took 1.698822871 seconds)
loading group "sort"... done (took 3.356215969 seconds)
loading group "collection"... done (took 17.558429156 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.558265258 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.13314028 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125360375 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126999796 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157049175 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.12061889 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133594025 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09427155 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.890169541 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16260674 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.125346057 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.443778697 seconds)
done (took 5.614019746 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.181201164 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089615777 seconds)
    (2/2) benchmarking "String"...
    done (took 0.090170786 seconds)
  done (took 1.36920832 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.074621812 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130107904 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074701427 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07347598 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073539279 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076108914 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073031487 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.073447556 seconds)
  done (took 1.764384804 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.080034027 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.076264993 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073104977 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.0750423 seconds)
  done (took 1.496189597 seconds)
done (took 6.085399943 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.811912324 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.220347476 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.196059387 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.424786423 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.139372995 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.163829586 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.656452239 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.328242174 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197760855 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.087607016 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.116318592 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.340682812 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116135939 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.633037002 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080496628 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.097427114 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.151174829 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422665542 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.076267764 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088672392 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095267614 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134780263 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092333016 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.08055613 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151412724 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07435814 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144578875 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087579202 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.072819329 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222081781 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.179128019 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66109503 seconds)
  done (took 10.576156952 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103208486 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.10405838 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.075310237 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129598526 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103350038 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.076368958 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077573533 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075060492 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093813953 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135232857 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.095777513 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109155743 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071779911 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.075770113 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.091980908 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.212422106 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.090177726 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088559631 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077359682 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082452748 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111805697 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.085256371 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08704239 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.083958939 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.136572907 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186544171 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102419079 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.104842281 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072863144 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086769799 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122172117 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13229027 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072079671 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072582868 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.13096043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102255086 seconds)
  done (took 4.88874383 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.023954739 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.152586502 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098582317 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.143002471 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.071742288 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.116643807 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.072754357 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08808982 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.21837924 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.416666628 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.636503973 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11812257 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113532889 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07471731 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.075199718 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.118323196 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07347466 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.574905865 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.104417101 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118119086 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.089377148 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078321789 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.0765878 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363482744 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074928855 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071523972 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075159312 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06418546 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.134134404 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071836886 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075332293 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.97564469 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165327262 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073245025 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107280908 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.305686479 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099671331 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.154212603 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076928796 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07178698 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162032583 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077859013 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07241492 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.091377408 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110018689 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.12248019 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.0727791 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072952187 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169029213 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.071720384 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086472087 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.121612336 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.071711963 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.159824504 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.083658251 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071697345 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.266874522 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095380054 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076642704 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071992757 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.18821753 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13600752 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.074485045 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07604853 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07532822 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.076606602 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.367725491 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073152913 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.87528349 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076926847 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084165556 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076156028 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07626418 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079521814 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07977004 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094157801 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072796331 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08252716 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073015904 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072799998 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073323203 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090760217 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.071066075 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.393810027 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07395931 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074924846 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.1742006 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09817735 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104152418 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.074876782 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.072807786 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107758255 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076306939 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.073584053 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115708067 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074205333 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090885617 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07621236 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.119972974 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.076139082 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092143144 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072192671 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10749354 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.077029357 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106265818 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.087021402 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075578423 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.437797692 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072428213 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07249569 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078854638 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072563748 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.074628044 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073789408 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.086545853 seconds)
  done (took 22.597294724 seconds)
done (took 40.275962368 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.263495041 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081816553 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081356393 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080875034 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08125983 seconds)
  done (took 1.87831493 seconds)
done (took 3.148513599 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.130799327 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107423216 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071479634 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10462274 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072405987 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110338033 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.109226274 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08899192 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108392122 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.071366679 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104721024 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07080754 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071286005 seconds)
  done (took 2.509170916 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090604785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09488666 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077149672 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090597846 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070990169 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090130498 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088517993 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096468146 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.088770288 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079746794 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07059313 seconds)
  done (took 2.200846929 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089362558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092306504 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076321259 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089913138 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070613782 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089651976 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088523425 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093208493 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089464619 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08168752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070552392 seconds)
  done (took 2.190079158 seconds)
done (took 8.155160691 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08524193 seconds)
  done (took 1.335543709 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.609274305 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.221126297 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08855695 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.120178278 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198871406 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.127698237 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.287246296 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.096260579 seconds)
  done (took 9.181376024 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109676585 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075395056 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.075674081 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078957923 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.077976819 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.076316119 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075402891 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.077911093 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07939404 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.075126833 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07576237 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07674209 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078019325 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07784406 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.078062092 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.078764713 seconds)
  done (took 2.589058057 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09995152 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098172026 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07955118 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.08149719 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.078649339 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.078699284 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.080510501 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.080297198 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.077656314 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.078956114 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082270658 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080570239 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078515357 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071358717 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080288552 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.082501479 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.077965037 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.081584039 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081152925 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.082084651 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082311939 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070930222 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07803139 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080282333 seconds)
  done (took 3.303707567 seconds)
done (took 17.666435785 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.122103634 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078675359 seconds)
  done (took 1.457807107 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.088963953 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.090224387 seconds)
  done (took 1.450237408 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.090738226 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0729647 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.097812564 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.085394552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.072503099 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.072233184 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.095779587 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.072794645 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.07201958 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072232762 seconds)
  done (took 2.075513963 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.074517886 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.084490259 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.077532135 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.088830865 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080649416 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070739858 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078405859 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074912845 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084023332 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069880087 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078192424 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090547467 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.078062523 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.091513781 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079304565 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075143195 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.078388258 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.074011407 seconds)
  done (took 2.695828278 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.072184103 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.073646597 seconds)
  done (took 1.416614814 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.073872902 seconds)
    (2/7) benchmarking "second"...
    done (took 0.070310233 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073861184 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073333383 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070086414 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069248214 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.069753501 seconds)
  done (took 1.769234957 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.395695903 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121340055 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325421903 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07813316 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089117061 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.266633438 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.073133482 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.078467568 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078247041 seconds)
  done (took 2.818539288 seconds)
done (took 14.955827904 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086830718 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092538436 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103771184 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.387865289 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.098455902 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072947323 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121295286 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.197068748 seconds)
done (took 2.442542773 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.225412888 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.656590996 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.419258172 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214821318 seconds)
  done (took 2.56722988 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.355444832 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095687632 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.066119332 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073249206 seconds)
  done (took 1.877220906 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074033717 seconds)
    (2/2) benchmarking "read"...
    done (took 0.076048274 seconds)
  done (took 1.434265464 seconds)
done (took 7.385689574 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073705067 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093807085 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.070143088 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.070761749 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.072874096 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.070261999 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.072589761 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.069982162 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.070360624 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.073058431 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073302681 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.072521818 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.073309694 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072685253 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07967205 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07018169 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070235831 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07268031 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069704005 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069651499 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070267391 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0726616 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069997424 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069967448 seconds)
  done (took 3.0632133 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.093150118 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.07274123 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.078719318 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.078015746 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.076421748 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07831401 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077672614 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.072330079 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.07820051 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.074888224 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075686097 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.076245561 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.074429443 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.076082656 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075273144 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.076922794 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.077770665 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072509998 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075400527 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.076209306 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07753232 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.187006659 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.076523955 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078172994 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07610755 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07578839 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074332881 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.073034572 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077461148 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07604963 seconds)
  done (took 3.70227395 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.078762663 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.069565499 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.070655936 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076856388 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.069632778 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07125581 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070351166 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070600964 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.071266711 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.069852802 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.071572349 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.069695062 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070603269 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070916227 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.070822782 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074128896 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085713189 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.071747021 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.07026624 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.071533016 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.07339244 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070109643 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.069535806 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.069883413 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.069881598 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.069478892 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.07025129 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06946044 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070629771 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.070267486 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.073556194 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074154254 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.069935763 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.077380006 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.073827766 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070523849 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073922698 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069764622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069974078 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070192748 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.069981316 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072659338 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069471462 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.077351008 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070103363 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.071397096 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070050253 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.071391244 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069950202 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072558014 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070036695 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.069770683 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072154388 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.070850325 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.074588814 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.069564571 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071128321 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069290594 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.070596852 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.069979555 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070268957 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070077271 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.072854698 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07055118 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085193367 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.077335608 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.070213227 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072129221 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071384882 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.073283331 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071975026 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.084247876 seconds)
  done (took 6.480151747 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.098828658 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095011317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072553018 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072048352 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068031189 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070671947 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076483951 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070657904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071440658 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088628584 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071020955 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071554012 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072722945 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074361985 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071217473 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072150138 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079375815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068067589 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.070901807 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07450339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07093832 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076123036 seconds)
  done (took 2.964014891 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.166310686 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077150138 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112299455 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083480656 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076496429 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082151417 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.076471101 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076590232 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07725812 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074273808 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074140164 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077101861 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076162775 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07443202 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074367862 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074156917 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075971706 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074035249 seconds)
  done (took 2.801886329 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08412888 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.072352283 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093572254 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.072215945 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072130791 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075957082 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077220958 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.081735124 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.075878911 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.072573085 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.080926933 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075021582 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.074744635 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072661484 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075159211 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072157829 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074766512 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072270822 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08070993 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07664231 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.077244357 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081006292 seconds)
  done (took 2.990210886 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087172023 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07463965 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088449774 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.075314443 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068274095 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070867064 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077508878 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071776702 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.076465896 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.074375248 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071893712 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071734556 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074783219 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072901023 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074968363 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071691101 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074470362 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072310122 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074719434 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068371949 seconds)
  done (took 2.794748564 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09463083 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075039637 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074629565 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082038477 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07400157 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074724116 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082109124 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074333141 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074369003 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095979236 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074098955 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075413359 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081689015 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078885664 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075062926 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082527451 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082208979 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081728015 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074721787 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07443205 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095685949 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074530375 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082153729 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074482177 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074167464 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07428943 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074812149 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07915519 seconds)
  done (took 3.514720247 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07405056 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072014071 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06987202 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070469552 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.070023303 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.070449083 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.070463231 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069993466 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07242556 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070588847 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.075629671 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.072664908 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07253604 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.072577027 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072744182 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072724508 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072798046 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069809793 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069404737 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070476706 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.072420309 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073357412 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.072839193 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070728591 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070558312 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.072589133 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070129376 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070457872 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073371181 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070291804 seconds)
  done (took 3.454887554 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.083263324 seconds)
    (2/2) benchmarking "in"...
    done (took 0.080137384 seconds)
  done (took 1.47187054 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.070209316 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087115243 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.069689518 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076690359 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076068513 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073894187 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.080334334 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076312449 seconds)
  done (took 1.91522835 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.090212834 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.084676455 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074528736 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.086443734 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084497491 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.090925766 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141607684 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.073719871 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078851097 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.071186268 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.087411327 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.072743961 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.079567463 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073648284 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.078616011 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080083373 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.070516574 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.079084394 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075061753 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.07288032 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074160588 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081500014 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076101638 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068191285 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.074549367 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095641435 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.084518819 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.073204095 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076713299 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.080595816 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.079148748 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.066810638 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073231118 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073320913 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070655885 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.083098982 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08801762 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076084516 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.081801831 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074656401 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083485086 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067644213 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.078334208 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079848015 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083898283 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07394879 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074126074 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067812262 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.071376998 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077647207 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06804445 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073289386 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.067917076 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080952347 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.077000495 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084299371 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072169779 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.075524602 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.076829028 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.076546741 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07942205 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07562882 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075907356 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072716844 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083079553 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07773792 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082307151 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.067977952 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067021678 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.070685484 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.082809112 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09661981 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.079176911 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.073761186 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074217514 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071462726 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076593282 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073703658 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078600476 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.079594293 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.073168282 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07841779 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080484286 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073514556 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076064891 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.081356619 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071907597 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.076304244 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.0707793 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090191349 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072080741 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071789527 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.07097085 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084521436 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.076713763 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.07313877 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.070832647 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080865639 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066659268 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.074154241 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073623372 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073705135 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083847857 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076551888 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076752573 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080650116 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.079747092 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072498801 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.074588965 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.068155421 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.20018721 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.073090594 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081112676 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.068350738 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077148089 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.074604896 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.074469602 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083142184 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.071849889 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.073741529 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.083665264 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.079393757 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.072405268 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.069723856 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07745741 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073284098 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076746565 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080908219 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.072604435 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.068964768 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.068240557 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.076801192 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073435241 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.077373647 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078764528 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077030316 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.067106127 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.071007012 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.077882241 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082490302 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.074013964 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.074554242 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.079331777 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074681606 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072548463 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080096382 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.075984037 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.072971002 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.079827354 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.074974964 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067927563 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07665259 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.076540543 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.071734859 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.077518298 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07727682 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075667808 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073676979 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070955677 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.080038722 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073677451 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.072042834 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073060599 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072932797 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.08471309 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07489515 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.068240592 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06973484 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081844923 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.071030399 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07211539 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.072360309 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.074983082 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07395177 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.071351036 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072550295 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076136029 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083279157 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076943361 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073728255 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.078229692 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084584649 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072744857 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.075740337 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072811148 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074399922 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073661277 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.082435772 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.079012499 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.078076381 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.075793145 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.069372563 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079265137 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081455271 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.072598087 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071325618 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.072949159 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077511503 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.079682535 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077868698 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.074272312 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071444362 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074525584 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076183041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076063702 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.07317341 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.072177807 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.080071899 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070610462 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079004854 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073486998 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.082875579 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076238755 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06779466 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075605933 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070932841 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0781068 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066673014 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069649833 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07108822 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072418984 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070839803 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.074137939 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.195718254 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081488474 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082245653 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.073927707 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073688854 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.074204528 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080714639 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.075246014 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078085523 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.077452391 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.080440003 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084391834 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.073305789 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076868845 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084402331 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.074025649 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067169047 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079241665 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.07172773 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072222629 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.07266482 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071747099 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076115916 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081505626 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080901568 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066898351 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.076406831 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072022684 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072596405 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068328411 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07759231 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076601896 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07343974 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080377747 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074233033 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.074062199 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076966175 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.073131838 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.074159979 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.074392094 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076088445 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.074543866 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.075271925 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073056763 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076417754 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.072273263 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.07070584 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074705796 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073249725 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.076324351 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079015758 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072893511 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073340772 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075894349 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074129383 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074311327 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074011683 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.072238776 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076893183 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074653976 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.073619076 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076281938 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06796658 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080462605 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.072761369 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081092074 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.073376031 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.069695581 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07980861 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.075915053 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07889717 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.073668314 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07372554 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.074310909 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072575165 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.075474562 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079737173 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070813841 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083666997 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.080404982 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073993617 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.0759922 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073344088 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07455961 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.072526942 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.073874211 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073785335 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.074597868 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.07261108 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078630605 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07581957 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.073806999 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07558227 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.074625627 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07366345 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074419235 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.067631406 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.072358796 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.072408824 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072678859 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082910218 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.073606087 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.072431317 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072825656 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073660115 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.072028493 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.070137573 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080618547 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081695387 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.074110083 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079057951 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.071972 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.073628258 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082907473 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066446714 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070303538 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.203448016 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.072307474 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081963987 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.075276579 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.083770205 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07391562 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072830554 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.07126469 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.074485689 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.071762906 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06834292 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069945754 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076943002 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.072935497 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072443941 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.073967269 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.076422531 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073777086 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083467311 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073306977 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.074840878 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074248588 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070484944 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.073390039 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073041304 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.076365026 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074111846 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07138702 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.071391269 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.073168102 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07473675 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074610542 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072903022 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075122506 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080852407 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072919808 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076174765 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076574921 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067552748 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.075894207 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072944931 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.074073377 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072866388 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.076644096 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076896752 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074506041 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082360047 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.073490774 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073979754 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073593608 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.070626765 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07243402 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072527275 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.072068636 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073026031 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074377494 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081620406 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.070295671 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.07589394 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072943489 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.073491482 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.08011448 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.073488935 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.076676593 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079427229 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.073578464 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07494623 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.081979477 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077743311 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076991993 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074094302 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.074553863 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079492147 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.072518206 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.08034494 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.073804951 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.074181133 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.075345941 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070884174 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072817806 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.072895219 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072596386 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079581122 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.073581867 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.075091462 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07211862 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.07097741 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073735076 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076027969 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080665978 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.075770982 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076386934 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068052351 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.070210955 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07348897 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070927968 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075128806 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075787673 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079105009 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.075568764 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.07411909 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072233112 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.08227471 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078538093 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.076576693 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070729109 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076834642 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07429365 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075505201 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074477368 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073367346 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074071112 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.076786874 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073651569 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07156506 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079246736 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.075697086 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.20608727 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075477803 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074840693 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.074307094 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.068683387 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.074128366 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.075287623 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078555732 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07588153 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073996964 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083815235 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.071744032 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.074261212 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076928908 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072812505 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.078896408 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.068230816 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07557021 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074132687 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074208393 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.068669436 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.072784265 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07120833 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.075344702 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.072680176 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.067844847 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083649271 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083345116 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07662565 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073325781 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072182547 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068898838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068429606 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072498643 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074043429 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.075437269 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.084807033 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.072369999 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071571089 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068404574 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073525149 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076109117 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.076339033 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070321254 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069278224 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.072390545 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076360752 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078460649 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071932188 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.073236391 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076790426 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076138565 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.070506486 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0764353 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.069842204 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.076690492 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086236023 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073785986 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075009244 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080385044 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080894275 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073516105 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068116336 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073472538 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.076265835 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074260972 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074444743 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074212529 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088919741 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076000936 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.072299223 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072120929 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076167589 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.072776469 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.081523788 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07435226 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074143584 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077742856 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.075206401 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081469532 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.076834261 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081071351 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.076257095 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.076363918 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07267076 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073607364 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071230354 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.072107724 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074662295 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073508901 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077809583 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080964633 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.072722327 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084220843 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082164613 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075388448 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.069953789 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.072886356 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.072485755 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.067950515 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074362839 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071167533 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071593454 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071289642 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.072486758 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.074253346 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078952108 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073763651 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073488203 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.073593886 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067062466 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075266043 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.074286771 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073162937 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068916851 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072424277 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.206478082 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078390125 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.080417523 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071029436 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07623941 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.075683011 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075034927 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.068610364 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.080296729 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072912819 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.076017185 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.072861644 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074066888 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.074179984 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077530049 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078547455 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074919291 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.075262491 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077414881 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075486001 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.071862171 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.070507035 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.079549731 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0718272 seconds)
  done (took 46.890261352 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108539694 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06975877 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067677386 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068682677 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080268339 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069656259 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06809663 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069015723 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069036058 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071972279 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067968155 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067879923 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076797455 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08410776 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079163093 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072820241 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068536502 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069534543 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067556134 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069138653 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076978987 seconds)
  done (took 2.93510216 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.081198528 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.084684439 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081723946 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088376619 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077934907 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076930693 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.083102179 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077043282 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084583759 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079004098 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084446438 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077236082 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.078969423 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.078477669 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079659984 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07697587 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085137509 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077355267 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.076546613 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081980055 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0771264 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082522342 seconds)
  done (took 3.151947914 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.075057866 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.072213867 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075144322 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.067695289 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072361086 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.067532731 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076477549 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.069884093 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075946891 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.071444794 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.071447814 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.07197257 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.074710095 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067476583 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.072869188 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070207233 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.114597766 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.075575276 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.072418107 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.073065277 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.067765276 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074575294 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067502764 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068267563 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.071715204 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076058495 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.072639997 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.070316683 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072047486 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071560203 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072244382 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070172284 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.074473815 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072836339 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071390849 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072307387 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072927061 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07250323 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067545482 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.070540175 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07299998 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.067956615 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.072709193 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.074343871 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.070764189 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.070063932 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074191677 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072212006 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06734012 seconds)
  done (took 4.942773629 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087462615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115775664 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073862515 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095998157 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086708927 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078685619 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.076011351 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096483326 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.069712017 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070574152 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.088225741 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.085529625 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071933052 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076207081 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.078704617 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072043374 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073208127 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070910903 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075899782 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071402447 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075996962 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.078864888 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086624025 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08560626 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076462041 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.070557939 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070995183 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076511692 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084255786 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.075920908 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077153487 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077509856 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087306145 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.077482674 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071608892 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074321596 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088445901 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.074691005 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074701553 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06995779 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07458288 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.076089659 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.078758363 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088875399 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071654571 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077172471 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072037715 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069132292 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084856213 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.074556858 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079817011 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.085805985 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.075988 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072275954 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076171788 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087278009 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.071687002 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.070005863 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.074798598 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084400862 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06963865 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075449298 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085281832 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.073556763 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.078985701 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085974039 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077148863 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07540354 seconds)
  done (took 6.86007195 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.084651464 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102352602 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090897186 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090060097 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0820197 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.082670902 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.090632313 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082164987 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081645705 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.086269224 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081459393 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122805376 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.077502695 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084562298 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082015668 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082313783 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082878534 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082009649 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082565877 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082664805 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.082046508 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.089779972 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082101657 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089930743 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086546876 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077278329 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082602675 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082198147 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090665285 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082695617 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086422437 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.082386815 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082147948 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089904399 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086114271 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082258079 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072069215 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082151293 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.082153277 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0825298 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077946552 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090229363 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082205898 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07744385 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082285097 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082334782 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089897304 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08677657 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084384514 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086701261 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.082037423 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090067119 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082191922 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081807682 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089790707 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.093108653 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090467187 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08991847 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082791207 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089634495 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090515892 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.09273017 seconds)
  done (took 6.705556551 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090535468 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.081303879 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.089476776 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.068208448 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070424445 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.078080588 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070513323 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.070306322 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081270643 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.080277791 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08383786 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078185729 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081152154 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083699406 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078697467 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080734109 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078546614 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078300311 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08090461 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078545701 seconds)
  done (took 2.989469473 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080570318 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089397666 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.07367025 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.077978109 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074916545 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.078022969 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075319583 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075755327 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073518707 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0760396 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.082642348 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082545057 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073352929 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.078423451 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082076066 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077785226 seconds)
  done (took 2.651177301 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.090758894 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.080270431 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.086813186 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.073016498 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.073430967 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06882885 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071527991 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.067727709 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.068861159 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084234856 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.071993763 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082781345 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.072765532 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.071151491 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.069014013 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.077831338 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068537771 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.069280112 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071996526 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084950355 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078893121 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070700147 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075788564 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07192269 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.0750994 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.077279151 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.07127778 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.072625982 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069530873 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072243178 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.075338128 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075638014 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.069887756 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070248458 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.070818787 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.069126775 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.072170709 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.072859767 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.077601556 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.071758855 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.070635359 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.074348303 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07249855 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.073613587 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.068352336 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.072783785 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.068560181 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074846061 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.069649782 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.07562317 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.072229244 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.075113523 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073079643 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079049122 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07516539 seconds)
  done (took 5.457915128 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086306163 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076724161 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.068554657 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.070580947 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075572953 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.074109485 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075797803 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073693631 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073460819 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.070175124 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074285863 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075383405 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073224101 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075464298 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074053406 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076817587 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067975414 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073064334 seconds)
  done (took 2.748397577 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078645844 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072130295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.079364529 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.072564057 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.072710192 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074380097 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067701605 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.070840626 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070669332 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072410875 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072241392 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074787084 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07056515 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.074704818 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071783246 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072502029 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.074746574 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070674109 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.072053512 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067867595 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074471387 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070992505 seconds)
  done (took 3.002671325 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.101118977 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.089816285 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.147681745 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.085543405 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091249925 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.078060011 seconds)
  done (took 1.996064621 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098692506 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107392002 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072775963 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075921795 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082460629 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076860458 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07620768 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076270593 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084893568 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082864742 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077286753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084961455 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085501257 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084522183 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082565599 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082656528 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076475927 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077257414 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073314147 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090689393 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076775044 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085164546 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076975473 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077202644 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076224287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08420882 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084919789 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082912171 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076358238 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085133627 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081989363 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076702236 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085232726 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083042707 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076383719 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085432172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076828837 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090527131 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082593993 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084326129 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.075589385 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082139351 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085194438 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081038147 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08519245 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077373946 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081586696 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07691807 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076814938 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092815004 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082660536 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084502222 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082437799 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085492152 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085137214 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092853526 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082832777 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084868229 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082763621 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082986064 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084425318 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082071958 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085107899 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082847757 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083039294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084698751 seconds)
  done (took 6.849936483 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115793122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074045068 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077370126 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083433178 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087516273 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076499189 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076934871 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076986172 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076767879 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07352191 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114853689 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076959717 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085001244 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085395835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076296773 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076146713 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0769066 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084123222 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073612254 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092937509 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07622781 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083986592 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083853531 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084340614 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082710688 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082467594 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076619603 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076941281 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077187455 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07633812 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081461956 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077351548 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084533214 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073570841 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08424493 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077749645 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076429621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081798714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076386158 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082932114 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084357337 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09033809 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076446246 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077082117 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083814299 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076592464 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076611599 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073090522 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077787583 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073703879 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082853213 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082936179 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082976489 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084682276 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076694164 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077013097 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077106581 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076994937 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076978552 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082825094 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084497264 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076916401 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093149633 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076725981 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076796214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084212004 seconds)
  done (took 6.765866479 seconds)
done (took 140.382328286 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.193492082 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.171792438 seconds)
  done (took 1.764830065 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076118627 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106115356 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08345891 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133815283 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072749682 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106695389 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105718363 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.0841283 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072741717 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.073003215 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.073283585 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075067093 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.138542898 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072877724 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07271259 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075350148 seconds)
  done (took 2.836112906 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106269395 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.170463962 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109505346 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07065395 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105974631 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079251734 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071582661 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082479854 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077602235 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071375974 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079361148 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077351491 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071761683 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077198004 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077576203 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079648134 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071184651 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.079146529 seconds)
  done (took 2.968723254 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109451871 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098507741 seconds)
  done (took 1.627705307 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.166883831 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.112257051 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.152891461 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35796119 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168292976 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.156321178 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.153061823 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.15304844 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119340206 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.147753553 seconds)
  done (took 3.10297495 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.110140136 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162661279 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.277519064 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125384554 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078879042 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.101532121 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.126002274 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084942717 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087493157 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087251118 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.086729889 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083243307 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.107144643 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080049357 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.081401094 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082938097 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.110739356 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.080515098 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.082003828 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.08252799 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107374882 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.072226667 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.08008262 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079464847 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.083563481 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084168749 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.072582128 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.072586441 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.082791134 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.081260473 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.082939576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.100239397 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.083871947 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.113554479 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077359645 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.114635717 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.083442228 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.08237335 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.081763507 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.079928242 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.085009681 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.085067519 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079967752 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083079499 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072800865 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08351921 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072916415 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.072524117 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084575005 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.073718411 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084337946 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.083151861 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.113784814 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.073808017 seconds)
  done (took 6.424598422 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113191312 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112842539 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077855641 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.120509177 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110490672 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.078963319 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109684925 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102858636 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110901744 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076033083 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.074821253 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.076911556 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089193485 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.089938162 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121969479 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113418957 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.081162456 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077584607 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113423741 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112243939 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075248332 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103450255 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097764587 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110275698 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074130331 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0767609 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074816119 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076958024 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083099534 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085244193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076161046 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.087823134 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.092092765 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086341598 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073981367 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074534364 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074882726 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.086421643 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087165594 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086192296 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.084207678 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074601263 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07509547 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076715677 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077078435 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074711846 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.085940493 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.087661986 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.086099092 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076768828 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077148476 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075076567 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076741621 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087577781 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084790508 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.088121023 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.087083164 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075736524 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074848432 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079783151 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087179143 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086050499 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085941999 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076406406 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086099554 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07554861 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086907794 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090833931 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075561815 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0767208 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075130215 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076519976 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076571347 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.084169688 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084980394 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07602679 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07635151 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075638942 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087646897 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085268737 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075027686 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08368077 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074198095 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075003305 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077147323 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076365758 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.084022062 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.087315078 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076927374 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074666053 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076259823 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075724171 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.073779968 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.083196381 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0854688 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.084660829 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.084156944 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075738239 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.216104109 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.086528196 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078271949 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.08818123 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076877679 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077139718 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07726565 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.086240488 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.084474762 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087139091 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076004148 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0756533 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.085013859 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088223921 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.075850075 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.085573524 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087821573 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.085779521 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.074184064 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08836477 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075670991 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087018422 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07629444 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086550896 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075766796 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086457965 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075487142 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075461289 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075183129 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.086064533 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077558076 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074887965 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076319388 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076322297 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.086248911 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.089274511 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079760351 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085891128 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.085567573 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077183553 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085646671 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076439248 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085659656 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076610261 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076692516 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074702666 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08814451 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075308311 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.075814579 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077156643 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.086861361 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07603946 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087143377 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085620867 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074863281 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087710538 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087686138 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084786819 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085964066 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076549901 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.074458324 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.075161051 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075790874 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.084205255 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08625451 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076566217 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075823902 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08446375 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086325306 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074598581 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084956289 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084994041 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.085813621 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.075095012 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.0762947 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08735874 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.087565319 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.084868834 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.084753539 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085537884 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074785682 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.084332199 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084673853 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075485784 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091455382 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075453984 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.090456894 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.085796337 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084199885 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086067178 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.087109469 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.086774124 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086523439 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.089820951 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074428152 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074233715 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085421391 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074301609 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075304172 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.083366777 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.209130963 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076792234 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.091576127 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076900512 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.08760978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074836138 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.087277365 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.074717524 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077054791 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.091932213 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.075908375 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077061067 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087493833 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076870092 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085635185 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087842888 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085917188 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07476628 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077805714 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.086996711 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.086316422 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07563544 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074859032 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077937998 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.085279877 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084411994 seconds)
  done (took 20.288595124 seconds)
done (took 40.438320116 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218275992 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.159685013 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.191764891 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.125870804 seconds)
  done (took 2.211436607 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.126284546 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.114297458 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099051104 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.071601589 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105801996 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.071904268 seconds)
  done (took 2.045878852 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322331 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220585957 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.197853073 seconds)
  done (took 2.192692354 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.211479534 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197937944 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.429845537 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.271061613 seconds)
  done (took 2.672337544 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.153094921 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.096203664 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.074593215 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.09078165 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.141874111 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.169398016 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.107643127 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.134304909 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.085638229 seconds)
  done (took 2.559873177 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.157925702 seconds)
done (took 13.291433012 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.13468987 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.100932255 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.107983599 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.229744253 seconds)
    (5/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.079488642 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.111035183 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.117580727 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.077986332 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.139040297 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108136655 seconds)
    (11/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.193691049 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.085667645 seconds)
    (13/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.186943107 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.080217452 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108647471 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091225168 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08294273 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.239334388 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.108294495 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.211590785 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.073176205 seconds)
    (22/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.169639685 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.078975596 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.072262325 seconds)
    (25/309) benchmarking ("sort", Float32, false)...
    done (took 0.140593344 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.195942347 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.078543369 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.21535137 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.080093113 seconds)
    (30/309) benchmarking ("sort", Int8, false)...
    done (took 0.151018448 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.175525336 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.204715362 seconds)
    (33/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.105744938 seconds)
    (34/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058507222 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12489083 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075984199 seconds)
    (37/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07850659 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084607831 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.08445507 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.229535444 seconds)
    (41/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096508258 seconds)
    (42/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.172595498 seconds)
    (43/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.115819355 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.184795154 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.163614209 seconds)
    (46/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.184692734 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080716273 seconds)
    (48/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.192001062 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.207042189 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.079469316 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.203016239 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.123133051 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190215859 seconds)
    (54/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.079721908 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.098099551 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.161277713 seconds)
    (57/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.215503616 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.074852954 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144503802 seconds)
    (60/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.201520734 seconds)
    (61/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.3491195 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073491921 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074833313 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082589996 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.152022318 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.070170292 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.057397964 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079228416 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.187184709 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.087393033 seconds)
    (71/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078941456 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.081705845 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167071265 seconds)
    (74/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.082958982 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079941771 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.086510246 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 0.279591291 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.166024195 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188126381 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.105337429 seconds)
    (81/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127664515 seconds)
    (82/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071380089 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.057646827 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 0.073044168 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.118408389 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.087861694 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.15401727 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.080792096 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078738664 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.080677532 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.057452572 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.191664108 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07707139 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.186500085 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.076619015 seconds)
    (96/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.107363959 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.096473052 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078638242 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.056452786 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.122547436 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083362436 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.101010783 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079689106 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083120282 seconds)
    (105/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079256536 seconds)
    (106/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083774754 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.059891337 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.072099613 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098821537 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20475186 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.144985877 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.07223951 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.079322636 seconds)
    (114/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.116247379 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.083107183 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.131781991 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.162655839 seconds)
    (118/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.187866751 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.171147033 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.059374872 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152505757 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.147113056 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.059673204 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.073019531 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.164117508 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078399245 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.143876078 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.080463139 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057166071 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09902892 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.079572682 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101531234 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.078791583 seconds)
    (134/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059244352 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.074969236 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057364445 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.071784408 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12178397 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.173261976 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.078219636 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.072228441 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192089638 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.079148522 seconds)
    (144/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.080187277 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204290504 seconds)
    (146/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.058409211 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069907123 seconds)
    (148/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.090002691 seconds)
    (149/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.069420133 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078985716 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154537219 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078496208 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.100506721 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072143449 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08683481 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096236719 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071677112 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079825945 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.17187775 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.073690396 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.098017509 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.058920313 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.05756867 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072041172 seconds)
    (165/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.058947981 seconds)
    (166/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.0572548 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058444812 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097085635 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.080217206 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079418001 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.156152874 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074176657 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078896519 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096993293 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082457095 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.073277017 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057846315 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.057203219 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.094082083 seconds)
    (180/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.077071223 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.057413248 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108960855 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.227683637 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.086815344 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.059656957 seconds)
    (186/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.109611368 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.187860904 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068248678 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074547542 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.056924858 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216946618 seconds)
    (192/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072622318 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067105606 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057262503 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07907826 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.117618819 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.104468212 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.074658439 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.082183584 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.080297724 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.095505165 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.073439051 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.078415466 seconds)
    (204/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.1193878 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058948116 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.072591421 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080702933 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.058736388 seconds)
    (209/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.107289492 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058756186 seconds)
    (211/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083891173 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.07109636 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057797229 seconds)
    (214/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.057953238 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 0.1965213 seconds)
    (216/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057665984 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.058349809 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.083025921 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.069234675 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073722917 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.100098622 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.097163477 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.099557368 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.082586078 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079639916 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.096454591 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073192068 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.059725822 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.072576367 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.060748087 seconds)
    (231/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.060716802 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071146595 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077697827 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076837864 seconds)
    (235/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058419225 seconds)
    (236/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086077094 seconds)
    (237/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.058980326 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071318937 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122082653 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056979232 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.069359248 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057770882 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146463564 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.179026987 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.057836177 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071763353 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057640195 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.057418011 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.148533608 seconds)
    (250/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.068260098 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155134195 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102135277 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.145398977 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078365524 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.087876186 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109990941 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.098782417 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057319613 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071988599 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095802628 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.086007937 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074976219 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071697256 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.057730007 seconds)
    (265/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057944977 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057835078 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075603936 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081138638 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.05842604 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078338128 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.080819031 seconds)
    (272/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.057779078 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.080416537 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.190848974 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.082432455 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072028248 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.09402844 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.096198952 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07414165 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074054563 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.072279202 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.074228539 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.192960901 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.058080567 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071819203 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146883606 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134148222 seconds)
    (288/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095691149 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.080100827 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.070273461 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.073394587 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074324044 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058482409 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069996163 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.120832467 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079165094 seconds)
    (297/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.066952189 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.072721191 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05759269 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058211154 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078019468 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.221790107 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.098018397 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073472795 seconds)
    (305/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075803461 seconds)
    (306/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.058885136 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080080541 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075122684 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.057932027 seconds)
  done (took 33.37539253 seconds)
done (took 34.838881932 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091020293 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100928574 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082194148 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.102007762 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088197908 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083553679 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.080553364 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.085662024 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.087066522 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.089008902 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085133123 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060701355 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081574426 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.084182189 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081867375 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09894194 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084866446 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.080149343 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.080006288 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.072049664 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.080211662 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.072398728 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.073583451 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.060556923 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085667015 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078477162 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078770338 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081319277 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.072555164 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072485123 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075791932 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080439175 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071730705 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085072911 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.078867362 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.080383592 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081762556 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083291907 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073461606 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072254895 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081518856 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.072195677 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07951769 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.081334902 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.079111917 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077783484 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080246019 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084936978 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097612726 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073731601 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.08148377 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.083021533 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082520857 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079075931 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076357544 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.079974713 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076891487 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098676951 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079678232 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074399204 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.08120927 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080564786 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077741692 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.080305806 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079930014 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.082115012 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082505167 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.078434456 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081801266 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078144843 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071665001 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079678912 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075579739 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071794068 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.083003529 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084004971 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070408717 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077954074 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079765138 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078705952 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071825897 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073601761 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.074485123 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078661305 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073438466 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060508141 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.076024806 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078910673 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.07146204 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.08022718 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07975411 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079680229 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073840867 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082675343 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071998 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077843927 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.07189913 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071790169 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.074361853 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.076226538 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071639052 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07385257 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.08168878 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.074222102 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.078535789 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085483919 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071470065 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078909272 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.071020619 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070543056 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.086144793 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081171276 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.071627398 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074590745 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.071056825 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.079138758 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070370206 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.071195137 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070587205 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.071009502 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077166787 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070989112 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072578672 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.215740703 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.087639941 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.072500635 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.076179732 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.07401533 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072604298 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078100977 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071680477 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072774013 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073831853 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068573838 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074319611 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072300535 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080568871 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074170467 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080255188 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074076577 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080140538 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077976628 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07779569 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077387011 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070245186 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066740475 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07374333 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074324932 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.074086835 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071844228 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073408215 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071654406 seconds)
done (took 13.506084545 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074866283 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148464867 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.104762668 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.103293542 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.093402663 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.073039069 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.082335143 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.108257645 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073637213 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.109056705 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.094135066 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092334326 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.124440635 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.071199746 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.072201283 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.077099932 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073298891 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088439816 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.108626195 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.094149376 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123615106 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071298654 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099919452 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096294353 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095255858 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10140081 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.07340152 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076438643 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.076229091 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.109094478 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095010054 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.076402225 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072869681 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.1054783 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.101767272 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091402257 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072810958 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.090454762 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.073429006 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.072992797 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073801733 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106164401 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087317372 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087671038 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.076560864 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.07587592 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073390436 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091022353 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09746178 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.087612912 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.093857768 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.109995895 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074822299 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.072192548 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.071409665 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.09320923 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.072090245 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.075756355 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.073057346 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074979215 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072629703 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.07557845 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.087973141 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088486034 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.076997401 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086748 seconds)
  done (took 7.314215019 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.094596411 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.102023975 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.090000381 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.09100627 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.072027724 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072562307 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072665386 seconds)
  done (took 2.150331149 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.075726089 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.095974795 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.096815361 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.096534909 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088661917 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.098843876 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08260973 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.073149046 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098572877 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.074353522 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.095014732 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107641156 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.076871554 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.086967763 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097827446 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.073819102 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097847251 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.073105527 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075899896 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09856721 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079145066 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102269974 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080094911 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.073364745 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.087695644 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.073288204 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121395007 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078103913 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074851343 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.076261071 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073994089 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.114817534 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087179988 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081338372 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0734427 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088362067 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.087751683 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075541375 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085478207 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082054511 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087433247 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072975776 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073814378 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074536264 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.07770808 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.083839508 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07391075 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.077738052 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.076074774 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.093363962 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071824447 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08708234 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.076481141 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079277262 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074836298 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080021812 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083912981 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07421854 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094042079 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074324231 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091220335 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089791172 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087547403 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089444521 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07516552 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.087374967 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087321822 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07541461 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074697343 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076815146 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090050779 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071255859 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07526675 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084314584 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075215592 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.097021293 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096899516 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074929872 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.087139828 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073604666 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.073384193 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07348039 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097004123 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078580496 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072952159 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07750695 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076667454 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076163089 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071886697 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.079473845 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071837815 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078933268 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.077236877 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.076380604 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076020313 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091170938 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07594942 seconds)
  done (took 9.575203848 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.078841655 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074629656 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.076294281 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073671945 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07470738 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.074885303 seconds)
  done (took 2.030956013 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.104949083 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.075702829 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087355388 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077913179 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112137136 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.093529006 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.093858897 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085601125 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090094905 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.085168264 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.093429404 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.094842679 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.099037502 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07883232 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.093112113 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.078163866 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.093430134 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081702743 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084873811 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079330199 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.093771303 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.079426259 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079036834 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.088944701 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.082912513 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077792877 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074073094 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.085867036 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084380847 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.085464309 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078834211 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.082581669 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.077883935 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084927565 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.093782691 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077837235 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07805491 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.083861861 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079392656 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.082500871 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095325671 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079515874 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080929647 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.083744916 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085277849 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076917305 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.083760884 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082084925 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094042799 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.083787201 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.083723206 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077643443 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.082565673 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.083712254 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077103219 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.084979411 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.083816026 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094036665 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079100867 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.077224863 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074844123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.082033563 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.083831674 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081897753 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.086217456 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.084002642 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077545652 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079129251 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079467374 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078143682 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.0838811 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075851062 seconds)
  done (took 7.623596227 seconds)
done (took 30.232160239 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545792061 seconds)
  done (took 2.087460888 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.635367417 seconds)
  done (took 2.201856357 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.548238293 seconds)
  done (took 8.112482354 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.425600566 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.533782955 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.749141955 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.140545883 seconds)
  done (took 3.456706716 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715319065 seconds)
  done (took 2.291761803 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.22689232 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.211911559 seconds)
  done (took 2.026099361 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.38717035 seconds)
  done (took 1.954480726 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.16027649 seconds)
  done (took 2.72635575 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.270050409 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18365213 seconds)
  done (took 2.026128528 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.489262266 seconds)
  done (took 2.060772233 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.943605419 seconds)
  done (took 6.516172106 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223391435 seconds)
  done (took 1.840440393 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.247493452 seconds)
  done (took 1.819535539 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.760044735 seconds)
  done (took 3.330784059 seconds)
done (took 44.023734677 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088724982 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088101242 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087808692 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.084842228 seconds)
  done (took 1.905442554 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.084671641 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079123272 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.083166718 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07959003 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.083173204 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079087254 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.081593776 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.081820352 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.079126302 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.079455486 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.079274475 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.079889069 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081730971 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.081087539 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07751291 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.082217397 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.082704253 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07917785 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.082026019 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.079545732 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076989444 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081372369 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.084242246 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.078304047 seconds)
  done (took 3.510541496 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08653077 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.079252181 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.081306282 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.079054475 seconds)
  done (took 1.908862752 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.086467289 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.099808511 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.097446641 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084572793 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.099689696 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.093759794 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075681977 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.075899724 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.077409466 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.084513619 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.07513148 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104216397 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.09564599 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.084746225 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.086714851 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.072653834 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074609232 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.094915143 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.085052111 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.085066094 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.077309101 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084356457 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07458861 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.096148892 seconds)
  done (took 3.641746391 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.094865029 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.112911598 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088432774 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.096006634 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09860662 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.0718971 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.094715402 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.098572856 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.134298631 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.072247366 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07744885 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.072258384 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079795301 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.071965621 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08792781 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.115438026 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118631823 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.075386966 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.104360221 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.072206959 seconds)
  done (took 3.426628095 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.080953538 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075862554 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072362245 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.075828924 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.084362354 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.079461094 seconds)
  done (took 2.057254928 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.075998482 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074537319 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.074980886 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072996289 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07938406 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.073547672 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073165634 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073984275 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.074655441 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.074038377 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.073978639 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.072543895 seconds)
  done (took 2.474697247 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.210125365 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075289619 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07493848 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.072837021 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.077797334 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072796648 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.087873918 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.074736202 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.099204504 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.073188796 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.073267467 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.075432134 seconds)
  done (took 2.653003829 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221948871 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083460015 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252648026 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159136232 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119399691 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123787695 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120452683 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122112886 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.151152671 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108701241 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178708737 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178135141 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115698066 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145877132 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097408778 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.108276433 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168800628 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173253074 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113410134 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177763731 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154619471 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134939774 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158025915 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109643865 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115860505 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130512039 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.078594396 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087296683 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18189984 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142419924 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154181761 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119720721 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100023791 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186836986 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181658124 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149401489 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155617529 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092069902 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.113392776 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.142548867 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21088747 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095751953 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.313368333 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119470083 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09111804 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142151234 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12896155 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12798231 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113090282 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097149141 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155714105 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19515059 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.147160557 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09477308 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13293357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12142235 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.123193393 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122097587 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193173235 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171220128 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135707899 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.078350192 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116061021 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163710782 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140862078 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.116351202 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.133569994 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09886892 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143832024 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164329477 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129473729 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15389379 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.125202972 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09638092 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127416388 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149370444 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136435253 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169864114 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131888164 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07960024 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132168241 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109682119 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088291974 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152876248 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081965663 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184663296 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106421232 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.115999304 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132934057 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117576379 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115844373 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.314821216 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156908611 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112448009 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.07301482 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114429644 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.129355758 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155222281 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094799238 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117511251 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127051048 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.084614979 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146189688 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.082338497 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131503552 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.084507292 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134043914 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138050022 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08427115 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131500072 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111028082 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.108927717 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14179408 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169242971 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095511101 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089361639 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179328528 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12975422 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.110819841 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15271665 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165500899 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.108739704 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107951073 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157881795 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188826871 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096222046 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172714381 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113963846 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09014621 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.094690836 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133371384 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120048901 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131104224 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088311965 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.125993269 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177706595 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080783366 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101823984 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141533227 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084855706 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08736166 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112125505 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112687466 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.102019708 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.107450177 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.256896285 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14614311 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133140116 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114202574 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13565963 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105971408 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180677158 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09515978 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109745636 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111104058 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075938177 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.144139503 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167041384 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085726386 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1741108 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.132062494 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124805584 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128255072 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090177711 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148325334 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085602468 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.076516875 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153144324 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118076795 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117876161 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.160203741 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123637257 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.13383774 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.126109052 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14157878 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139011557 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.137657579 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112646549 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.095342814 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120782471 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134351639 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079862697 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09715748 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086961633 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111955153 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103412856 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089939455 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150157684 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133046043 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116917321 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119241964 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102764074 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155692472 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.083232931 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135407369 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126398867 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102811961 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.160122484 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.309435835 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141172167 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106911085 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14692085 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077937044 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081132397 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096465745 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131818643 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089641975 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090098627 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124261858 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156134979 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138541826 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144929072 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131782946 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128320467 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164142298 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076885236 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12444528 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156600464 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132733315 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.111561342 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096912798 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.106790168 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151249064 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115265956 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191659847 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121182736 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132142315 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162514756 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.107667777 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086568638 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110333175 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144683957 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112002915 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152898473 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106912813 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094842034 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117179801 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080972192 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106837139 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135360919 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126921001 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143432519 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.122631191 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139481289 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08361013 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122420346 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127555653 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128083857 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06989592 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128388912 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.319216796 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103029301 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127217948 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164769975 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08663523 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.141668513 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186721517 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154155583 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092741332 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116104826 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12844295 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136147533 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129120634 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149276247 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114599897 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1466924 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118683516 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.093547907 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094884961 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104530194 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111759427 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101920266 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.115583776 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.120763202 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.103100934 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140354306 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110488925 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117919574 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125791449 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.105403205 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09730885 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104202706 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185993446 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125957888 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180390583 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.106614362 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.15370115 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173137443 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081292718 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086404161 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.084896432 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149591176 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091496829 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138609845 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.115027333 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124601943 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130979709 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150728142 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102075347 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.075008251 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115797115 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140655813 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131658157 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251047447 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.11232111 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172834849 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.108397006 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086154042 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121775747 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124492415 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111200388 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183677733 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.067872895 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113975581 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084041134 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087456655 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135328475 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163748166 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.088568788 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.111061938 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127778273 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120182061 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135956561 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108146724 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118616447 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134467721 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158638664 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137125276 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.096992941 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119440834 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136303926 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166763276 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112307216 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.103240527 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182405744 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160932018 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.169540024 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094713926 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122651012 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123265402 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116719661 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147374561 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089618276 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172820887 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089177644 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145133727 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11004626 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095639146 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13684011 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.115171655 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094633058 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157784328 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124005413 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088654998 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083668379 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12302855 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123654744 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110812732 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080798672 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143251305 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079168773 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137431979 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163766218 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086944719 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109601302 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101364152 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084196221 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110792718 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106300712 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092862494 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10375035 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17608708 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092169232 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154112989 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137582387 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117485831 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140414312 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107222173 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645444594 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083200939 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157220954 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12090182 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177713264 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10550091 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120731955 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111977441 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12266462 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144467606 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106449269 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181081169 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132493723 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116676023 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083211499 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103869421 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105668337 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089624918 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109559009 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117742662 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115753385 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095041163 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116785458 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125153616 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085305456 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098979431 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155521088 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118379779 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.412997248 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15206961 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09391952 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132536985 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148219597 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088465097 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.130658244 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165533752 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116050097 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108544614 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.0900272 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109104994 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171148793 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.080397295 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170193087 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129537313 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118223295 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122723903 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.121696143 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139476088 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115260406 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12916002 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100188538 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11804191 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121101628 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08867502 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08463735 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112239374 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119351944 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.105694423 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105108688 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.106311888 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161306093 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07879425 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106810839 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123550648 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153053168 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183420112 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096251865 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090072311 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126703107 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121237093 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.120042595 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129495254 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.086203984 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088703604 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088694945 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.084618107 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115689714 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119915562 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122238109 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118786782 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.322163251 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089305602 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.239270383 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103659053 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112579009 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.076443259 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.085551149 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104071745 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105682337 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114556332 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117850985 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168799757 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.102074495 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.097057746 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09809193 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080876366 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089969729 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136477138 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117128761 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126513387 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106019237 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068693457 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115481718 seconds)
  done (took 62.790127945 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.117425532 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089033578 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100968007 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150583734 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129994587 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210133373 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160986221 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19632574 seconds)
  done (took 2.876037526 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076878055 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.102005949 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.109024686 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.089252257 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073848589 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.075130506 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.242312129 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087684724 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.073325419 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105794567 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.085110848 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.075364642 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.439384246 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072250291 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.074196675 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068513611 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073758133 seconds)
  done (took 3.631033828 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.410239255 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.622824846 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367049732 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078818315 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.956068705 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095276009 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.159284423 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138708197 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080190906 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53276423 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414653326 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132724461 seconds)
  done (took 18.70345468 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085028181 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07641895 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091847476 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091254634 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079923028 seconds)
  done (took 2.137261021 seconds)
done (took 113.324340632 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090674425 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.625783341 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059733178 seconds)
  done (took 2.428749962 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093273342 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092920463 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.092562569 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.089714547 seconds)
  done (took 2.095652646 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082829228 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.083510857 seconds)
  done (took 1.883758343 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243615008 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171815026 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.103842749 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.092440564 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085013416 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.086652918 seconds)
  done (took 1.98624215 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.081494227 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080917863 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.079759371 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082646096 seconds)
  done (took 2.040298396 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.085125839 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058327431 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060796525 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063813372 seconds)
  done (took 1.983897448 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096766184 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086118928 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084677673 seconds)
  done (took 1.984038304 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112709501 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092898377 seconds)
  done (took 1.921965383 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.090849016 seconds)
  done (took 1.809063456 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104266196 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10790161 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139805493 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118915136 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147923593 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.116999207 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.091879437 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09290078 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083139972 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.093760359 seconds)
  done (took 2.815169451 seconds)
done (took 23.26968505 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.088170585 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374314508 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36761793 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096497712 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674858238 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.363261961 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998897618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09941887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122364389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074258523 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090991862 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.653590668 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986709321 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325573202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973174742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.330337208 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655506634 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074221265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073794743 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074456078 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.978781584 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074114267 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074773235 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074552617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654148391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.379277814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091246888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325209935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074311393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076525216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.361964991 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074579163 seconds)
  done (took 16.439558348 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079298424 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126574305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07916681 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092080665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.077607296 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075439856 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077288898 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075673638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128388373 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076792415 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091743594 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074068503 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07860021 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074259105 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094110326 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075024931 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075290694 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075908194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074342343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075309555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093935793 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073860582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075676049 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075378784 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07427969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08756666 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075291843 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074678311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074997831 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076460343 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078070606 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075281723 seconds)
  done (took 4.343509391 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124407884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131670155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08127099 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110579493 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118150267 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076805669 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150624398 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.10100546 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.134082812 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074842248 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092074412 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074685389 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.108935486 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075773029 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095040129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074922462 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075385713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075413132 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074474624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075284104 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.095133679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074446149 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074945007 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.076119228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075214668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088998909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074871051 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075231699 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.076260849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07670126 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078224081 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075726191 seconds)
  done (took 4.600432407 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.081762932 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080865966 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090597507 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.090539927 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07644942 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07892724 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.080509115 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.076516882 seconds)
  done (took 2.390911527 seconds)
done (took 29.496495232 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.088221133 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.076320102 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.079095589 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089155621 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.08057946 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.085198544 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073995164 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082310987 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079237129 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079880319 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.081084196 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073855327 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077588249 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073635067 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080929152 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074956179 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.086260805 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.079123689 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.085700741 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.086225524 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076274667 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.08036597 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081775328 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08628613 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.086234185 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08611961 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.084957913 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079700907 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.075855417 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07775666 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.083693234 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.090518347 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07511644 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.086288904 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074762453 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073984435 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.078376873 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.07461984 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085850376 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084605665 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076195906 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.083152275 seconds)
  done (took 5.10692144 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.097996635 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099489885 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090931394 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068314889 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073139017 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.072906945 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09581709 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066521397 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06580533 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094987803 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06212268 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.066738488 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069981734 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059824494 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.0666912 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06338409 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.069008733 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061639694 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066492316 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066012438 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096081436 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060214777 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085117307 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.070058749 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.062523924 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068191069 seconds)
  done (took 3.664654876 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.085575968 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091881045 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096214311 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137654657 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113654682 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085643041 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.085664272 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.102447313 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095267567 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073612852 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07785314 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100436356 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096596146 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.080566477 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.074337728 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.092690856 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090705718 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075782573 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.082704424 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101427231 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.094668196 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.092544187 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102537134 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.090301581 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.072952172 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076290655 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.078007397 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.088344739 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079353305 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.083698288 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.077887619 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.078119182 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.076094788 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085604988 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.077969431 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.076560211 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098779999 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084028893 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.085236414 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074309022 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.082800661 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075390069 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.100413959 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132049716 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.074267647 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080742462 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077591089 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084367813 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073827152 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095514793 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.085401611 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07327499 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.077241154 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073186165 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07392846 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087393028 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.076570858 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.076712209 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.083307995 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.080191013 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.100035731 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.079035853 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090182617 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073733601 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.082677822 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075276653 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074986728 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.073425778 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102416215 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075866824 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117664722 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074651402 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.0753241 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.083558096 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081923077 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08042067 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074818691 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089970064 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085161486 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077874752 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.083382311 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077789526 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.077079715 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098528927 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076211097 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075791823 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.075040699 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.080401211 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.077400632 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075551672 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087574358 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.073625899 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.077229994 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091691045 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.074288948 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075732328 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07992761 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078739235 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073761903 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085747944 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079457362 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.07521403 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08463795 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.074210942 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076978732 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08734622 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.080297213 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.07293325 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07846486 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.079976481 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074898679 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.076131609 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.076726964 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.075945809 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082667851 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080918986 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078878279 seconds)
  done (took 11.526686988 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.176442552 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165623224 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.077167985 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15761872 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083523535 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.086152574 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.170644245 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102513643 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074644513 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075233024 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.075536189 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117398541 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.114012614 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.124205564 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08553938 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074391282 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092092252 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.122442799 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160967482 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154777611 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091598606 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.083926056 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.077103967 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075519704 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.076591965 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.085128471 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092447809 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083132696 seconds)
  done (took 4.735910246 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.090241844 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.112062135 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.081835464 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097930828 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.09808818 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074626219 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.077204398 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076667142 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088103925 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085097248 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074312023 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.080787717 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.081445009 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.077586493 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.075021642 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.081468493 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.081197587 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075653115 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077863703 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.079978222 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.085620284 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.099522435 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078687536 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.076126613 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079551409 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073905522 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.070537608 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.091301385 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.075804789 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.102150849 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071834517 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.079144445 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.089082408 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07507272 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074101654 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074294903 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074379279 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073662145 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075892799 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072616871 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072500264 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06385692 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.073770097 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.085980464 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081281095 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062801594 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.079849305 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.079373121 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.08010533 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071539035 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.077369973 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076592981 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.077380007 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081704557 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078624097 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.080276286 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075672011 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.080691232 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.083635142 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074351961 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071153978 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.073133819 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.078813408 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.072201441 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083346686 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.079776096 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072856334 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07415294 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.076421726 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.080882067 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.074237582 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078533843 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.072388275 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.076277413 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079311612 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076524189 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075116299 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072909242 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073702344 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074878436 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061950876 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.074506807 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059373357 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.077472377 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.072670719 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072715414 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073876392 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.079213794 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08662462 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.076235366 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.081019281 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075667504 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073213618 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076985048 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066293959 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078041132 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085819557 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.089935966 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074265952 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071947319 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.087876639 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079173826 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.073320832 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.0621528 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.079374412 seconds)
  done (took 9.971702409 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100192271 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076055861 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.091016731 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09751856 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094098157 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.082537225 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083918298 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.076042773 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.090327308 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.080401054 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.083399936 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074288295 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.085480154 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083902253 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076904825 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.085598964 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078958362 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.091657381 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.089373599 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.075475537 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082909622 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.087336813 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096883308 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.088567657 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08746205 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.088293691 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.097237294 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.084454347 seconds)
  done (took 4.191691419 seconds)
done (took 40.925263195 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.849810435 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.088468027 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.823254678 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.2381999 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.902079209 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.032267811 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.907794028 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.820254938 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.03942859 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.854767305 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.024503257 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.9484114 seconds)
done (took 66.414657297 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.879254914 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.959332982 seconds)
    (2/2) benchmarking "String"...
    done (took 2.057067526 seconds)
  done (took 5.763536939 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.081378922 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.378716392 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.068689856 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.818133569 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.827221142 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.15527444 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.629649562 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.326793154 seconds)
  done (took 30.956683013 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.047502809 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.052552356 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.545508191 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.582893193 seconds)
  done (took 16.03550625 seconds)
done (took 64.552132067 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.85650609 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.833206068 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.872112478 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.801651731 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.878816483 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.836298593 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.921849955 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.006385429 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.818393203 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.807712246 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.818634855 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.260485257 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.834949053 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.990556146 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.820451798 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.831288548 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.846169753 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.257476888 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.977350634 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.832367534 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.830730474 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.8844388 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.819648586 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.830192825 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.846620121 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.820995234 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.258828073 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.832951038 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.651979744 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.822173237 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.865121001 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.124169584 seconds)
  done (took 206.439966808 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.822115676 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.841064804 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.924170099 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.828191904 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.258840768 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.003739784 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.943425318 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.454106854 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.821896564 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.827898293 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.11165409 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.820018562 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.136920141 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.770308019 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.853853196 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.8283177 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.108464544 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.112520103 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.865870762 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.995417215 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.846271284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.979840864 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.915350084 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.077557937 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.845768051 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.831094301 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.831432003 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.844470752 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.01268385 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.096581093 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.839605781 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.845553826 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.024809678 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.696146303 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.830501151 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.828583156 seconds)
  done (took 172.429925209 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.992590238 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.824773516 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.823299788 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.824053697 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.827623255 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.823358424 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.953925947 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.947448016 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.439506418 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.568048038 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.874649537 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.655424432 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.822052092 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.89275434 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.832407082 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.821079764 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.823770828 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.840385525 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.851411529 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.820449872 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.823073221 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.954163699 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.83574978 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.926997528 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.829087675 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.823376655 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82891035 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.197501884 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.821547777 seconds)
    (29/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.824334434 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.828590541 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.068087687 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.822733556 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.826354868 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.715798842 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.438918196 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.914980162 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.827003822 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831228994 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.826252282 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.045273579 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.822934505 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.827232647 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.828344604 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.995749759 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.823159043 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.953857188 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.822655551 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.320164728 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.822928403 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.826467972 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.626821135 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.827386654 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.474327721 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.822852955 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.825444875 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.831197529 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.825705788 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.826395314 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.832658988 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.585243535 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.901876538 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.825526505 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.831372442 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831438651 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.825916563 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.036027959 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.823841325 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.826399474 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.885253496 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.056129866 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.947506386 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.82786593 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.894439821 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.918341281 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.824501488 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.826318583 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.826470056 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.826451533 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.908278807 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.825081299 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.953617861 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.825324198 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.834625046 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.829246354 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.878340974 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.895596838 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.826710607 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.717681635 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.827257332 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.828355354 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.145368014 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.894622102 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.82580587 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.827562612 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.828710302 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.956269704 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.948404289 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.601744784 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.829301836 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.641776491 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.830102596 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.96526717 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.82640218 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.01353571 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.830684081 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.911486744 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.831367153 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.831917855 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.828077421 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.862004043 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.828952931 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.888727659 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.826297329 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.201325261 seconds)
  done (took 409.42688078 seconds)
done (took 792.101783144 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.503470643 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.469165222 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.564640676 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.482084199 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.460908888 seconds)
  done (took 14.236834005 seconds)
done (took 15.994749255 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.918624583 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.921942005 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.852345206 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.921147792 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.848545888 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.922332871 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.90471339 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.854538762 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.8878875 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.855197514 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.888886041 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.855252895 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.843227978 seconds)
  done (took 26.23324098 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.06391147 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.057710637 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.902599661 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.061416428 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.87988651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.068296507 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.990088885 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.981585575 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.982985859 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.845795972 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.844070141 seconds)
  done (took 23.439032863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.066691795 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.069368171 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.909913098 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.063713787 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.881892342 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.063082224 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.994639051 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.982720449 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.986764216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.845963397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.845689214 seconds)
  done (took 23.470153433 seconds)
done (took 74.902913456 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.839086632 seconds)
  done (took 3.598478481 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.864354814 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.022409521 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.845310609 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.843345659 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.839102508 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.840331624 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.842718494 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.839476067 seconds)
  done (took 16.698680159 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.840190252 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.836845022 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.83823202 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.839771842 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.84088189 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.838792115 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.83791672 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.841200117 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.841651284 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.83709569 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.838566969 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.83871667 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.84108572 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.841638911 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.838139873 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.840375724 seconds)
  done (took 31.192499841 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.839041013 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.838475769 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.837917256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.840462104 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.837376194 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.838699423 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.840212987 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.838816512 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.838869621 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.838809992 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.83850594 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.837580191 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.837785721 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.838384665 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.838874481 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.839104775 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.839687874 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.838675492 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.843323817 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.838949238 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.839491589 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.838613868 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.839464843 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.839797308 seconds)
  done (took 45.901837517 seconds)
done (took 99.151608479 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.738168725 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.463648008 seconds)
  done (took 8.963830374 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.843438371 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.841423577 seconds)
  done (took 5.4922542 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.8411151 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.843472238 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.843447248 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.842927318 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.843415845 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.843167906 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.844037178 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.843138998 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.843235588 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.843479496 seconds)
  done (took 20.195601868 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.84225333 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.843943845 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.840465057 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.845379492 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.843905017 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.840701385 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.843391186 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.84378244 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.844901295 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.84105775 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.84339288 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.84256892 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.843704079 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.841362112 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.843726522 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.840822045 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.841480559 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.840571784 seconds)
  done (took 34.93227175 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.842493864 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.844589976 seconds)
  done (took 5.451166998 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.840947279 seconds)
    (2/7) benchmarking "second"...
    done (took 1.84085408 seconds)
    (3/7) benchmarking "month"...
    done (took 1.840328234 seconds)
    (4/7) benchmarking "year"...
    done (took 1.840818272 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.841146935 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.840964723 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.842286708 seconds)
  done (took 14.652506031 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.84498257 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.008550231 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.077241607 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.490052512 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.847205355 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.848902844 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.79692965 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.847819189 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.8487324 seconds)
  done (took 20.375382112 seconds)
done (took 111.826771309 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.702273365 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.836883023 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.215408498 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.900015912 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.887055852 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.135114916 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.858725163 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.135961904 seconds)
done (took 43.437338288 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.857470866 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.383057446 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.413344848 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.288242847 seconds)
  done (took 12.847154318 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.824229187 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.36089556 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.875436706 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.423751347 seconds)
  done (took 20.268471936 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.214188889 seconds)
    (2/2) benchmarking "read"...
    done (took 2.185814527 seconds)
  done (took 6.161662059 seconds)
done (took 47.899707177 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833405504 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.83414713 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.83062591 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.830194393 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.833741915 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.83394789 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.832976492 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.829331618 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.830077838 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.832194341 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.837525173 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.836107452 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.835657737 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832239946 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.833319191 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831474098 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833806305 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832525192 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.831210678 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831574013 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83203066 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833534123 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.832722752 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.831352897 seconds)
  done (took 45.742977318 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.831499387 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.833410648 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.834251977 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.835629237 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.8314086 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.833760125 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.834740621 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.831233699 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.833455604 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.836415442 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831450439 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.830922133 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.836630666 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.831116337 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836713717 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.832327587 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.83582674 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834005193 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838347169 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.832140116 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.83561787 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83152827 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.836384781 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835699046 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.83333594 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833466502 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.834351621 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.835623407 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834897891 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.834455828 seconds)
  done (took 56.779173889 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.837911589 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.842377218 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.8362473 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.83534011 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.836130094 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.835187199 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.837251725 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.830664029 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.832293914 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.832556439 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.831524979 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.831025162 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.832979784 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.832069222 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.834072772 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.83213426 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.832126228 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.831532412 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.832068777 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.83429442 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.836592404 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.832165566 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.832178783 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.832352604 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.831548147 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.833336421 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.832103002 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.83359779 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.83288065 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.832975953 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.834151081 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.834539082 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.832703533 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.833477548 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.832236929 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.831775077 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.83702827 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.84035554 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.832047719 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.831895842 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.832403274 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.830476529 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.831788208 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.831457971 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.830473016 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.832647579 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.831056958 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.831077925 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.827465335 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.826108041 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.827658998 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.827220258 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.830011065 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.824903999 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.826783898 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.827218657 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.825696453 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.825414976 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.827242757 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.825229116 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.825926986 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.826106248 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.827534664 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.828945785 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.823709931 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.824729417 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.82667518 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.824715757 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.825549899 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.828017996 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.824235851 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.823272667 seconds)
  done (took 133.591996683 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.822866547 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.823178576 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.813504265 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.816708525 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817743979 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.819669293 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.817729417 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821482808 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817551467 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.821243842 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819147937 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.818267009 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818987743 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.818004595 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820184779 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.816894986 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.821189517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817991513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.821549873 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81959312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820290721 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817827993 seconds)
  done (took 41.767948783 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.820508095 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81886537 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.816362141 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.821338911 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.817655625 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.819938705 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.822557032 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.819883249 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820140635 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817647748 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.817334182 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821652794 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818178958 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817824087 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817681675 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.817589384 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.82004742 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.821329813 seconds)
  done (took 34.488393071 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.817286283 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.817222109 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.820454907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.817801611 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.819214649 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.820299848 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816408608 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.820720129 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.821041936 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.819245536 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.819349535 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818988495 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.819729817 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815760406 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820691531 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.813832892 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.817941289 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815019207 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819784382 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815549393 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.819580485 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81982794 seconds)
  done (took 41.748013167 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.816618348 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.818444073 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.815142676 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.815870581 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.815274543 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.816172072 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.818408679 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.813225679 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.818287535 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.815825744 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.814192329 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.815916369 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.813464758 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.813888006 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.814803241 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812635189 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.815053519 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.813900628 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815769559 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.812739763 seconds)
  done (took 38.045580058 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.816066719 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815253762 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815518729 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815861907 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816076254 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.815163297 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815911573 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.814755138 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.815723967 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.81824195 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.815066075 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815357877 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814092789 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815439044 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815131873 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.817724621 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815097591 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815675579 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.81493296 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81576691 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.817358295 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.81539161 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814171285 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815857739 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.816002349 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815354448 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816632144 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.81658221 seconds)
  done (took 52.577855662 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814355997 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814699147 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.816377137 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.812290704 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.810265126 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.810959636 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.811748714 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.812488044 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.816624746 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.811614296 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.814675735 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.814692406 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.812986738 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.817405442 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.813978757 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.813425227 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.814340453 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.811609966 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813316161 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815860325 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.814646889 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813642331 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.813907824 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.812756298 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813748081 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.815076431 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812240357 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.812634546 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.814978245 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.812762791 seconds)
  done (took 56.148563854 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.832492067 seconds)
    (2/2) benchmarking "in"...
    done (took 1.831870468 seconds)
  done (took 5.402082449 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.810983075 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817108887 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.811893361 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.812981462 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.812324587 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.815327931 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.814337166 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814490548 seconds)
  done (took 16.245151919 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.813291469 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.814318244 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.814780353 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.817890051 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.813929817 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.814592726 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.818094807 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.814587229 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.817222486 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.817295646 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.820137841 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.821567436 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.817443459 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814743391 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.816657739 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813650204 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.813187647 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.815532014 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.81352155 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.812846071 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816840029 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814514259 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.81571797 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.809668856 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.81550047 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.826411057 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.815476292 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.813509325 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813893835 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.819005812 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.813615745 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.812603812 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.814789023 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.812301548 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.811490691 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.813793062 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.823765173 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.811539341 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.819889522 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814480357 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.811953754 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.810339302 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.818214217 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.814468225 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81462408 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.814372381 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.812998662 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.810832337 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.811968746 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.816238431 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.816799395 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812520442 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.810477341 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818795351 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.814249929 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.819979591 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.813673299 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.814743183 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.82092006 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.822809742 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.825552249 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.819677834 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814900381 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.814607675 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.823693427 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.836630121 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81799169 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.809281489 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.810482337 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.813992248 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.821172177 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.824999923 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.821827657 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.814275054 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.814307754 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.816688497 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81344714 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.812453997 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.820349606 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.815656453 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.813719706 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.815228866 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821064033 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.833756913 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.81175897 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.814302894 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.815140762 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.812673443 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.81445203 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.821393169 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.814594772 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.811459692 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.815728586 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.813208065 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.814449309 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.813714443 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.811899557 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.816469276 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.809795375 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.813455968 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814836232 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.814083594 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.819990922 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814837952 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.813447643 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.820085658 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.813425199 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.813276296 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.821043329 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.813929008 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.816051272 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.81393187 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.818771715 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.811854322 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817700988 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.821113038 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.815547586 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.814570498 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.814944026 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.815575247 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821765159 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.836406312 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.814341245 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.814280439 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.81842713 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.825654661 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814717285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.817480778 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.814774362 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.812295299 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.812936363 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.815802548 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.813637857 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.815104451 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.81424501 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817228095 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.813222855 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.814588607 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.816042282 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.816143478 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.81689048 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.813704843 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.816374258 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.81627097 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.816330807 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.815647904 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.820167284 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.8166903 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.816267378 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.816582804 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.813677724 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816042418 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.818196807 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.816323968 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.814538326 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.815748365 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.814953173 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.816335073 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815347359 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.815390481 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.815956871 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.816803025 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818715034 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.818434542 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.820168128 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.814922976 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.815331489 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.816460504 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.819483186 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.81921713 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.816193502 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.818330503 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.818618364 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.824431786 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.815562268 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.817593009 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.818838127 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.818740627 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817030577 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.817170767 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.818523484 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.824954928 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.817776476 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.821292587 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.81755117 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817884182 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.816267968 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.819556404 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.818228611 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.818198909 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.818483987 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.824642883 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829581377 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825379734 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.817683966 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.819336094 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.819204185 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.821392449 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.822070015 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.817970365 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.816261067 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.819553204 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817407088 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.818858424 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.819464545 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.818553674 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.816327023 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.818465706 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.817333327 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.818846403 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817473441 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.819463816 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818371665 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.815367255 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.818198806 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.819022127 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.817479308 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.815253047 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.819657793 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.820009242 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.818319386 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.821460267 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.825613103 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.814964632 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.821273883 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.820245815 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.819373606 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.818861442 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.818503445 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823000982 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.82032277 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.825704899 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.820721828 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.821140162 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.825830494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.822211425 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.82058847 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.823028301 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.820515438 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.81769819 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.822523836 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.82491946 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.819984751 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.821898821 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.820684546 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.819076385 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.820523277 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.826036046 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.817056952 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.820355932 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.820486993 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.822257177 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.816525465 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.822533931 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.820394274 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.820221132 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.821806201 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.82147161 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.820790383 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.822584451 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.822823325 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.820429059 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.822078501 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.823384805 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.82870792 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.824982014 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.822284322 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.824514393 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.822756178 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.823812977 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.823096618 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.82230041 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.821796487 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.835815491 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.82896477 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827435444 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.823391623 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.821728361 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.830790056 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.821533528 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.826315759 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821657451 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.823011603 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.821291447 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.82323521 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.819043116 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823949279 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.822719975 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.824071614 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.825047513 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.823878506 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.823480658 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.823205294 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.822626368 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.821821302 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.82372213 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.822885429 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.821160293 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.824447122 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.823568089 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.824223111 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.821728286 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828567588 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823386672 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.824826284 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.82233546 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.824144488 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.821473496 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.823422667 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.823548755 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.825959161 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.832543393 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.825028844 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.832152662 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.822639226 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831778908 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.823310543 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.826967731 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.830702436 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.819631584 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.823695147 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.824588546 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.826607829 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.828755191 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.825651273 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.823430186 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.828491828 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.824831648 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.826007165 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.824964199 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.825772772 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823435112 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.825904772 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.832505424 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.827662852 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.827406857 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826911171 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.822285826 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.827418334 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.827072487 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.82631945 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828634066 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.827038314 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.826329676 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.829070977 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.82587502 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.82521894 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.826175871 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.824760933 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.823675133 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.827090158 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832566309 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.824880004 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82910857 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.822789495 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.838553953 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.827492648 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831096816 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.827481793 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.825498556 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.826827083 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.826374668 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.828072256 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.826593628 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.827288515 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.826407768 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.827307251 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.828074638 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.828428254 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.828039599 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.827390996 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.827512498 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.826650176 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833505723 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.847718555 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.827024131 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.830770992 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.825912424 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.827296177 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.831347056 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.826851387 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.825459245 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.827883639 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837574412 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.832087346 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.828440157 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.827456291 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82798537 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.834203557 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.826724682 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.828355402 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.829162275 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.827488269 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.831895174 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.82746221 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.832087544 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.828738364 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.829225832 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829870661 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.832618572 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.837000597 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.829384354 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.828526714 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.828667333 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.82985866 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.827696243 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.828351264 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.830304774 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.829462779 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.828764655 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.831693387 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833937111 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.833582545 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.829884129 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.829299731 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.829838855 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.829129433 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.828978495 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.830133194 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.830469579 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82969871 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.832374377 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.831282592 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.830905902 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.828190541 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.83019015 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.835845713 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.828973529 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.831937774 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.836044785 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828829318 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.826906832 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.829784399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830493808 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.830183749 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.830882216 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.837910812 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834587274 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.840119909 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.837922789 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.833645835 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.829654013 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.834987218 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.840019911 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.830774014 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.832223828 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.830543698 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.83181934 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.832972578 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.833167626 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832328785 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.835629192 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.831189076 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.832242163 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.841485384 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.833337936 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.832462681 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.832693466 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.834324253 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.832072829 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.829446971 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.833011077 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.829731529 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837046821 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.835309788 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.831596744 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.831989283 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.830744865 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.832224471 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.83520914 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831943139 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.834409631 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.829553135 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.833299834 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.832859843 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832613435 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.829709955 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.831255328 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.832009161 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.834282461 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.83961287 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.829555156 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.833133852 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.832732425 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.835174121 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834088967 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.836336922 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.829856251 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.830689791 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.833755194 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.834303076 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.834165855 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.837811655 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.832626368 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.8338086 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.833195935 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.83380769 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.837576265 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.842771465 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.840240081 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.830557428 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.834490941 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.835438896 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.838488741 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.836265319 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.83609081 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83485535 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.836059058 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.836614751 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.83369945 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.833195155 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.837102781 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.848997165 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.835972309 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.833778793 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.836044756 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.838249903 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.833748571 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.831458193 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.835729782 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.837249648 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.834738358 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.84029603 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.834444671 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.83912739 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.835309279 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.83499736 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.83736559 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.837560693 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.842501967 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.836357309 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.836362365 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.835617967 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.837538016 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.848915147 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.837194019 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843039237 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.861253103 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.836350119 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.836100319 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.838187822 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836462143 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.835720002 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.837003178 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.837854057 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.834199385 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.837775015 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.837219477 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.835921635 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.84095848 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.837551184 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.835249687 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.837134519 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.837278884 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.837525767 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.834110689 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.838202792 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.83543272 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.837232553 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.837406083 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.837553538 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.835980214 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.852187357 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.844273893 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.83719823 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.838517601 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.833618099 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.840301745 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.841805264 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.845492642 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.842483336 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.838210076 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.837596718 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.838918358 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.837020848 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.833861206 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.837765181 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.838210835 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.836865869 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.83793426 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.850132714 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844936774 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.842370676 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.837828883 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.841432858 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.836898193 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.840577464 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.837847922 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.838470698 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.84002432 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.838729851 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.842185417 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.836503058 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.838601362 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.840357217 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.845214831 seconds)
  done (took 1089.741999197 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.834687363 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834956649 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837024138 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.835843935 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.835870903 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.836795548 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.835771968 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.83665733 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.835699904 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.841193925 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.835403199 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.836005686 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.836648322 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.837006582 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.838944666 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834991486 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83718572 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.836228494 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.837365458 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.837596264 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840764243 seconds)
  done (took 40.333058678 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.83965575 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.837108968 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.839521614 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.842386598 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836920054 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.840058596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.837939194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839132476 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.839450469 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.839013393 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.841749371 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840615865 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.837475218 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.838553275 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842607982 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.840572314 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.841924973 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.837529286 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.841970019 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.837893225 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843372521 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.836686246 seconds)
  done (took 42.235422975 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.842106275 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.842082589 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.841926679 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.838101171 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.841667434 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.83981257 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.841515526 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.8397112 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.84488187 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.842609525 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.840984486 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.841693022 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.847368184 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.850176681 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.845501249 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.842475775 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.985743111 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.843953092 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.846797436 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.842716776 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.839719658 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.846256279 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.838876889 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.840985509 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.844818809 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.84448181 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.843551692 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.843403672 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.845073632 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.848071359 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.846921878 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.844055058 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.844621532 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.847082867 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.842992046 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.845244478 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.846452459 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.846671098 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.841096705 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.843528175 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.853722555 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.861448578 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.844475692 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.84861082 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.843463377 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.845458689 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.844131613 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.85118754 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.840292253 seconds)
  done (took 92.283601239 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.843178657 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.845610782 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.842067583 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.843882591 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.84472525 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.843511809 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.846134719 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.844481864 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.842048982 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.842168091 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.845456601 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.841794621 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.843821135 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.844889427 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.846605942 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.840664616 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.843020712 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.844076279 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.842364626 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.842698626 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.842769265 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.845091906 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.844748058 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.84463259 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.845446034 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.843852723 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.842522002 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.844846364 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.844154311 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.843388688 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.846680416 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.847434411 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.846213938 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.843817206 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.842456726 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.84598695 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.846539863 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.843596585 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.846449433 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.84520506 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.846635783 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.845494603 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.846049411 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.84608395 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.845245177 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.844142544 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84242216 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.844609112 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.843695196 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.846409203 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.848860919 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.843412533 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.847088848 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.844249157 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.846511208 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.848087391 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.843952628 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.843392888 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.845460198 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.844619363 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.843240346 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.847938773 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.844093005 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.848053756 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.847723922 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.845658338 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.845925206 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.849445549 seconds)
  done (took 127.215637508 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849382436 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.847614943 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849307163 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84702582 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.847678051 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.84678787 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.84869682 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.848302899 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.84869768 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.849103446 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.848820704 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.847349398 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.850284605 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.850576729 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.849501789 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.8478153 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.84817683 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.848110244 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.849072724 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.850330652 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.848914754 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.848042109 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.848511031 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.849231009 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.850381237 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.849666489 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.853715291 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.84928557 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.848504447 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.849915397 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.850165745 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.849385055 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.849907572 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.848970125 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.849315403 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.850112572 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.85036772 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.849538177 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.848870265 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.849919697 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.85018977 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.850420586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.848727001 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.849435858 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.849290955 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.850629351 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.850924223 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.849843431 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.849788462 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.852211218 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.849441754 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.850058685 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.849987148 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.850688099 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.849397453 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.848530395 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.852716219 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.849922838 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.849100465 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.848802055 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.850262746 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.849776961 seconds)
  done (took 116.437516208 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.850375881 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.850069782 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.848407653 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.847012958 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.849210283 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.848651002 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.851088012 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.849954661 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.849536863 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.851353474 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.853001261 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84881161 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850421154 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.849972846 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.848508776 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850226823 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.849524202 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.850373777 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850593883 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.848625597 seconds)
  done (took 38.769412689 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.848431083 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.850464873 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.849408442 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.849455998 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.851060037 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.851516796 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.850545347 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850374679 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.848740834 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.850662438 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.852460283 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.85085871 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848766076 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849307752 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850806604 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.849202295 seconds)
  done (took 31.375580396 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.850411679 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.851357906 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.8533767 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.852179789 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.850194644 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.849799275 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.852284827 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.850265379 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.849294822 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.85324892 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.853446055 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.854081129 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.85188943 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.852652789 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.848891622 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.854439826 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.849126708 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.851059552 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.854961498 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.855240678 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.853528611 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.850492884 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.852960585 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.854957211 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.852014143 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.851729189 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.850402792 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.851771578 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.850620758 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.853793514 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.850413915 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.853346548 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.851089015 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.850087966 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.855303898 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.849313411 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.852435881 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.855459126 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.854726087 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.853170835 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.854133599 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.852492223 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.854364774 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.854001017 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.854105943 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.85340726 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.851930374 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.852550364 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.849620009 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.852103635 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.855576064 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.855322675 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.853874871 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.856650816 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.855852834 seconds)
  done (took 103.667867405 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.854992349 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.855080859 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.851677059 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.854999455 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.854802433 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.851576457 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.855107164 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.852200101 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.853771509 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.856700754 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.853110179 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857480522 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852474561 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.855555188 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853480431 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.856118562 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.853103886 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.853667292 seconds)
  done (took 35.152299654 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.853064409 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.853242818 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.856630806 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.853803058 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.854169857 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.857631015 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.852574498 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.856202097 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855944735 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.85541001 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855882052 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.856620703 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.858332132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.857284722 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.85436636 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.855009696 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.858287628 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.857278113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.854335217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853786514 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.857497701 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.855703541 seconds)
  done (took 42.603123512 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.854566354 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.856681261 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.871718856 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.878363764 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.874998661 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.888296899 seconds)
  done (took 13.00313592 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856602189 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858717837 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.854692465 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858020008 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858180305 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855488921 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855018244 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857789595 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857983638 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855075374 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856422665 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857341145 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858576465 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857658296 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858347565 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858670584 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854954735 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856467044 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858520919 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860877204 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855544518 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858525123 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856762167 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857553761 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856541721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85639516 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859175308 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857647597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857676973 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859886016 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860870203 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857919806 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859492709 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858588873 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861989035 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860338253 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858233601 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.861153548 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859292197 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856646618 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86047006 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860038363 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860257626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858309594 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860528138 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858734921 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859388954 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857537812 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857197908 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860420676 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861544926 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857484774 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861233571 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861566176 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.860501307 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861154672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859234319 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859572693 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.860416784 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858291083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857762371 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.862869623 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857877367 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858778503 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.86095214 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859662086 seconds)
  done (took 124.448624356 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856651917 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858282234 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859119308 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858784141 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858728869 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858443896 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859194103 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859144132 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859881837 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858511624 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864060104 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859236179 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859119583 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860144889 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859059497 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860167999 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859568846 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860517367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860203252 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.863358106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.860117206 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861978335 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859734028 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860197739 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.861643368 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861516918 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.860040904 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859512374 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860650172 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859791019 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.859758005 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858976226 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.859775709 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.859022837 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859554626 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860071345 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86001336 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.860366609 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860968936 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864735029 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860569051 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864302824 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.862596372 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860118542 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.862506176 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.859949468 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861286177 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.861010621 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.861775111 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861207034 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.862251327 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.860249921 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.861884289 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.863095241 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861226223 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.862552852 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862935936 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861530384 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.862134797 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864882235 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86191697 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861719718 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.864304537 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.861139196 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863855361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.862109293 seconds)
  done (took 124.599691328 seconds)
done (took 2546.166223575 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.854058393 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.87221169 seconds)
  done (took 15.51046187 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.02948531 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.978155688 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.863144173 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.873274107 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.862486014 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.879027213 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.882152857 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.863001639 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.863832608 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.864774023 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.864023939 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.051073078 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.872466525 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.861153491 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.862930558 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.955008907 seconds)
  done (took 52.218043156 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.86778163 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.868042928 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.877979824 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.871813997 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.867587314 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.879216965 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.901526984 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.871654897 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.900047912 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.879293843 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.933862864 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.875221764 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.864777305 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.915462182 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.878606622 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.883930283 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.963375607 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.939203693 seconds)
  done (took 35.826093603 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.940593148 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.864709721 seconds)
  done (took 10.601307556 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.869027513 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.889477834 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.862028496 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.884490323 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.873069382 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.863035372 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.866002967 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.864455016 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.884597924 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.866042655 seconds)
  done (took 70.51379927 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.874780857 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.8713334 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.869081864 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.868485955 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.861817089 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.863471881 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.86639617 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.863522115 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.543777875 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.900279428 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.87231853 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.875030056 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.868575102 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.870220902 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.86563237 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.892142161 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.012895068 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.865330466 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.867170092 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.877969351 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.867977217 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.952966638 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.881888125 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.870227149 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.897757706 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.545279602 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.87565703 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.873542182 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.013111385 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.866375131 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.870251412 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.870398197 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.871684122 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.24442703 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.143630957 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.867129618 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.87811695 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.879677581 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.86730998 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.026842907 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.871875621 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.876744357 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.835073617 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.119603857 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.980806599 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.915393807 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.253643538 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.871505519 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.872800323 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.898136835 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.871821312 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.872125119 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.884280047 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.400365991 seconds)
  done (took 132.733657818 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.863761306 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.137427429 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020362322 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.865163801 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.153425215 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070323601 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.864913898 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915028132 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.865972633 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.095258354 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.030475395 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973702963 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.865349647 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.864238275 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866693204 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.862093114 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030378375 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.939542196 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870358273 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.862400708 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898170608 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.111615502 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.993377507 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.869865071 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.88814789 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081134973 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.99119084 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.974004485 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.150798999 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.865632783 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930425828 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.867972633 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.868330487 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.865626517 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.023637629 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963051484 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954827118 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.868419946 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865356373 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.865201742 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.541960862 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062008737 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.966579124 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.012081181 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.119658656 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.072389575 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.659592436 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.86467832 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.617214861 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029728184 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.102240879 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.099433814 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.991973975 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.871516198 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.13641466 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866277114 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.865314556 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.102443813 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.0940242 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.970393187 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871166721 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.866102658 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.866378249 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.113886805 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.869214001 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.963621144 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869633637 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.86795969 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.964908897 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973839321 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.09872241 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.083269008 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.905417536 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.183260347 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.339813468 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.117528198 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.936698565 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10382374 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.871219352 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867595358 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954382619 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.719697177 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.027404106 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.119966383 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.129602217 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.90851226 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.607050503 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.869141924 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.095782577 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.092582695 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.126310194 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.112813953 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.019133871 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.059001396 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.868436237 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.867641521 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.150239157 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.009143818 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.872290356 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.235319792 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105161733 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.448547056 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89962277 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.181253513 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004457631 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.871104743 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.514146052 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870695695 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.099007048 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.913593717 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.871136134 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.870500281 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.091324155 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.861487926 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868083141 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.706697973 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.933957677 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.871736909 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106739125 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.873337704 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.138200973 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872747674 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.108811784 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.285485014 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.905392955 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.044078647 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113514927 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.875042758 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.137927603 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.120017804 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988868032 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.143791885 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.798149018 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.870287658 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.161975365 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.873562224 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.86995275 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.045446039 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.871714802 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.0498988 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.873120341 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159606038 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897449137 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027177242 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873548676 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.132705641 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908938524 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923564747 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.876784165 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.999105996 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87290552 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.757898155 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.02803861 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873615516 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.873552816 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.429671957 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.870868044 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.029444533 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.104509898 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898451365 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946756593 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.546618078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.870738785 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960153496 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.899461028 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.221725827 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.872414072 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.030448813 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.875052764 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.4160484 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.872548517 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.117981941 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.119375758 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.874810252 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.871070273 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.797407918 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.873232131 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.87390278 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.037231329 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.699082679 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87257363 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.078084295 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875934898 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004611166 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.876771777 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.963301412 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.22814806 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871068504 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.871922841 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.873637894 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.875332449 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.87522664 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.081159194 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.905560202 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.411595928 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.012282066 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.145784269 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.194536975 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.132808106 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.922591894 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.876090599 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121566803 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.876450712 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.937994446 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.877070803 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896905989 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110858082 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87884608 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087740412 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.162160541 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.802720637 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92395846 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.876540891 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875996418 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.796943507 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.030258641 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967093087 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.875762244 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.874874225 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.992884218 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.999281879 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.090912973 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.876207908 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.01810406 seconds)
  done (took 903.666644288 seconds)
done (took 1222.856608473 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.873779629 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875569498 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.86363268 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.880988864 seconds)
  done (took 29.29684193 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.888043064 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.888710127 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.886026769 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.88345006 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.887266388 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.883963297 seconds)
  done (took 13.125005764 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.901308655 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.88000373 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.87987578 seconds)
  done (took 21.468966391 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.952543219 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.283301998 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.991132817 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.322528104 seconds)
  done (took 10.358224827 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.888061622 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.88600587 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.886087884 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.888999669 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.890295955 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.889226162 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.886306867 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.887151058 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.890230612 seconds)
  done (took 18.802231458 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.268655553 seconds)
done (took 99.123338118 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.120076012 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.908535459 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.168156869 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.357955936 seconds)
    (5/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.039193344 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.523330374 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.865191272 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.015018814 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.867623469 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.264753833 seconds)
    (11/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.155923716 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.922350018 seconds)
    (13/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.008318921 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.906639658 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.783998927 seconds)
    (16/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.154984903 seconds)
    (17/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.009892773 seconds)
    (18/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.865643629 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.161800841 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.07552308 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.176944869 seconds)
    (22/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.135731348 seconds)
    (23/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.282288637 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.267215044 seconds)
    (25/309) benchmarking ("sort", Float32, false)...
    done (took 5.618038445 seconds)
    (26/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.987219992 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.983017721 seconds)
    (28/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.865872776 seconds)
    (29/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.914921321 seconds)
    (30/309) benchmarking ("sort", Int8, false)...
    done (took 4.880324084 seconds)
    (31/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.094781106 seconds)
    (32/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.480606512 seconds)
    (33/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.011697218 seconds)
    (34/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.209409865 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.868276563 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.994559799 seconds)
    (37/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.981873137 seconds)
    (38/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.880772516 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.026765615 seconds)
    (40/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.472838927 seconds)
    (41/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.889633214 seconds)
    (42/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.973464627 seconds)
    (43/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.900500128 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.949068239 seconds)
    (45/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.975793345 seconds)
    (46/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.38139283 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.996065146 seconds)
    (48/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.951757598 seconds)
    (49/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.2375138 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.145992631 seconds)
    (51/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.099011289 seconds)
    (52/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.708054271 seconds)
    (53/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.06823576 seconds)
    (54/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.971750643 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.25161237 seconds)
    (56/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.074973034 seconds)
    (57/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.870461076 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.388144067 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.893652414 seconds)
    (60/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.804362624 seconds)
    (61/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.868932986 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.95401531 seconds)
    (63/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.020895465 seconds)
    (64/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.900472832 seconds)
    (65/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.210053192 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.870006816 seconds)
    (67/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.019669992 seconds)
    (68/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.910813818 seconds)
    (69/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.050560199 seconds)
    (70/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.394832161 seconds)
    (71/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.971975914 seconds)
    (72/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.966777615 seconds)
    (73/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.979753833 seconds)
    (74/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.811411774 seconds)
    (75/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.908111688 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.626598268 seconds)
    (77/309) benchmarking ("sort", Float64, false)...
    done (took 5.636979295 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.711814885 seconds)
    (79/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.947560855 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.946941202 seconds)
    (81/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.883325135 seconds)
    (82/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.986272509 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.18391637 seconds)
    (84/309) benchmarking ("sort", Int64, false)...
    done (took 5.575306105 seconds)
    (85/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.82926986 seconds)
    (86/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.021310658 seconds)
    (87/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.266142026 seconds)
    (88/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.90967742 seconds)
    (89/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.991254872 seconds)
    (90/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.908419551 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.302146619 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.065149468 seconds)
    (93/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.446870706 seconds)
    (94/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.887038773 seconds)
    (95/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.94878824 seconds)
    (96/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.01448735 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.095723472 seconds)
    (98/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.136776136 seconds)
    (99/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.164475308 seconds)
    (100/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.230081063 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.987704323 seconds)
    (102/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.884006113 seconds)
    (103/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.996205413 seconds)
    (104/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.559615633 seconds)
    (105/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.025447593 seconds)
    (106/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.883832328 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.94067485 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.193019178 seconds)
    (109/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.887468162 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.890730344 seconds)
    (111/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.916313328 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.59184412 seconds)
    (113/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.09667483 seconds)
    (114/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.075675798 seconds)
    (115/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.891648109 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.597378605 seconds)
    (117/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.078364708 seconds)
    (118/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.891227012 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.081718707 seconds)
    (120/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.20155574 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.891395729 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.890018038 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.872268686 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.342309991 seconds)
    (125/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.106223748 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.907714983 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 2.317463851 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.907472039 seconds)
    (129/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.031771604 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.678842439 seconds)
    (131/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.147474916 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.986740291 seconds)
    (133/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.052958837 seconds)
    (134/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.874753031 seconds)
    (135/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.456358894 seconds)
    (136/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.263899821 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.125707039 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.962991589 seconds)
    (139/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.132629115 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.114195726 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.266541836 seconds)
    (142/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.050934334 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.157363155 seconds)
    (144/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.469316476 seconds)
    (145/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.965606165 seconds)
    (146/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.079570199 seconds)
    (147/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.434599185 seconds)
    (148/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.801283524 seconds)
    (149/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.390478327 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.001915684 seconds)
    (151/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.885604918 seconds)
    (152/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.916166472 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.573175338 seconds)
    (154/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.302142764 seconds)
    (155/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.406657306 seconds)
    (156/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.893431783 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.174092355 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.915511354 seconds)
    (159/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.370023955 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.895208067 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.149790428 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.875934821 seconds)
    (163/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.075711516 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.977759702 seconds)
    (165/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.460943698 seconds)
    (166/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.197481135 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.35596207 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.542643196 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.915636878 seconds)
    (170/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.905943992 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.015090989 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.444951458 seconds)
    (173/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.919421274 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.001212944 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.974028442 seconds)
    (176/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.957722291 seconds)
    (177/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.328090594 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.905565391 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.87951187 seconds)
    (180/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.458587861 seconds)
    (181/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.07532941 seconds)
    (182/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.038197987 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.216305599 seconds)
    (184/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.014305291 seconds)
    (185/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.86519332 seconds)
    (186/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.06347344 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.8920101 seconds)
    (188/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.058558336 seconds)
    (189/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.900459083 seconds)
    (190/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.206573987 seconds)
    (191/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.880923846 seconds)
    (192/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.815509594 seconds)
    (193/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.153980578 seconds)
    (194/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.076876077 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.922863401 seconds)
    (196/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.413820769 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.031894664 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.136961899 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.925183417 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.99437353 seconds)
    (201/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.907179643 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.892302631 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.194717695 seconds)
    (204/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.225109813 seconds)
    (205/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.799234723 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.668603752 seconds)
    (207/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.9024791 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.193583624 seconds)
    (209/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.028930928 seconds)
    (210/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.244864167 seconds)
    (211/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.0420924 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.94965639 seconds)
    (213/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.270292916 seconds)
    (214/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.040196922 seconds)
    (215/309) benchmarking ("sort", BigInt, false)...
    done (took 6.898267007 seconds)
    (216/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.931568218 seconds)
    (217/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.104293663 seconds)
    (218/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.897745193 seconds)
    (219/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.239353112 seconds)
    (220/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.978549697 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.53159404 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.035682215 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.783100844 seconds)
    (224/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.693234289 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.097806388 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.83293834 seconds)
    (227/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.001923833 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.879026263 seconds)
    (229/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.356239501 seconds)
    (230/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.906499569 seconds)
    (231/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.058583218 seconds)
    (232/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 3.735800837 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.915105405 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.998263197 seconds)
    (235/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.454514673 seconds)
    (236/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.460408175 seconds)
    (237/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.390317002 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.945573439 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.96885586 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.279175052 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.099469982 seconds)
    (242/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.25151177 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.896519107 seconds)
    (244/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.898854203 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.331381999 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.235637061 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.275813998 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.262533 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.019042068 seconds)
    (250/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.209166997 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.894518974 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.947791275 seconds)
    (253/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.898510012 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.028514166 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.73821214 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.978109889 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.281597739 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.201026605 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.119608601 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.824043062 seconds)
    (261/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.589703858 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.375477231 seconds)
    (263/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.106043205 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.212557879 seconds)
    (265/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.046193717 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.20661747 seconds)
    (267/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.924343585 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.912132318 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.881575992 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.924675817 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.261026185 seconds)
    (272/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.030104694 seconds)
    (273/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.912283154 seconds)
    (274/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.894145339 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.947418846 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.231911852 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.857063586 seconds)
    (278/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.935641755 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.999006418 seconds)
    (280/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.972444363 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.22081343 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.898849646 seconds)
    (283/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.11916425 seconds)
    (284/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.898125314 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.187261011 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.921842815 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.990343534 seconds)
    (288/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.978128979 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.976968946 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.976434366 seconds)
    (291/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.896392068 seconds)
    (292/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 3.341873233 seconds)
    (293/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.368534873 seconds)
    (294/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.038617938 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.016590546 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.704190463 seconds)
    (297/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.069096992 seconds)
    (298/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.900773118 seconds)
    (299/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.287414725 seconds)
    (300/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.247361574 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.93614396 seconds)
    (302/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.384741762 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.021862384 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.986131939 seconds)
    (305/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.976454906 seconds)
    (306/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.881094445 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.943140221 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.576100651 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.627722215 seconds)
  done (took 1025.660191644 seconds)
done (took 1027.536248213 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.926421014 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922840608 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.904789397 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.926075328 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.019520138 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.933376193 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.915052745 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.907521647 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.953907259 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.9544474 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.907074443 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.932059777 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.909369977 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.909633619 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.90529931 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922795603 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.219956674 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.931240831 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.926606101 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.915321267 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.924944703 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.907033756 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.954750587 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.932990283 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.908648787 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.908410968 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.912308268 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.927873362 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.02172422 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.913819857 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.907867603 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.920662258 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.220845149 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.929072841 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.901250949 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.928764602 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.920085973 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.91543148 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.909915278 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.942344786 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.355821086 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.916005088 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.912022677 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.907252368 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.908129178 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.91072103 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.911033622 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.912585003 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.923554074 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.923469031 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.351425874 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.930421811 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.913077387 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.908397363 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.919261193 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.910713009 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.91074574 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.926157348 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.929475322 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.9278045 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.208879947 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.934209746 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.91013541 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.926988565 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.918603817 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.387456021 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.90970056 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.911752562 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.357841436 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.919657945 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.388493558 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.924085713 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.908603871 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.925916001 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.943020274 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.22195197 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.92531753 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.907492383 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.919117987 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.911065735 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.919854404 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.92400054 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.914541244 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.910304396 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92559451 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.936590567 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.919647746 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.912745736 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.917787332 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.932723171 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.920972706 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.923828913 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.912479172 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.906053113 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.921285363 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.913242745 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.915011888 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.915415435 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.914696525 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.920079822 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.354329813 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.934651641 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.907006473 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.906807777 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.909386269 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.928038699 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.354998043 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.91900479 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.932187339 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.957512009 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.912536422 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.211801425 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.939013146 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.928283692 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.919247708 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.914446406 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.905555642 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.211319597 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.376391511 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.934331019 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.911955112 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.912209768 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.928946351 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.912771482 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.907309057 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.225346407 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.934917525 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.926886155 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.034586693 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.921390993 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.947826614 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.913337302 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.915028376 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.943733565 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.931468304 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.947838402 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.915870355 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.930035186 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.930716534 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.909177913 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.925876016 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.923584395 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.914888943 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.917408736 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.906522802 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.941086661 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.927376825 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.932746431 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.935176409 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.036915295 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.911668858 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.215475871 seconds)
done (took 300.176192027 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.987280393 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.906590054 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.010956384 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.911747307 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.994961622 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.998544692 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.907628707 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.909314344 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.90872819 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.286863625 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.90903178 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.909641931 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.906066619 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.90861741 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.996268853 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.912065521 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.908528661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.252785503 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.91312257 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.985641306 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.908681185 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.910284415 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.911908138 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.284553719 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.912884715 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.910630011 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.987089858 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.912367786 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.250588838 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.912992037 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.91448073 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.253529276 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.005300399 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.930968757 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.923887435 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.919297406 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.998055116 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.916189002 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.995457603 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.995747976 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.01416539 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.953532829 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.91387397 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.909018503 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.917726244 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.914559041 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.910338227 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.940799977 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.906140153 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.911695561 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.250549667 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.923421147 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.91684808 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.912758262 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.911556828 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.94692821 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.912776139 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.918728185 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.008861953 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.916199815 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.978192231 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.287226517 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.289580326 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.915802397 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.911565257 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.916228529 seconds)
  done (took 187.222350575 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.982751261 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.990115761 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.982994998 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.91776799 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.966481498 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.981501894 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.918235622 seconds)
  done (took 15.577465069 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.924812575 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.916361753 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.96468561 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.964830154 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.915759776 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.072100821 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.914340729 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.926180247 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.912542277 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.9680169 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.916399775 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.915646275 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.922784614 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.912260353 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.967701946 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.927184626 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.031855713 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.916821878 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.918585421 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.069820597 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913047103 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.922201192 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.952032702 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.927041704 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.916133512 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.922665503 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.500938663 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915892078 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.914315542 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.915375979 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.912840707 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.957861673 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.916449878 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.908688911 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.914182045 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.032265524 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.917772838 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.913837805 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.916640362 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.917455423 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.917597328 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.916578395 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.916506587 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.913678147 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.916975711 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.940764666 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.917397835 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.918017226 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.917354556 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.917831431 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.951958962 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.917153251 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.914385609 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.915165724 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.973629057 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.926086905 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.918458065 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.914496976 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.918213093 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.914620294 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.071995607 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.965994691 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.919523238 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.966814787 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.919016957 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.917937156 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.918872071 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.918620497 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.01308195 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.918617624 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.970345437 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.915565044 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.077380915 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.942464807 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.919672851 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.921518653 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.923201418 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920538499 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.913390301 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.92696315 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.917471824 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.91968544 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.925493342 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.916564373 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.915852121 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.031652697 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.026879737 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.91770825 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.932830405 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.92657152 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.916291555 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.956351281 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.919190239 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.915994997 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.974949757 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.036892597 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.974875486 seconds)
  done (took 210.470798061 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.926053997 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.926702535 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.921443259 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.937017113 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.922509062 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.921536656 seconds)
  done (took 13.3960776 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.921653467 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.919493557 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.92060825 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.920582186 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.920146442 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.921112062 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.920070567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.922463074 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.923270508 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.921926787 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.920878587 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.921657495 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.921704057 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.920627098 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.921713908 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.920972841 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.921210544 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.919040862 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.92144577 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921075587 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.081880062 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.920794212 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.921538679 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.922665662 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.92476991 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.921063759 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.929856505 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.921149143 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.920984546 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.929537211 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.924515056 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.922017094 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.921831421 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.926358203 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.926154005 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.922919695 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.924543785 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.922788479 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.918929024 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.923087524 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.924751324 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.922231603 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.921370151 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.924241354 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.922996357 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.925115323 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.926675853 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.929913978 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.923191544 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.923324378 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.923966998 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.922510868 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.922918008 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.923510776 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.924886571 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.927798058 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.926136409 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.923466363 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.922597029 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.92395236 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.921629993 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.92363011 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.9247205 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.927068678 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.930174418 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.924819702 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.924203505 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.926300023 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.923670293 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.923191163 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.924467431 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.921244928 seconds)
  done (took 141.473561424 seconds)
done (took 569.986003037 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.996903933 seconds)
  done (took 8.841697772 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.91996653 seconds)
  done (took 8.864092324 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.345030504 seconds)
  done (took 10.191311914 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.930296719 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.934016559 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.92023049 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.921797984 seconds)
  done (took 29.559974614 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.055091732 seconds)
  done (took 8.901398478 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.93138247 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.919349643 seconds)
  done (took 15.727883004 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.937348346 seconds)
  done (took 8.782719177 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.036078695 seconds)
  done (took 8.886066603 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.939155508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.956104934 seconds)
  done (took 15.753216442 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.907007232 seconds)
  done (took 8.754048665 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.686148513 seconds)
  done (took 11.538559575 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.932532725 seconds)
  done (took 8.789277933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.917367148 seconds)
  done (took 8.764730173 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.123937781 seconds)
  done (took 9.96939036 seconds)
done (took 165.1688215 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.921725056 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.923811715 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.917625879 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.92109825 seconds)
  done (took 29.532198752 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.959427154 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.961749092 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.961178838 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.970458626 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.964366093 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.961274954 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.952501372 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.952922651 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.971961841 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.963605295 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.961307864 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.961611142 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.960155261 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.950857666 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.961352573 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.961358598 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.97039102 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.960628253 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.950908883 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.965152666 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.926335825 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.9707923 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.962212385 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.926957323 seconds)
  done (took 48.856390645 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.12624814 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.997504211 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.080619289 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.978577646 seconds)
  done (took 10.029691303 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.979043558 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.980076482 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.991673206 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.030636499 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.060498183 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.990935972 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.949103857 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.948648117 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.935921092 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.98077762 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.057256103 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.975141295 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.064772208 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.927670305 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.114566129 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.928651474 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.92820079 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.979319507 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.030556149 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.044774885 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.929951591 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.979232617 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.983667713 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.975997027 seconds)
  done (took 49.615659269 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.927434183 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.934784773 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.933910257 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.927701072 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.928302009 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.930180903 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.934636971 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.927908632 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.949006106 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.929242243 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.929564478 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.928141642 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.927864963 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.927774704 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.92778849 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.941629008 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.941482564 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.927848728 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.932067082 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.9342436 seconds)
  done (took 40.491133811 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.924083026 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.777364618 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.274808557 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.178430115 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.922213572 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.924429085 seconds)
  done (took 31.851042882 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.940822274 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.93424835 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.930771905 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.986129183 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.065829859 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.935888209 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.931277795 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.939987095 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.974509439 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.992552103 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.951278656 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.959280784 seconds)
  done (took 25.394203347 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.927138278 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.927270272 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.92733881 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.941318033 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.940936971 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.9361761 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.937958977 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.926267765 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.943104389 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.948030495 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.937339134 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.942457056 seconds)
  done (took 45.088910983 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014320193 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.814038508 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.985690609 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.646079902 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398937361 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135054143 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.455763395 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.265380046 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.930227534 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19936034 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.133440652 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030297418 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.179050378 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926004902 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.933881186 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.426936128 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224465379 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158277878 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954696002 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.744002369 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976025741 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.362308664 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.806674045 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.982242892 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137552681 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.059138707 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.186378852 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.889956355 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063986497 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.964541688 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938684031 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928080286 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201520772 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308169529 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030569308 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937072172 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.578906667 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.647998145 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.932041218 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.745984157 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.820961105 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.058279504 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935455253 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928984567 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863037386 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363339525 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297614907 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.933520454 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.64049118 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.929983073 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939253899 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015993443 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.933085612 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.744116989 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881393957 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.207332853 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.926889209 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936101913 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49492173 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.082086428 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391669117 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.894763281 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.122769264 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747818074 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.329284753 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.080694689 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.931611173 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933417946 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864766032 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.745040347 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.981557876 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.074205562 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.948578763 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.582422879 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.236754859 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.203944624 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.869720767 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218608425 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.630897408 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.893470811 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157384019 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.886666481 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863745612 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.787967638 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.866153825 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201027526 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969441811 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.576733742 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970294673 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.269067355 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.943911608 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950262823 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938408167 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.155388941 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.657983854 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930096698 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.913479259 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085003787 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955255443 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.273774853 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869411779 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.936366266 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187204712 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.144577296 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.074766277 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.448432669 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092908002 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984945028 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.947022911 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.762735714 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.972588093 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.208367795 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990264885 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.092793772 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989705558 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.888214154 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.243592649 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.004914954 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.037277397 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.173705872 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059289419 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.265969893 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.224219703 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998238966 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938189136 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.933107941 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.758890232 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.485449357 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.199820217 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.934832277 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346631036 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974181511 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.933399857 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868487719 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.526395698 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.186198206 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.903759548 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.156722233 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.803143901 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237250437 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867002122 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079692554 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.04627842 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.155690113 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.601929839 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.01953543 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190041407 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.31639645 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.096244397 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973765768 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952510572 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030214198 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959590978 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.257689915 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218897371 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.93950384 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.938390975 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.779250555 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930706309 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941972779 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.941022444 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.730435724 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218664168 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.959110518 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.934693275 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.823311263 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.949985718 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000858754 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942236869 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944744514 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.495421765 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.685016186 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.945121733 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.579202502 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15942754 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945075765 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.761170857 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047672353 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.018367767 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.213053998 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994725689 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.869676676 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.647755101 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.628846832 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937448553 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.872438073 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.937971935 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946024637 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947170285 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.314289181 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.218119326 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.982561402 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.749592264 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.978980888 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947182381 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.942251859 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936466796 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.474540439 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.108366481 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407688667 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97611099 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07473675 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.950280106 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.871206233 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.939631232 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.942817881 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.938428247 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.895106168 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989667728 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.762891517 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315432781 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.195190584 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.62977829 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.954194972 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.843144023 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.996891108 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.965821779 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.773333224 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926823356 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.962686987 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066473293 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.948530685 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.768434064 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.632564321 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502836142 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251467443 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247668159 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378929657 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.345145785 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.233293721 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.279729183 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.175195326 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.467761148 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.997853045 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.284907632 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885740138 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.024393455 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.601841816 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.298516915 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953839478 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166273955 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332639682 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.848560342 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087393017 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150433353 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974955455 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.775173201 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893428704 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.14424729 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079230301 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.830059193 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147100182 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.275340235 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.780490796 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.037256854 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.938453296 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.658244076 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023186041 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.652834054 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302597572 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39037506 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.043561337 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416045638 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.949887324 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.387551484 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296759489 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.170506559 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.05456051 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.878387723 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.952995468 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.95221176 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.940661846 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.932684776 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.804045124 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.19485067 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95188221 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178296332 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.114284254 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23190467 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.845754881 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.94914266 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942337541 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25356428 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.650925873 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10574164 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.279763699 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.462707843 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946284952 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.876654733 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876607327 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.634761833 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.94643992 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.918975776 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168649146 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.126951909 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929745714 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347400756 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.18092807 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.197990889 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.957282646 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.218952428 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.215734925 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.678694825 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972173827 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.042543653 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.792096954 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.058837148 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.211856006 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178079606 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740875592 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175126938 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.017167698 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.758341968 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.941072474 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156092818 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.212239839 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.011452372 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176413202 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.664942218 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.942552371 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378878961 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998745456 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.027528674 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.098846324 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.134302852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952962328 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027390552 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953162844 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.955899896 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.953175276 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989658024 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.026670905 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.074252247 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.957228589 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032373418 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.112887607 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.475636849 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.949452446 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224974361 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306902074 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.270242221 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002337068 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944290272 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943672644 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879759004 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080401908 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38977178 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.216436499 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.074811466 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.245733228 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967931908 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.794095316 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229019368 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180135494 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219078234 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.838992768 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962487089 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.956405977 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.212529496 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95674666 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.155446156 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174556668 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260092325 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414663259 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.083005326 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308904641 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219669509 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.318776371 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944904433 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.534366397 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.95285635 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.773690235 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.985921811 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020341839 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21679041 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957630346 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327021586 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968328525 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.147174086 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.462539152 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775603791 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.234708998 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.938721999 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010278907 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225211588 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.334739843 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259250046 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017770347 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957580055 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.652265799 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08462429 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.803524351 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.217842119 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.948877463 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157421227 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.656479477 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957598259 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229165073 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254661867 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.94505261 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.800689305 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957658309 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.957138408 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.170679479 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216772203 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199869786 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956931109 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.952002191 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.762024228 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.227286746 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006948243 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.883257943 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.952296906 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047079763 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.196833453 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984446284 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.465459712 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.659698232 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245574496 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.867047292 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970438977 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391260579 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313771061 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278174739 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.490088699 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17717743 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.50966168 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.846398096 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24650893 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.954067282 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382705075 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249365005 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.951826773 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.48343673 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.983691115 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.223616946 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265784927 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.958140734 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874765067 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.917625225 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.172185295 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548844924 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.892533175 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.958028502 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.011318987 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.94835229 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.075819275 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.958384153 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.813042567 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797398429 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.689637252 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439551685 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.951960433 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.937856179 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.816377591 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.561910963 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976093537 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089825694 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952977746 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.659268722 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.238927269 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202782727 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.484594021 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.950872109 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.951072578 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948377154 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875937605 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.145844807 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.327591908 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247523963 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.321841904 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.981111957 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.952547549 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.164353252 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159935306 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029047191 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091661852 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349188943 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982249219 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.718362047 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.628572292 seconds)
  done (took 1720.108501058 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.970178212 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.961992555 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.991421882 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.031446398 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.005181237 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.018982956 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.981970237 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.027399453 seconds)
  done (took 57.864540309 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.951647135 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.15220299 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.961038829 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.952437571 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.961448506 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.951657016 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.123847599 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.959917613 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.960797537 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.962776791 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.953662064 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.967294738 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.267150731 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.973660063 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.96660759 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.93949737 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.961672203 seconds)
  done (took 75.865473934 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.955799616 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.163311809 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.995673695 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.979997092 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.899053929 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.970662477 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.93378542 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.01048972 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.956115527 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.168924948 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.289321093 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.966131261 seconds)
  done (took 91.169653323 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.962878727 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.960004572 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.959249275 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.959968524 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.959428017 seconds)
  done (took 11.684092048 seconds)
done (took 2239.425587177 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.200612587 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.181310447 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.191983348 seconds)
  done (took 6.253261937 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.108582929 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.153651153 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.274330804 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.280181361 seconds)
  done (took 10.699839093 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.252161617 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.34166793 seconds)
  done (took 6.474116825 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.361325691 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.970171039 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.359183131 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.957856417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.958187241 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.959050644 seconds)
  done (took 22.763104923 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.962235353 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.964329568 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.961609436 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.964804374 seconds)
  done (took 9.735290446 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.942916864 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.675204586 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.945087122 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.958860044 seconds)
  done (took 21.403660093 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.710063581 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.359398692 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.703596874 seconds)
  done (took 9.656284229 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.512488975 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.859871157 seconds)
  done (took 9.256078275 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.202829581 seconds)
  done (took 4.084202953 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.990358368 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.232419608 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.481956725 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.489491075 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.568858698 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.792037832 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.265701014 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.196659269 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.382238745 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.392680009 seconds)
  done (took 25.675378077 seconds)
done (took 141.773459001 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.337447283 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.965360058 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.162804494 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.306196953 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.182485693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.16189811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.172125433 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.290548056 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.805095926 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.803301953 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.306321433 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.178716456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.121523568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.197723898 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.131452609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.198262022 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.180170299 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.353049142 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.999317929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.196189275 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.180427152 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.934139888 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.147823985 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.94628781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.180936231 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.115038834 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.525739401 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.203478607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.153781219 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.53187685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.118054573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.356746719 seconds)
  done (took 174.326606726 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.709891188 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.960755777 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.959496909 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.959280827 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.372948128 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.961091321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.960138651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.959700704 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.233406914 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.194129233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.960188306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.363534267 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.962191011 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.96053671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.962508707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.960602783 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.369794794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.732442523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.961625493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.961184772 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.961588756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.179925358 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.962877817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.190471581 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.381678293 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.961229112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.916807117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.961073318 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961244098 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.946828014 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.970205568 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.962794794 seconds)
  done (took 210.708762834 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.951047644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.95982093 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.961946369 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.964103382 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.962181634 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.962832552 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.966774721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.962021474 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.726793098 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.713202221 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.961175803 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.961938353 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.971235511 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.962550252 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.972200164 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.962090938 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.969983816 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.974284642 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.968247485 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.975313338 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.975906651 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.718638195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.974317606 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.734814912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.97079174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.974977068 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.963186871 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.972530162 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.971318915 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.977072969 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.975368656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.963959723 seconds)
  done (took 223.879808642 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.167210842 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.970561876 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.970520014 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.918099784 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.971339876 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.970345549 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.908235323 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.161673306 seconds)
  done (took 19.947655276 seconds)
done (took 630.757888879 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.414100879 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.253806718 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.140990654 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.992641977 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.237793558 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.025687287 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.99044045 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.054360457 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.707104164 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.055698066 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.630250455 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.007513227 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.727269494 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.009228348 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.112461261 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.045683815 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.578954669 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.670611492 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.163285019 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.046410256 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.16080885 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.944617751 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.066422813 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.731180859 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.745553944 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.987272549 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.160480929 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.577053673 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.996959333 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.15554745 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.7215048 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.38182164 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.998084451 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.985524421 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.044798995 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.020683805 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.323693422 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.99636625 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.108318666 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.749077279 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.049238674 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.599070139 seconds)
  done (took 107.257106768 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.962661799 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.959607494 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.959528031 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.961219395 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.963664054 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.962259853 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.960965921 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.95960683 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.959571477 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.959362122 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.961085811 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.96286952 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.960835796 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.963066247 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.960922845 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.961692974 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.961997313 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.962768021 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.960926804 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.960552486 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.961242285 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.961505291 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.976018204 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.961682997 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.96333684 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.96234061 seconds)
  done (took 52.91231591 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.974272353 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.147212328 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.230354482 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.987809672 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.974258538 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.977814119 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.990187963 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.977353667 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.97659737 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.975738448 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.067917779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.980556017 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.9952104 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.231498303 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.988234194 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.974536099 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.975180655 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.974966185 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.155010801 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.988844083 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.99461699 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.977371482 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.994253786 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.987118862 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.976649975 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.975877591 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.979030018 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.454501451 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.981737134 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.066654308 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.017447787 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.999022231 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.401367088 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.24232258 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.026769442 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.984525797 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.97702853 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.070442021 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.97989608 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.97642564 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.994006769 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.979524776 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.232821319 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.465167977 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.986232787 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.978133596 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.463837854 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.077178842 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.014823951 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.987069324 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.239254193 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.990152165 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.977869039 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.979879343 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.013599519 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.987155729 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.97677148 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.304750069 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.985997928 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.994313571 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.982701983 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.978012414 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.153607243 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.984348215 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.140798591 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.984158594 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.985696848 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.977448592 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.234358593 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.990566868 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.479597835 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.990880044 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.980895986 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.072240974 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.147757929 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.491279059 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.991376012 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.158976949 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.42095228 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.000304129 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.987652697 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.44428172 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.006422049 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.987551548 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.982874675 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.983587117 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.981757973 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.027471616 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.996317351 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.405807836 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.48135117 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.321847807 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.003652471 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.995002204 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.983909993 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.308941496 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.987066696 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.982206647 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.233517652 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.490981348 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.992698285 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.990103503 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.467757717 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.993319801 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.999964661 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.988299725 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.243227388 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.994867322 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.02575374 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.983522793 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.988765445 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.986493219 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.998361405 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.989755368 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.982006759 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.454837155 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.090580559 seconds)
  done (took 245.03979576 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.977727075 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.977054028 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.975925254 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.976976965 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.976053812 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.98243954 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.986792804 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.97934365 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.983433943 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.978343362 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.976355439 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.977447629 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.976650977 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.978064229 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.017309441 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.984932475 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.589623016 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.97864834 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.976581661 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.975735493 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.621333734 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.982577112 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.977942266 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.981152136 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.978682249 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.980005548 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.98868688 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.01110335 seconds)
  done (took 170.649636721 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.984946385 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.094405313 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.996191419 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.011614061 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.989759974 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.981323918 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.004988318 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.999656396 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.987607062 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.982294751 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.981919812 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.042444307 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.993794384 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.079553306 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.012173421 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.00895194 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.083329607 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.990149446 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.982209138 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.982886181 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.011587687 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.977155515 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.042615204 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103577371 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.9962956 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.096797232 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.985243831 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.985991249 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.983869362 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.097452043 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.994682973 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.042547413 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.008648101 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.000834345 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.097613676 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.093772374 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.08695708 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.013570932 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.991299461 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.984205876 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.983624831 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.975445932 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.09723748 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.999584849 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.987678346 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.088584057 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.998677583 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.987932895 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.995097989 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.984859657 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.00162994 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.001454875 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.047560351 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.109236875 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.012678888 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.009002241 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.009742138 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.264506882 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.996732039 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.081154619 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.976922711 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.099000619 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.00162435 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.976299161 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.986629696 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.991406968 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.014524762 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.01373234 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.087777683 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.993108236 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.082635101 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.018082776 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.989919255 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.987786585 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.988394846 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.098338139 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.096034468 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.018585291 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.019177837 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.013528214 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.980228225 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.98711058 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.97815065 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.00370239 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.98882596 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.098962143 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.097118369 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.994540545 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.988892666 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.988803634 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.991309214 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.012267347 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.10421959 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.017052754 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.080558939 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.049903622 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.057156197 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.999391188 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.999690446 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.990684772 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.046718401 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.000142955 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.999111068 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.3092146 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.056150375 seconds)
  done (took 214.596389035 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.455163172 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.040188086 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.043574616 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.304557367 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.413667461 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.858620415 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.032468195 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.035479725 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.059137469 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.214203467 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.106755539 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.05446815 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.02277356 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.008726786 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.036621698 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.058167567 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.04430891 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.370877561 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.158618828 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.146964325 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.012899776 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.301726587 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.355686958 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.473542341 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.070238487 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.368254727 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.715750378 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.171619093 seconds)
  done (took 64.846776533 seconds)
done (took 857.189708771 seconds)
SAVING RESULT...
DONE!
